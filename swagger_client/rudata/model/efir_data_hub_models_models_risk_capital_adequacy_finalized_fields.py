# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fintool_id': 'int',
        'isin': 'str',
        'isin144a': 'str',
        'reg_code': 'str',
        'nrd_code': 'str',
        '_date': 'datetime',
        'reason': 'str',
        'code': 'str',
        'rwa': 'str',
        'is_pk': 'bool',
        'credit_risk_ratio': 'float',
        'error': 'str'
    }

    attribute_map = {
        'fintool_id': 'fintoolId',
        'isin': 'isin',
        'isin144a': 'isin144a',
        'reg_code': 'regCode',
        'nrd_code': 'nrdCode',
        '_date': 'date',
        'reason': 'reason',
        'code': 'code',
        'rwa': 'rwa',
        'is_pk': 'isPK',
        'credit_risk_ratio': 'creditRiskRatio',
        'error': 'error'
    }

    def __init__(self, fintool_id=None, isin=None, isin144a=None, reg_code=None, nrd_code=None, _date=None, reason=None, code=None, rwa=None, is_pk=None, credit_risk_ratio=None, error=None):  # noqa: E501
        """EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields - a model defined in Swagger"""  # noqa: E501
        self._fintool_id = None
        self._isin = None
        self._isin144a = None
        self._reg_code = None
        self._nrd_code = None
        self.__date = None
        self._reason = None
        self._code = None
        self._rwa = None
        self._is_pk = None
        self._credit_risk_ratio = None
        self._error = None
        self.discriminator = None
        if fintool_id is not None:
            self.fintool_id = fintool_id
        if isin is not None:
            self.isin = isin
        if isin144a is not None:
            self.isin144a = isin144a
        if reg_code is not None:
            self.reg_code = reg_code
        if nrd_code is not None:
            self.nrd_code = nrd_code
        if _date is not None:
            self._date = _date
        if reason is not None:
            self.reason = reason
        if code is not None:
            self.code = code
        if rwa is not None:
            self.rwa = rwa
        if is_pk is not None:
            self.is_pk = is_pk
        if credit_risk_ratio is not None:
            self.credit_risk_ratio = credit_risk_ratio
        if error is not None:
            self.error = error

    @property
    def fintool_id(self):
        """Gets the fintool_id of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501

        Идентификатор финансового инструмента в БД Интерфакс  # noqa: E501

        :return: The fintool_id of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :rtype: int
        """
        return self._fintool_id

    @fintool_id.setter
    def fintool_id(self, fintool_id):
        """Sets the fintool_id of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.

        Идентификатор финансового инструмента в БД Интерфакс  # noqa: E501

        :param fintool_id: The fintool_id of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :type: int
        """

        self._fintool_id = fintool_id

    @property
    def isin(self):
        """Gets the isin of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501

        Код финансового инструмента (ISIN)  # noqa: E501

        :return: The isin of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :rtype: str
        """
        return self._isin

    @isin.setter
    def isin(self, isin):
        """Sets the isin of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.

        Код финансового инструмента (ISIN)  # noqa: E501

        :param isin: The isin of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :type: str
        """

        self._isin = isin

    @property
    def isin144a(self):
        """Gets the isin144a of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501

        Дополнительный isin-код выпуска облигаций  # noqa: E501

        :return: The isin144a of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :rtype: str
        """
        return self._isin144a

    @isin144a.setter
    def isin144a(self, isin144a):
        """Sets the isin144a of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.

        Дополнительный isin-код выпуска облигаций  # noqa: E501

        :param isin144a: The isin144a of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :type: str
        """

        self._isin144a = isin144a

    @property
    def reg_code(self):
        """Gets the reg_code of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501

        Регистрационный номер  # noqa: E501

        :return: The reg_code of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :rtype: str
        """
        return self._reg_code

    @reg_code.setter
    def reg_code(self, reg_code):
        """Sets the reg_code of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.

        Регистрационный номер  # noqa: E501

        :param reg_code: The reg_code of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :type: str
        """

        self._reg_code = reg_code

    @property
    def nrd_code(self):
        """Gets the nrd_code of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501

        Код НРД  # noqa: E501

        :return: The nrd_code of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :rtype: str
        """
        return self._nrd_code

    @nrd_code.setter
    def nrd_code(self, nrd_code):
        """Sets the nrd_code of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.

        Код НРД  # noqa: E501

        :param nrd_code: The nrd_code of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :type: str
        """

        self._nrd_code = nrd_code

    @property
    def _date(self):
        """Gets the _date of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501

        Дата расчета норматива  # noqa: E501

        :return: The _date of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.

        Дата расчета норматива  # noqa: E501

        :param _date: The _date of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :type: datetime
        """

        self.__date = _date

    @property
    def reason(self):
        """Gets the reason of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501

        Обоснование (номер и абзац пункта из нормативного акта, на основании которого определен коэффициент риска creditRiskRatio)  # noqa: E501

        :return: The reason of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.

        Обоснование (номер и абзац пункта из нормативного акта, на основании которого определен коэффициент риска creditRiskRatio)  # noqa: E501

        :param reason: The reason of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :type: str
        """

        self._reason = reason

    @property
    def code(self):
        """Gets the code of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501

        Код актива (инструмента) согласно нормативного акта  # noqa: E501

        :return: The code of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.

        Код актива (инструмента) согласно нормативного акта  # noqa: E501

        :param code: The code of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :type: str
        """

        self._code = code

    @property
    def rwa(self):
        """Gets the rwa of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501

        Агрегат RWA (Risk-Weighted Assets)  # noqa: E501

        :return: The rwa of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :rtype: str
        """
        return self._rwa

    @rwa.setter
    def rwa(self, rwa):
        """Sets the rwa of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.

        Агрегат RWA (Risk-Weighted Assets)  # noqa: E501

        :param rwa: The rwa of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :type: str
        """

        self._rwa = rwa

    @property
    def is_pk(self):
        """Gets the is_pk of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501

        Флаг признака принадлежности актива (инструмента) к ПК- операции с повышенным коэффициентом риска  # noqa: E501

        :return: The is_pk of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :rtype: bool
        """
        return self._is_pk

    @is_pk.setter
    def is_pk(self, is_pk):
        """Sets the is_pk of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.

        Флаг признака принадлежности актива (инструмента) к ПК- операции с повышенным коэффициентом риска  # noqa: E501

        :param is_pk: The is_pk of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :type: bool
        """

        self._is_pk = is_pk

    @property
    def credit_risk_ratio(self):
        """Gets the credit_risk_ratio of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501

        Коэффициент риска для взвешивания актива (инструмента) в RWA  # noqa: E501

        :return: The credit_risk_ratio of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :rtype: float
        """
        return self._credit_risk_ratio

    @credit_risk_ratio.setter
    def credit_risk_ratio(self, credit_risk_ratio):
        """Sets the credit_risk_ratio of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.

        Коэффициент риска для взвешивания актива (инструмента) в RWA  # noqa: E501

        :param credit_risk_ratio: The credit_risk_ratio of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :type: float
        """

        self._credit_risk_ratio = credit_risk_ratio

    @property
    def error(self):
        """Gets the error of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501

        Текст ошибки в случае возникновения  # noqa: E501

        :return: The error of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.

        Текст ошибки в случае возникновения  # noqa: E501

        :param error: The error of this EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields.  # noqa: E501
        :type: str
        """

        self._error = error

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsRiskCapitalAdequacyFinalizedFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
