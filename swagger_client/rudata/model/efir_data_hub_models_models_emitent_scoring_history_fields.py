# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsEmitentScoringHistoryFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'code': 'str',
        'fininst_id': 'int',
        'model': 'str',
        'source': 'str',
        'last_reported_date': 'datetime',
        'update_date': 'str',
        'pd': 'float',
        'pd_pit': 'float',
        'rating': 'str',
        'rating_ru': 'str'
    }

    attribute_map = {
        'code': 'code',
        'fininst_id': 'fininstId',
        'model': 'model',
        'source': 'source',
        'last_reported_date': 'last_reported_date',
        'update_date': 'update_date',
        'pd': 'pd',
        'pd_pit': 'pd_pit',
        'rating': 'rating',
        'rating_ru': 'rating_ru'
    }

    def __init__(self, code=None, fininst_id=None, model=None, source=None, last_reported_date=None, update_date=None, pd=None, pd_pit=None, rating=None, rating_ru=None):  # noqa: E501
        """EfirDataHubModelsModelsEmitentScoringHistoryFields - a model defined in Swagger"""  # noqa: E501
        self._code = None
        self._fininst_id = None
        self._model = None
        self._source = None
        self._last_reported_date = None
        self._update_date = None
        self._pd = None
        self._pd_pit = None
        self._rating = None
        self._rating_ru = None
        self.discriminator = None
        if code is not None:
            self.code = code
        if fininst_id is not None:
            self.fininst_id = fininst_id
        if model is not None:
            self.model = model
        if source is not None:
            self.source = source
        if last_reported_date is not None:
            self.last_reported_date = last_reported_date
        if update_date is not None:
            self.update_date = update_date
        if pd is not None:
            self.pd = pd
        if pd_pit is not None:
            self.pd_pit = pd_pit
        if rating is not None:
            self.rating = rating
        if rating_ru is not None:
            self.rating_ru = rating_ru

    @property
    def code(self):
        """Gets the code of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501

        Значение Code из запроса (ИНН или ОГРН)  # noqa: E501

        :return: The code of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this EfirDataHubModelsModelsEmitentScoringHistoryFields.

        Значение Code из запроса (ИНН или ОГРН)  # noqa: E501

        :param code: The code of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :type: str
        """

        self._code = code

    @property
    def fininst_id(self):
        """Gets the fininst_id of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501

        Идентификатор компании в БД Интерфакс  # noqa: E501

        :return: The fininst_id of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :rtype: int
        """
        return self._fininst_id

    @fininst_id.setter
    def fininst_id(self, fininst_id):
        """Sets the fininst_id of this EfirDataHubModelsModelsEmitentScoringHistoryFields.

        Идентификатор компании в БД Интерфакс  # noqa: E501

        :param fininst_id: The fininst_id of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :type: int
        """

        self._fininst_id = fininst_id

    @property
    def model(self):
        """Gets the model of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501

        Модель расчета  # noqa: E501

        :return: The model of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this EfirDataHubModelsModelsEmitentScoringHistoryFields.

        Модель расчета  # noqa: E501

        :param model: The model of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :type: str
        """

        self._model = model

    @property
    def source(self):
        """Gets the source of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501

        База расчета - РСБУ или МСФО  # noqa: E501

        :return: The source of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this EfirDataHubModelsModelsEmitentScoringHistoryFields.

        База расчета - РСБУ или МСФО  # noqa: E501

        :param source: The source of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def last_reported_date(self):
        """Gets the last_reported_date of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501

        Дата окончания отчетности, по которой был рассчитан скоринг  # noqa: E501

        :return: The last_reported_date of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :rtype: datetime
        """
        return self._last_reported_date

    @last_reported_date.setter
    def last_reported_date(self, last_reported_date):
        """Sets the last_reported_date of this EfirDataHubModelsModelsEmitentScoringHistoryFields.

        Дата окончания отчетности, по которой был рассчитан скоринг  # noqa: E501

        :param last_reported_date: The last_reported_date of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :type: datetime
        """

        self._last_reported_date = last_reported_date

    @property
    def update_date(self):
        """Gets the update_date of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501

        Дата расчета скоринга  # noqa: E501

        :return: The update_date of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this EfirDataHubModelsModelsEmitentScoringHistoryFields.

        Дата расчета скоринга  # noqa: E501

        :param update_date: The update_date of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :type: str
        """

        self._update_date = update_date

    @property
    def pd(self):
        """Gets the pd of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501

        Вероятность дефолта в процентах  # noqa: E501

        :return: The pd of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._pd

    @pd.setter
    def pd(self, pd):
        """Sets the pd of this EfirDataHubModelsModelsEmitentScoringHistoryFields.

        Вероятность дефолта в процентах  # noqa: E501

        :param pd: The pd of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :type: float
        """

        self._pd = pd

    @property
    def pd_pit(self):
        """Gets the pd_pit of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501

        Вероятность дефолта в процентах, откорректированная на дату вызова  # noqa: E501

        :return: The pd_pit of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._pd_pit

    @pd_pit.setter
    def pd_pit(self, pd_pit):
        """Sets the pd_pit of this EfirDataHubModelsModelsEmitentScoringHistoryFields.

        Вероятность дефолта в процентах, откорректированная на дату вызова  # noqa: E501

        :param pd_pit: The pd_pit of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :type: float
        """

        self._pd_pit = pd_pit

    @property
    def rating(self):
        """Gets the rating of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501

        Рейтинг  # noqa: E501

        :return: The rating of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._rating

    @rating.setter
    def rating(self, rating):
        """Sets the rating of this EfirDataHubModelsModelsEmitentScoringHistoryFields.

        Рейтинг  # noqa: E501

        :param rating: The rating of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :type: str
        """

        self._rating = rating

    @property
    def rating_ru(self):
        """Gets the rating_ru of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501

        Рейтинг по национальной шкале  # noqa: E501

        :return: The rating_ru of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._rating_ru

    @rating_ru.setter
    def rating_ru(self, rating_ru):
        """Sets the rating_ru of this EfirDataHubModelsModelsEmitentScoringHistoryFields.

        Рейтинг по национальной шкале  # noqa: E501

        :param rating_ru: The rating_ru of this EfirDataHubModelsModelsEmitentScoringHistoryFields.  # noqa: E501
        :type: str
        """

        self._rating_ru = rating_ru

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsEmitentScoringHistoryFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsEmitentScoringHistoryFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
