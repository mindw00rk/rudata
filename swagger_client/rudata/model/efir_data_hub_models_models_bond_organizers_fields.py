# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsBondOrganizersFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id_fintool': 'int',
        'fininstid': 'int',
        'fullname': 'str',
        'okpo': 'str',
        'id_org_role': 'int',
        'note': 'str',
        'counter': 'int'
    }

    attribute_map = {
        'id_fintool': 'id_fintool',
        'fininstid': 'fininstid',
        'fullname': 'fullname',
        'okpo': 'okpo',
        'id_org_role': 'id_org_role',
        'note': 'note',
        'counter': 'counter'
    }

    def __init__(self, id_fintool=None, fininstid=None, fullname=None, okpo=None, id_org_role=None, note=None, counter=None):  # noqa: E501
        """EfirDataHubModelsModelsBondOrganizersFields - a model defined in Swagger"""  # noqa: E501
        self._id_fintool = None
        self._fininstid = None
        self._fullname = None
        self._okpo = None
        self._id_org_role = None
        self._note = None
        self._counter = None
        self.discriminator = None
        if id_fintool is not None:
            self.id_fintool = id_fintool
        if fininstid is not None:
            self.fininstid = fininstid
        if fullname is not None:
            self.fullname = fullname
        if okpo is not None:
            self.okpo = okpo
        if id_org_role is not None:
            self.id_org_role = id_org_role
        if note is not None:
            self.note = note
        if counter is not None:
            self.counter = counter

    @property
    def id_fintool(self):
        """Gets the id_fintool of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501

        Идентификатор облигации  # noqa: E501

        :return: The id_fintool of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :rtype: int
        """
        return self._id_fintool

    @id_fintool.setter
    def id_fintool(self, id_fintool):
        """Sets the id_fintool of this EfirDataHubModelsModelsBondOrganizersFields.

        Идентификатор облигации  # noqa: E501

        :param id_fintool: The id_fintool of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :type: int
        """

        self._id_fintool = id_fintool

    @property
    def fininstid(self):
        """Gets the fininstid of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501

        Идентификатор организации  # noqa: E501

        :return: The fininstid of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :rtype: int
        """
        return self._fininstid

    @fininstid.setter
    def fininstid(self, fininstid):
        """Sets the fininstid of this EfirDataHubModelsModelsBondOrganizersFields.

        Идентификатор организации  # noqa: E501

        :param fininstid: The fininstid of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :type: int
        """

        self._fininstid = fininstid

    @property
    def fullname(self):
        """Gets the fullname of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501

        Название организации  # noqa: E501

        :return: The fullname of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname

    @fullname.setter
    def fullname(self, fullname):
        """Sets the fullname of this EfirDataHubModelsModelsBondOrganizersFields.

        Название организации  # noqa: E501

        :param fullname: The fullname of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :type: str
        """

        self._fullname = fullname

    @property
    def okpo(self):
        """Gets the okpo of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501

        Код ОКПО организации  # noqa: E501

        :return: The okpo of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :rtype: str
        """
        return self._okpo

    @okpo.setter
    def okpo(self, okpo):
        """Sets the okpo of this EfirDataHubModelsModelsBondOrganizersFields.

        Код ОКПО организации  # noqa: E501

        :param okpo: The okpo of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :type: str
        """

        self._okpo = okpo

    @property
    def id_org_role(self):
        """Gets the id_org_role of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501

        Идентификатор роли организации, применительно к данному выпуску(см. /Bond/ListOrgRoles)  # noqa: E501

        :return: The id_org_role of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :rtype: int
        """
        return self._id_org_role

    @id_org_role.setter
    def id_org_role(self, id_org_role):
        """Sets the id_org_role of this EfirDataHubModelsModelsBondOrganizersFields.

        Идентификатор роли организации, применительно к данному выпуску(см. /Bond/ListOrgRoles)  # noqa: E501

        :param id_org_role: The id_org_role of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :type: int
        """

        self._id_org_role = id_org_role

    @property
    def note(self):
        """Gets the note of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501

        Примечание  # noqa: E501

        :return: The note of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this EfirDataHubModelsModelsBondOrganizersFields.

        Примечание  # noqa: E501

        :param note: The note of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :type: str
        """

        self._note = note

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501

        Общее количество записей в выборке  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsBondOrganizersFields.

        Общее количество записей в выборке  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsBondOrganizersFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsBondOrganizersFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsBondOrganizersFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
