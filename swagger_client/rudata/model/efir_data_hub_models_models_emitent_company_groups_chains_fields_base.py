# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'group_id': 'int',
        'group_shortname': 'str',
        'group_update_date': 'datetime',
        'member_inn': 'str',
        'chain_links': 'list[EfirDataHubModelsModelsEmitentCompanyGroupChainLinkBase]'
    }

    attribute_map = {
        'group_id': 'group_id',
        'group_shortname': 'group_shortname',
        'group_update_date': 'group_update_date',
        'member_inn': 'member_inn',
        'chain_links': 'chain_links'
    }

    def __init__(self, group_id=None, group_shortname=None, group_update_date=None, member_inn=None, chain_links=None):  # noqa: E501
        """EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase - a model defined in Swagger"""  # noqa: E501
        self._group_id = None
        self._group_shortname = None
        self._group_update_date = None
        self._member_inn = None
        self._chain_links = None
        self.discriminator = None
        if group_id is not None:
            self.group_id = group_id
        if group_shortname is not None:
            self.group_shortname = group_shortname
        if group_update_date is not None:
            self.group_update_date = group_update_date
        if member_inn is not None:
            self.member_inn = member_inn
        if chain_links is not None:
            self.chain_links = chain_links

    @property
    def group_id(self):
        """Gets the group_id of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501

        Идентификатор группы компаний  # noqa: E501

        :return: The group_id of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501
        :rtype: int
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.

        Идентификатор группы компаний  # noqa: E501

        :param group_id: The group_id of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501
        :type: int
        """

        self._group_id = group_id

    @property
    def group_shortname(self):
        """Gets the group_shortname of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501

        Краткое наименование группы  # noqa: E501

        :return: The group_shortname of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501
        :rtype: str
        """
        return self._group_shortname

    @group_shortname.setter
    def group_shortname(self, group_shortname):
        """Sets the group_shortname of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.

        Краткое наименование группы  # noqa: E501

        :param group_shortname: The group_shortname of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501
        :type: str
        """

        self._group_shortname = group_shortname

    @property
    def group_update_date(self):
        """Gets the group_update_date of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501

        Дата обновления описания групп компаний  # noqa: E501

        :return: The group_update_date of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501
        :rtype: datetime
        """
        return self._group_update_date

    @group_update_date.setter
    def group_update_date(self, group_update_date):
        """Sets the group_update_date of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.

        Дата обновления описания групп компаний  # noqa: E501

        :param group_update_date: The group_update_date of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501
        :type: datetime
        """

        self._group_update_date = group_update_date

    @property
    def member_inn(self):
        """Gets the member_inn of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501

        ИНН компании группы  # noqa: E501

        :return: The member_inn of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501
        :rtype: str
        """
        return self._member_inn

    @member_inn.setter
    def member_inn(self, member_inn):
        """Sets the member_inn of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.

        ИНН компании группы  # noqa: E501

        :param member_inn: The member_inn of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501
        :type: str
        """

        self._member_inn = member_inn

    @property
    def chain_links(self):
        """Gets the chain_links of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501

        Звенья цепочки  # noqa: E501

        :return: The chain_links of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501
        :rtype: list[EfirDataHubModelsModelsEmitentCompanyGroupChainLinkBase]
        """
        return self._chain_links

    @chain_links.setter
    def chain_links(self, chain_links):
        """Sets the chain_links of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.

        Звенья цепочки  # noqa: E501

        :param chain_links: The chain_links of this EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase.  # noqa: E501
        :type: list[EfirDataHubModelsModelsEmitentCompanyGroupChainLinkBase]
        """

        self._chain_links = chain_links

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsEmitentCompanyGroupsChainsFieldsBase):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
