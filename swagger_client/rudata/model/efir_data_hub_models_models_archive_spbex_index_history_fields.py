# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id_iss': 'int',
        'fintool_id': 'int',
        'time': 'datetime',
        'open': 'float',
        'high': 'float',
        'low': 'float',
        'last': 'float',
        'chng': 'float',
        'chng_pct': 'float',
        'volatility': 'float',
        'ppt': 'float',
        'seccode': 'str',
        'shortname_rus': 'str',
        'shortname_eng': 'str',
        'counter': 'int'
    }

    attribute_map = {
        'id_iss': 'id_iss',
        'fintool_id': 'fintoolId',
        'time': 'time',
        'open': 'open',
        'high': 'high',
        'low': 'low',
        'last': 'last',
        'chng': 'chng',
        'chng_pct': 'chng_pct',
        'volatility': 'volatility',
        'ppt': 'ppt',
        'seccode': 'seccode',
        'shortname_rus': 'shortname_rus',
        'shortname_eng': 'shortname_eng',
        'counter': 'counter'
    }

    def __init__(self, id_iss=None, fintool_id=None, time=None, open=None, high=None, low=None, last=None, chng=None, chng_pct=None, volatility=None, ppt=None, seccode=None, shortname_rus=None, shortname_eng=None, counter=None):  # noqa: E501
        """EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields - a model defined in Swagger"""  # noqa: E501
        self._id_iss = None
        self._fintool_id = None
        self._time = None
        self._open = None
        self._high = None
        self._low = None
        self._last = None
        self._chng = None
        self._chng_pct = None
        self._volatility = None
        self._ppt = None
        self._seccode = None
        self._shortname_rus = None
        self._shortname_eng = None
        self._counter = None
        self.discriminator = None
        if id_iss is not None:
            self.id_iss = id_iss
        if fintool_id is not None:
            self.fintool_id = fintool_id
        if time is not None:
            self.time = time
        if open is not None:
            self.open = open
        if high is not None:
            self.high = high
        if low is not None:
            self.low = low
        if last is not None:
            self.last = last
        if chng is not None:
            self.chng = chng
        if chng_pct is not None:
            self.chng_pct = chng_pct
        if volatility is not None:
            self.volatility = volatility
        if ppt is not None:
            self.ppt = ppt
        if seccode is not None:
            self.seccode = seccode
        if shortname_rus is not None:
            self.shortname_rus = shortname_rus
        if shortname_eng is not None:
            self.shortname_eng = shortname_eng
        if counter is not None:
            self.counter = counter

    @property
    def id_iss(self):
        """Gets the id_iss of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Идентификатор торгового инструмента в базе Интерфакс  # noqa: E501

        :return: The id_iss of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: int
        """
        return self._id_iss

    @id_iss.setter
    def id_iss(self, id_iss):
        """Sets the id_iss of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Идентификатор торгового инструмента в базе Интерфакс  # noqa: E501

        :param id_iss: The id_iss of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: int
        """

        self._id_iss = id_iss

    @property
    def fintool_id(self):
        """Gets the fintool_id of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Идентификатор индекса в базе Интерфакс  # noqa: E501

        :return: The fintool_id of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: int
        """
        return self._fintool_id

    @fintool_id.setter
    def fintool_id(self, fintool_id):
        """Sets the fintool_id of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Идентификатор индекса в базе Интерфакс  # noqa: E501

        :param fintool_id: The fintool_id of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: int
        """

        self._fintool_id = fintool_id

    @property
    def time(self):
        """Gets the time of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Дата  # noqa: E501

        :return: The time of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Дата  # noqa: E501

        :param time: The time of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: datetime
        """

        self._time = time

    @property
    def open(self):
        """Gets the open of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Значение на открытие  # noqa: E501

        :return: The open of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._open

    @open.setter
    def open(self, open):
        """Sets the open of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Значение на открытие  # noqa: E501

        :param open: The open of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: float
        """

        self._open = open

    @property
    def high(self):
        """Gets the high of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Максимальное значение  # noqa: E501

        :return: The high of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._high

    @high.setter
    def high(self, high):
        """Sets the high of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Максимальное значение  # noqa: E501

        :param high: The high of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: float
        """

        self._high = high

    @property
    def low(self):
        """Gets the low of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Минимальное значение  # noqa: E501

        :return: The low of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._low

    @low.setter
    def low(self, low):
        """Sets the low of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Минимальное значение  # noqa: E501

        :param low: The low of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: float
        """

        self._low = low

    @property
    def last(self):
        """Gets the last of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Значение на закрытие  # noqa: E501

        :return: The last of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._last

    @last.setter
    def last(self, last):
        """Sets the last of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Значение на закрытие  # noqa: E501

        :param last: The last of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: float
        """

        self._last = last

    @property
    def chng(self):
        """Gets the chng of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Абсолютное изменение  # noqa: E501

        :return: The chng of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._chng

    @chng.setter
    def chng(self, chng):
        """Sets the chng of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Абсолютное изменение  # noqa: E501

        :param chng: The chng of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: float
        """

        self._chng = chng

    @property
    def chng_pct(self):
        """Gets the chng_pct of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Относительное изменение, %  # noqa: E501

        :return: The chng_pct of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._chng_pct

    @chng_pct.setter
    def chng_pct(self, chng_pct):
        """Sets the chng_pct of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Относительное изменение, %  # noqa: E501

        :param chng_pct: The chng_pct of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: float
        """

        self._chng_pct = chng_pct

    @property
    def volatility(self):
        """Gets the volatility of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Волатильность  # noqa: E501

        :return: The volatility of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._volatility

    @volatility.setter
    def volatility(self, volatility):
        """Sets the volatility of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Волатильность  # noqa: E501

        :param volatility: The volatility of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: float
        """

        self._volatility = volatility

    @property
    def ppt(self):
        """Gets the ppt of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Цена портфеля  # noqa: E501

        :return: The ppt of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._ppt

    @ppt.setter
    def ppt(self, ppt):
        """Sets the ppt of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Цена портфеля  # noqa: E501

        :param ppt: The ppt of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: float
        """

        self._ppt = ppt

    @property
    def seccode(self):
        """Gets the seccode of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Код индекса на СПБ Бирже  # noqa: E501

        :return: The seccode of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._seccode

    @seccode.setter
    def seccode(self, seccode):
        """Sets the seccode of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Код индекса на СПБ Бирже  # noqa: E501

        :param seccode: The seccode of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: str
        """

        self._seccode = seccode

    @property
    def shortname_rus(self):
        """Gets the shortname_rus of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Краткое наименование индекса, рус.  # noqa: E501

        :return: The shortname_rus of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._shortname_rus

    @shortname_rus.setter
    def shortname_rus(self, shortname_rus):
        """Sets the shortname_rus of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Краткое наименование индекса, рус.  # noqa: E501

        :param shortname_rus: The shortname_rus of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: str
        """

        self._shortname_rus = shortname_rus

    @property
    def shortname_eng(self):
        """Gets the shortname_eng of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Краткое наименование индекса, анг.  # noqa: E501

        :return: The shortname_eng of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._shortname_eng

    @shortname_eng.setter
    def shortname_eng(self, shortname_eng):
        """Sets the shortname_eng of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Краткое наименование индекса, анг.  # noqa: E501

        :param shortname_eng: The shortname_eng of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: str
        """

        self._shortname_eng = shortname_eng

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501

        Общее количество записей в выборке, если указан pageNum = 1. Иначе = null  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.

        Общее количество записей в выборке, если указан pageNum = 1. Иначе = null  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsArchiveSpbexIndexHistoryFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
