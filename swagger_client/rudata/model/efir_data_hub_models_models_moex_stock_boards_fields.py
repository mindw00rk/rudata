# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsMoexStockBoardsFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fintool_id': 'int',
        'id_iss': 'int',
        'id': 'int',
        'secid': 'str',
        'boardid': 'str',
        'title': 'str',
        'board_group_id': 'int',
        'market_id': 'int',
        'market': 'str',
        'engine_id': 'int',
        'engine': 'str',
        'is_traded': 'bool',
        'decimals': 'int',
        'history_from': 'datetime',
        'history_till': 'datetime',
        'listed_from': 'datetime',
        'listed_till': 'datetime',
        'is_primary': 'bool',
        'currencyid': 'str',
        'counter': 'int',
        'rn': 'int'
    }

    attribute_map = {
        'fintool_id': 'fintoolId',
        'id_iss': 'id_iss',
        'id': 'id',
        'secid': 'secid',
        'boardid': 'boardid',
        'title': 'title',
        'board_group_id': 'board_group_id',
        'market_id': 'market_id',
        'market': 'market',
        'engine_id': 'engine_id',
        'engine': 'engine',
        'is_traded': 'is_traded',
        'decimals': 'decimals',
        'history_from': 'history_from',
        'history_till': 'history_till',
        'listed_from': 'listed_from',
        'listed_till': 'listed_till',
        'is_primary': 'is_primary',
        'currencyid': 'currencyid',
        'counter': 'counter',
        'rn': 'rn'
    }

    def __init__(self, fintool_id=None, id_iss=None, id=None, secid=None, boardid=None, title=None, board_group_id=None, market_id=None, market=None, engine_id=None, engine=None, is_traded=None, decimals=None, history_from=None, history_till=None, listed_from=None, listed_till=None, is_primary=None, currencyid=None, counter=None, rn=None):  # noqa: E501
        """EfirDataHubModelsModelsMoexStockBoardsFields - a model defined in Swagger"""  # noqa: E501
        self._fintool_id = None
        self._id_iss = None
        self._id = None
        self._secid = None
        self._boardid = None
        self._title = None
        self._board_group_id = None
        self._market_id = None
        self._market = None
        self._engine_id = None
        self._engine = None
        self._is_traded = None
        self._decimals = None
        self._history_from = None
        self._history_till = None
        self._listed_from = None
        self._listed_till = None
        self._is_primary = None
        self._currencyid = None
        self._counter = None
        self._rn = None
        self.discriminator = None
        if fintool_id is not None:
            self.fintool_id = fintool_id
        if id_iss is not None:
            self.id_iss = id_iss
        if id is not None:
            self.id = id
        if secid is not None:
            self.secid = secid
        if boardid is not None:
            self.boardid = boardid
        if title is not None:
            self.title = title
        if board_group_id is not None:
            self.board_group_id = board_group_id
        if market_id is not None:
            self.market_id = market_id
        if market is not None:
            self.market = market
        if engine_id is not None:
            self.engine_id = engine_id
        if engine is not None:
            self.engine = engine
        if is_traded is not None:
            self.is_traded = is_traded
        if decimals is not None:
            self.decimals = decimals
        if history_from is not None:
            self.history_from = history_from
        if history_till is not None:
            self.history_till = history_till
        if listed_from is not None:
            self.listed_from = listed_from
        if listed_till is not None:
            self.listed_till = listed_till
        if is_primary is not None:
            self.is_primary = is_primary
        if currencyid is not None:
            self.currencyid = currencyid
        if counter is not None:
            self.counter = counter
        if rn is not None:
            self.rn = rn

    @property
    def fintool_id(self):
        """Gets the fintool_id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Идентификатор финансового инструмента в БД Интерфакс  # noqa: E501

        :return: The fintool_id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: int
        """
        return self._fintool_id

    @fintool_id.setter
    def fintool_id(self, fintool_id):
        """Sets the fintool_id of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Идентификатор финансового инструмента в БД Интерфакс  # noqa: E501

        :param fintool_id: The fintool_id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: int
        """

        self._fintool_id = fintool_id

    @property
    def id_iss(self):
        """Gets the id_iss of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Идентификатор торгового инструмента в БД Интерфакс  # noqa: E501

        :return: The id_iss of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: int
        """
        return self._id_iss

    @id_iss.setter
    def id_iss(self, id_iss):
        """Sets the id_iss of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Идентификатор торгового инструмента в БД Интерфакс  # noqa: E501

        :param id_iss: The id_iss of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: int
        """

        self._id_iss = id_iss

    @property
    def id(self):
        """Gets the id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Служебный идентификатор строки  # noqa: E501

        :return: The id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Служебный идентификатор строки  # noqa: E501

        :param id: The id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def secid(self):
        """Gets the secid of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Уникальный торговый код (тикер) ценной бумаги на МБ  # noqa: E501

        :return: The secid of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: str
        """
        return self._secid

    @secid.setter
    def secid(self, secid):
        """Sets the secid of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Уникальный торговый код (тикер) ценной бумаги на МБ  # noqa: E501

        :param secid: The secid of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: str
        """

        self._secid = secid

    @property
    def boardid(self):
        """Gets the boardid of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Код режима торгов  # noqa: E501

        :return: The boardid of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: str
        """
        return self._boardid

    @boardid.setter
    def boardid(self, boardid):
        """Sets the boardid of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Код режима торгов  # noqa: E501

        :param boardid: The boardid of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: str
        """

        self._boardid = boardid

    @property
    def title(self):
        """Gets the title of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Наименование режима торгов  # noqa: E501

        :return: The title of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Наименование режима торгов  # noqa: E501

        :param title: The title of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def board_group_id(self):
        """Gets the board_group_id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Идентификатор для группы режима торгов  # noqa: E501

        :return: The board_group_id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: int
        """
        return self._board_group_id

    @board_group_id.setter
    def board_group_id(self, board_group_id):
        """Sets the board_group_id of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Идентификатор для группы режима торгов  # noqa: E501

        :param board_group_id: The board_group_id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: int
        """

        self._board_group_id = board_group_id

    @property
    def market_id(self):
        """Gets the market_id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Идентификатор рынка  # noqa: E501

        :return: The market_id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: int
        """
        return self._market_id

    @market_id.setter
    def market_id(self, market_id):
        """Sets the market_id of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Идентификатор рынка  # noqa: E501

        :param market_id: The market_id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: int
        """

        self._market_id = market_id

    @property
    def market(self):
        """Gets the market of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Наименование рынка  # noqa: E501

        :return: The market of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: str
        """
        return self._market

    @market.setter
    def market(self, market):
        """Sets the market of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Наименование рынка  # noqa: E501

        :param market: The market of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: str
        """

        self._market = market

    @property
    def engine_id(self):
        """Gets the engine_id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Идентификатор типа бумаг  # noqa: E501

        :return: The engine_id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: int
        """
        return self._engine_id

    @engine_id.setter
    def engine_id(self, engine_id):
        """Sets the engine_id of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Идентификатор типа бумаг  # noqa: E501

        :param engine_id: The engine_id of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: int
        """

        self._engine_id = engine_id

    @property
    def engine(self):
        """Gets the engine of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Тип бумаг  # noqa: E501

        :return: The engine of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: str
        """
        return self._engine

    @engine.setter
    def engine(self, engine):
        """Sets the engine of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Тип бумаг  # noqa: E501

        :param engine: The engine of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: str
        """

        self._engine = engine

    @property
    def is_traded(self):
        """Gets the is_traded of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Флаг торгуемой площадки  # noqa: E501

        :return: The is_traded of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: bool
        """
        return self._is_traded

    @is_traded.setter
    def is_traded(self, is_traded):
        """Sets the is_traded of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Флаг торгуемой площадки  # noqa: E501

        :param is_traded: The is_traded of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: bool
        """

        self._is_traded = is_traded

    @property
    def decimals(self):
        """Gets the decimals of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Округление после запятой  # noqa: E501

        :return: The decimals of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: int
        """
        return self._decimals

    @decimals.setter
    def decimals(self, decimals):
        """Sets the decimals of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Округление после запятой  # noqa: E501

        :param decimals: The decimals of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: int
        """

        self._decimals = decimals

    @property
    def history_from(self):
        """Gets the history_from of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Дата начала хранения истории  # noqa: E501

        :return: The history_from of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._history_from

    @history_from.setter
    def history_from(self, history_from):
        """Sets the history_from of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Дата начала хранения истории  # noqa: E501

        :param history_from: The history_from of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: datetime
        """

        self._history_from = history_from

    @property
    def history_till(self):
        """Gets the history_till of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Дата окончания хранения истории  # noqa: E501

        :return: The history_till of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._history_till

    @history_till.setter
    def history_till(self, history_till):
        """Sets the history_till of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Дата окончания хранения истории  # noqa: E501

        :param history_till: The history_till of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: datetime
        """

        self._history_till = history_till

    @property
    def listed_from(self):
        """Gets the listed_from of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Дата начала торговли  # noqa: E501

        :return: The listed_from of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._listed_from

    @listed_from.setter
    def listed_from(self, listed_from):
        """Sets the listed_from of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Дата начала торговли  # noqa: E501

        :param listed_from: The listed_from of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: datetime
        """

        self._listed_from = listed_from

    @property
    def listed_till(self):
        """Gets the listed_till of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Дата окончания торговли  # noqa: E501

        :return: The listed_till of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._listed_till

    @listed_till.setter
    def listed_till(self, listed_till):
        """Sets the listed_till of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Дата окончания торговли  # noqa: E501

        :param listed_till: The listed_till of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: datetime
        """

        self._listed_till = listed_till

    @property
    def is_primary(self):
        """Gets the is_primary of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Флаг приоритетности режима торгов  # noqa: E501

        :return: The is_primary of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: bool
        """
        return self._is_primary

    @is_primary.setter
    def is_primary(self, is_primary):
        """Sets the is_primary of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Флаг приоритетности режима торгов  # noqa: E501

        :param is_primary: The is_primary of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: bool
        """

        self._is_primary = is_primary

    @property
    def currencyid(self):
        """Gets the currencyid of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Валюта расчетов  # noqa: E501

        :return: The currencyid of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: str
        """
        return self._currencyid

    @currencyid.setter
    def currencyid(self, currencyid):
        """Sets the currencyid of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Валюта расчетов  # noqa: E501

        :param currencyid: The currencyid of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: str
        """

        self._currencyid = currencyid

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Общее количество записей в выборке  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Общее количество записей в выборке  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    @property
    def rn(self):
        """Gets the rn of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501

        Номер записи в выборке  # noqa: E501

        :return: The rn of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :rtype: int
        """
        return self._rn

    @rn.setter
    def rn(self, rn):
        """Sets the rn of this EfirDataHubModelsModelsMoexStockBoardsFields.

        Номер записи в выборке  # noqa: E501

        :param rn: The rn of this EfirDataHubModelsModelsMoexStockBoardsFields.  # noqa: E501
        :type: int
        """

        self._rn = rn

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsMoexStockBoardsFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsMoexStockBoardsFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
