# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsNsdNsdBondCouponsFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'code_nsd': 'str',
        'coupon_number': 'int',
        'interest_rate': 'float',
        'payment_currency': 'str',
        'payment_date_calc': 'datetime',
        'payment_date_fact': 'datetime',
        'payment_date_plan': 'datetime',
        'payment_size': 'float',
        'record_date_plan': 'datetime',
        'id_fintool': 'int',
        'record_date_calc': 'datetime',
        'lock_date_calc': 'datetime',
        'lock_date_plan': 'datetime',
        'unlock_date_calc': 'datetime',
        'unlock_date_plan': 'datetime',
        'action_id': 'int',
        'action_status_mn': 'str',
        'period_from_calc': 'datetime',
        'period_to_calc': 'datetime',
        'period_from_plan': 'datetime',
        'period_to_plan': 'datetime',
        'update_date': 'datetime',
        'nrd_sec_id': 'int',
        'action_type_code': 'str',
        'currency': 'str',
        'counter': 'int',
        'rn': 'int'
    }

    attribute_map = {
        'code_nsd': 'code_nsd',
        'coupon_number': 'coupon_number',
        'interest_rate': 'interest_rate',
        'payment_currency': 'payment_currency',
        'payment_date_calc': 'payment_date_calc',
        'payment_date_fact': 'payment_date_fact',
        'payment_date_plan': 'payment_date_plan',
        'payment_size': 'payment_size',
        'record_date_plan': 'record_date_plan',
        'id_fintool': 'id_fintool',
        'record_date_calc': 'record_date_calc',
        'lock_date_calc': 'lock_date_calc',
        'lock_date_plan': 'lock_date_plan',
        'unlock_date_calc': 'unlock_date_calc',
        'unlock_date_plan': 'unlock_date_plan',
        'action_id': 'action_id',
        'action_status_mn': 'action_status_mn',
        'period_from_calc': 'period_from_calc',
        'period_to_calc': 'period_to_calc',
        'period_from_plan': 'period_from_plan',
        'period_to_plan': 'period_to_plan',
        'update_date': 'update_date',
        'nrd_sec_id': 'nrd_sec_id',
        'action_type_code': 'action_type_code',
        'currency': 'currency',
        'counter': 'counter',
        'rn': 'rn'
    }

    def __init__(self, code_nsd=None, coupon_number=None, interest_rate=None, payment_currency=None, payment_date_calc=None, payment_date_fact=None, payment_date_plan=None, payment_size=None, record_date_plan=None, id_fintool=None, record_date_calc=None, lock_date_calc=None, lock_date_plan=None, unlock_date_calc=None, unlock_date_plan=None, action_id=None, action_status_mn=None, period_from_calc=None, period_to_calc=None, period_from_plan=None, period_to_plan=None, update_date=None, nrd_sec_id=None, action_type_code=None, currency=None, counter=None, rn=None):  # noqa: E501
        """EfirDataHubModelsModelsNsdNsdBondCouponsFields - a model defined in Swagger"""  # noqa: E501
        self._code_nsd = None
        self._coupon_number = None
        self._interest_rate = None
        self._payment_currency = None
        self._payment_date_calc = None
        self._payment_date_fact = None
        self._payment_date_plan = None
        self._payment_size = None
        self._record_date_plan = None
        self._id_fintool = None
        self._record_date_calc = None
        self._lock_date_calc = None
        self._lock_date_plan = None
        self._unlock_date_calc = None
        self._unlock_date_plan = None
        self._action_id = None
        self._action_status_mn = None
        self._period_from_calc = None
        self._period_to_calc = None
        self._period_from_plan = None
        self._period_to_plan = None
        self._update_date = None
        self._nrd_sec_id = None
        self._action_type_code = None
        self._currency = None
        self._counter = None
        self._rn = None
        self.discriminator = None
        if code_nsd is not None:
            self.code_nsd = code_nsd
        if coupon_number is not None:
            self.coupon_number = coupon_number
        if interest_rate is not None:
            self.interest_rate = interest_rate
        if payment_currency is not None:
            self.payment_currency = payment_currency
        if payment_date_calc is not None:
            self.payment_date_calc = payment_date_calc
        if payment_date_fact is not None:
            self.payment_date_fact = payment_date_fact
        if payment_date_plan is not None:
            self.payment_date_plan = payment_date_plan
        if payment_size is not None:
            self.payment_size = payment_size
        if record_date_plan is not None:
            self.record_date_plan = record_date_plan
        if id_fintool is not None:
            self.id_fintool = id_fintool
        if record_date_calc is not None:
            self.record_date_calc = record_date_calc
        if lock_date_calc is not None:
            self.lock_date_calc = lock_date_calc
        if lock_date_plan is not None:
            self.lock_date_plan = lock_date_plan
        if unlock_date_calc is not None:
            self.unlock_date_calc = unlock_date_calc
        if unlock_date_plan is not None:
            self.unlock_date_plan = unlock_date_plan
        if action_id is not None:
            self.action_id = action_id
        if action_status_mn is not None:
            self.action_status_mn = action_status_mn
        if period_from_calc is not None:
            self.period_from_calc = period_from_calc
        if period_to_calc is not None:
            self.period_to_calc = period_to_calc
        if period_from_plan is not None:
            self.period_from_plan = period_from_plan
        if period_to_plan is not None:
            self.period_to_plan = period_to_plan
        if update_date is not None:
            self.update_date = update_date
        if nrd_sec_id is not None:
            self.nrd_sec_id = nrd_sec_id
        if action_type_code is not None:
            self.action_type_code = action_type_code
        if currency is not None:
            self.currency = currency
        if counter is not None:
            self.counter = counter
        if rn is not None:
            self.rn = rn

    @property
    def code_nsd(self):
        """Gets the code_nsd of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Идентификатор выпуска в базе НРД  # noqa: E501

        :return: The code_nsd of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: str
        """
        return self._code_nsd

    @code_nsd.setter
    def code_nsd(self, code_nsd):
        """Sets the code_nsd of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Идентификатор выпуска в базе НРД  # noqa: E501

        :param code_nsd: The code_nsd of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: str
        """

        self._code_nsd = code_nsd

    @property
    def coupon_number(self):
        """Gets the coupon_number of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Номер купона  # noqa: E501

        :return: The coupon_number of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: int
        """
        return self._coupon_number

    @coupon_number.setter
    def coupon_number(self, coupon_number):
        """Sets the coupon_number of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Номер купона  # noqa: E501

        :param coupon_number: The coupon_number of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: int
        """

        self._coupon_number = coupon_number

    @property
    def interest_rate(self):
        """Gets the interest_rate of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Купонная ставка  # noqa: E501

        :return: The interest_rate of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: float
        """
        return self._interest_rate

    @interest_rate.setter
    def interest_rate(self, interest_rate):
        """Sets the interest_rate of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Купонная ставка  # noqa: E501

        :param interest_rate: The interest_rate of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: float
        """

        self._interest_rate = interest_rate

    @property
    def payment_currency(self):
        """Gets the payment_currency of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Валюта выплаты  # noqa: E501

        :return: The payment_currency of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: str
        """
        return self._payment_currency

    @payment_currency.setter
    def payment_currency(self, payment_currency):
        """Sets the payment_currency of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Валюта выплаты  # noqa: E501

        :param payment_currency: The payment_currency of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: str
        """

        self._payment_currency = payment_currency

    @property
    def payment_date_calc(self):
        """Gets the payment_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата окончания купона  # noqa: E501

        :return: The payment_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._payment_date_calc

    @payment_date_calc.setter
    def payment_date_calc(self, payment_date_calc):
        """Sets the payment_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата окончания купона  # noqa: E501

        :param payment_date_calc: The payment_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._payment_date_calc = payment_date_calc

    @property
    def payment_date_fact(self):
        """Gets the payment_date_fact of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата фактической выплаты  # noqa: E501

        :return: The payment_date_fact of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._payment_date_fact

    @payment_date_fact.setter
    def payment_date_fact(self, payment_date_fact):
        """Sets the payment_date_fact of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата фактической выплаты  # noqa: E501

        :param payment_date_fact: The payment_date_fact of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._payment_date_fact = payment_date_fact

    @property
    def payment_date_plan(self):
        """Gets the payment_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата выплаты купона  # noqa: E501

        :return: The payment_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._payment_date_plan

    @payment_date_plan.setter
    def payment_date_plan(self, payment_date_plan):
        """Sets the payment_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата выплаты купона  # noqa: E501

        :param payment_date_plan: The payment_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._payment_date_plan = payment_date_plan

    @property
    def payment_size(self):
        """Gets the payment_size of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Выплата на одну облигацию  # noqa: E501

        :return: The payment_size of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: float
        """
        return self._payment_size

    @payment_size.setter
    def payment_size(self, payment_size):
        """Sets the payment_size of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Выплата на одну облигацию  # noqa: E501

        :param payment_size: The payment_size of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: float
        """

        self._payment_size = payment_size

    @property
    def record_date_plan(self):
        """Gets the record_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата фиксации списка  # noqa: E501

        :return: The record_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._record_date_plan

    @record_date_plan.setter
    def record_date_plan(self, record_date_plan):
        """Sets the record_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата фиксации списка  # noqa: E501

        :param record_date_plan: The record_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._record_date_plan = record_date_plan

    @property
    def id_fintool(self):
        """Gets the id_fintool of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Идентификатор выпуска в базе Интерфакс (синоним fintoolid)  # noqa: E501

        :return: The id_fintool of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: int
        """
        return self._id_fintool

    @id_fintool.setter
    def id_fintool(self, id_fintool):
        """Sets the id_fintool of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Идентификатор выпуска в базе Интерфакс (синоним fintoolid)  # noqa: E501

        :param id_fintool: The id_fintool of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: int
        """

        self._id_fintool = id_fintool

    @property
    def record_date_calc(self):
        """Gets the record_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата фиксации расчетная  # noqa: E501

        :return: The record_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._record_date_calc

    @record_date_calc.setter
    def record_date_calc(self, record_date_calc):
        """Sets the record_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата фиксации расчетная  # noqa: E501

        :param record_date_calc: The record_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._record_date_calc = record_date_calc

    @property
    def lock_date_calc(self):
        """Gets the lock_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата блокировки расчетная  # noqa: E501

        :return: The lock_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._lock_date_calc

    @lock_date_calc.setter
    def lock_date_calc(self, lock_date_calc):
        """Sets the lock_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата блокировки расчетная  # noqa: E501

        :param lock_date_calc: The lock_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._lock_date_calc = lock_date_calc

    @property
    def lock_date_plan(self):
        """Gets the lock_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата блокировки плановая  # noqa: E501

        :return: The lock_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._lock_date_plan

    @lock_date_plan.setter
    def lock_date_plan(self, lock_date_plan):
        """Sets the lock_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата блокировки плановая  # noqa: E501

        :param lock_date_plan: The lock_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._lock_date_plan = lock_date_plan

    @property
    def unlock_date_calc(self):
        """Gets the unlock_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата разблокировки расчетная  # noqa: E501

        :return: The unlock_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._unlock_date_calc

    @unlock_date_calc.setter
    def unlock_date_calc(self, unlock_date_calc):
        """Sets the unlock_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата разблокировки расчетная  # noqa: E501

        :param unlock_date_calc: The unlock_date_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._unlock_date_calc = unlock_date_calc

    @property
    def unlock_date_plan(self):
        """Gets the unlock_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата разблокировки плановая  # noqa: E501

        :return: The unlock_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._unlock_date_plan

    @unlock_date_plan.setter
    def unlock_date_plan(self, unlock_date_plan):
        """Sets the unlock_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата разблокировки плановая  # noqa: E501

        :param unlock_date_plan: The unlock_date_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._unlock_date_plan = unlock_date_plan

    @property
    def action_id(self):
        """Gets the action_id of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Референс КД  # noqa: E501

        :return: The action_id of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: int
        """
        return self._action_id

    @action_id.setter
    def action_id(self, action_id):
        """Sets the action_id of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Референс КД  # noqa: E501

        :param action_id: The action_id of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: int
        """

        self._action_id = action_id

    @property
    def action_status_mn(self):
        """Gets the action_status_mn of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Состояние КД  # noqa: E501

        :return: The action_status_mn of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: str
        """
        return self._action_status_mn

    @action_status_mn.setter
    def action_status_mn(self, action_status_mn):
        """Sets the action_status_mn of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Состояние КД  # noqa: E501

        :param action_status_mn: The action_status_mn of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: str
        """

        self._action_status_mn = action_status_mn

    @property
    def period_from_calc(self):
        """Gets the period_from_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата начала купонного периода расчетная  # noqa: E501

        :return: The period_from_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._period_from_calc

    @period_from_calc.setter
    def period_from_calc(self, period_from_calc):
        """Sets the period_from_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата начала купонного периода расчетная  # noqa: E501

        :param period_from_calc: The period_from_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._period_from_calc = period_from_calc

    @property
    def period_to_calc(self):
        """Gets the period_to_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата окончания купонного периода расчетная  # noqa: E501

        :return: The period_to_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._period_to_calc

    @period_to_calc.setter
    def period_to_calc(self, period_to_calc):
        """Sets the period_to_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата окончания купонного периода расчетная  # noqa: E501

        :param period_to_calc: The period_to_calc of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._period_to_calc = period_to_calc

    @property
    def period_from_plan(self):
        """Gets the period_from_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата начала купонного периода плановая  # noqa: E501

        :return: The period_from_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._period_from_plan

    @period_from_plan.setter
    def period_from_plan(self, period_from_plan):
        """Sets the period_from_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата начала купонного периода плановая  # noqa: E501

        :param period_from_plan: The period_from_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._period_from_plan = period_from_plan

    @property
    def period_to_plan(self):
        """Gets the period_to_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата окончания купонного периода плановая  # noqa: E501

        :return: The period_to_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._period_to_plan

    @period_to_plan.setter
    def period_to_plan(self, period_to_plan):
        """Sets the period_to_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата окончания купонного периода плановая  # noqa: E501

        :param period_to_plan: The period_to_plan of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._period_to_plan = period_to_plan

    @property
    def update_date(self):
        """Gets the update_date of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Дата/время последнего изменения записи  # noqa: E501

        :return: The update_date of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Дата/время последнего изменения записи  # noqa: E501

        :param update_date: The update_date of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: datetime
        """

        self._update_date = update_date

    @property
    def nrd_sec_id(self):
        """Gets the nrd_sec_id of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Идентификатор бумаги в базе НРД  # noqa: E501

        :return: The nrd_sec_id of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: int
        """
        return self._nrd_sec_id

    @nrd_sec_id.setter
    def nrd_sec_id(self, nrd_sec_id):
        """Sets the nrd_sec_id of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Идентификатор бумаги в базе НРД  # noqa: E501

        :param nrd_sec_id: The nrd_sec_id of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: int
        """

        self._nrd_sec_id = nrd_sec_id

    @property
    def action_type_code(self):
        """Gets the action_type_code of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Код типа КД  # noqa: E501

        :return: The action_type_code of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: str
        """
        return self._action_type_code

    @action_type_code.setter
    def action_type_code(self, action_type_code):
        """Sets the action_type_code of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Код типа КД  # noqa: E501

        :param action_type_code: The action_type_code of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: str
        """

        self._action_type_code = action_type_code

    @property
    def currency(self):
        """Gets the currency of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Валюта ставки  # noqa: E501

        :return: The currency of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Валюта ставки  # noqa: E501

        :param currency: The currency of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: str
        """

        self._currency = currency

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Общее количество записей в выборке  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Общее количество записей в выборке  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    @property
    def rn(self):
        """Gets the rn of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501

        Номер записи в выборке  # noqa: E501

        :return: The rn of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :rtype: int
        """
        return self._rn

    @rn.setter
    def rn(self, rn):
        """Sets the rn of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.

        Номер записи в выборке  # noqa: E501

        :param rn: The rn of this EfirDataHubModelsModelsNsdNsdBondCouponsFields.  # noqa: E501
        :type: int
        """

        self._rn = rn

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsNsdNsdBondCouponsFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsNsdNsdBondCouponsFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
