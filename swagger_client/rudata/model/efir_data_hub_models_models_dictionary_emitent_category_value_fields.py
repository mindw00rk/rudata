# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fininstid': 'int',
        'inn': 'str',
        'ogrn': 'str',
        'categories': 'list[EfirDataHubModelsModelsDictionaryCategoryFields]',
        'counter': 'int'
    }

    attribute_map = {
        'fininstid': 'fininstid',
        'inn': 'inn',
        'ogrn': 'ogrn',
        'categories': 'categories',
        'counter': 'counter'
    }

    def __init__(self, fininstid=None, inn=None, ogrn=None, categories=None, counter=None):  # noqa: E501
        """EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields - a model defined in Swagger"""  # noqa: E501
        self._fininstid = None
        self._inn = None
        self._ogrn = None
        self._categories = None
        self._counter = None
        self.discriminator = None
        if fininstid is not None:
            self.fininstid = fininstid
        if inn is not None:
            self.inn = inn
        if ogrn is not None:
            self.ogrn = ogrn
        if categories is not None:
            self.categories = categories
        if counter is not None:
            self.counter = counter

    @property
    def fininstid(self):
        """Gets the fininstid of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501

        Идентификатор эмитента в базе Интерфакс  # noqa: E501

        :return: The fininstid of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501
        :rtype: int
        """
        return self._fininstid

    @fininstid.setter
    def fininstid(self, fininstid):
        """Sets the fininstid of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.

        Идентификатор эмитента в базе Интерфакс  # noqa: E501

        :param fininstid: The fininstid of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501
        :type: int
        """

        self._fininstid = fininstid

    @property
    def inn(self):
        """Gets the inn of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501

        ИНН  # noqa: E501

        :return: The inn of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501
        :rtype: str
        """
        return self._inn

    @inn.setter
    def inn(self, inn):
        """Sets the inn of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.

        ИНН  # noqa: E501

        :param inn: The inn of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501
        :type: str
        """

        self._inn = inn

    @property
    def ogrn(self):
        """Gets the ogrn of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501

        ОГРН  # noqa: E501

        :return: The ogrn of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501
        :rtype: str
        """
        return self._ogrn

    @ogrn.setter
    def ogrn(self, ogrn):
        """Sets the ogrn of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.

        ОГРН  # noqa: E501

        :param ogrn: The ogrn of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501
        :type: str
        """

        self._ogrn = ogrn

    @property
    def categories(self):
        """Gets the categories of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501

        Массив категорий компании  # noqa: E501

        :return: The categories of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501
        :rtype: list[EfirDataHubModelsModelsDictionaryCategoryFields]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.

        Массив категорий компании  # noqa: E501

        :param categories: The categories of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501
        :type: list[EfirDataHubModelsModelsDictionaryCategoryFields]
        """

        self._categories = categories

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501

        Общее количество записей в выборке  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.

        Общее количество записей в выборке  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsDictionaryEmitentCategoryValueFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
