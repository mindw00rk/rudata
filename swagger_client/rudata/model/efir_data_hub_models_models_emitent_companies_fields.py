# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsEmitentCompaniesFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fininstid': 'int',
        'shortname_rus': 'str',
        'fullname_rus': 'str',
        'inn': 'str',
        'okpo': 'str',
        'ogrn': 'str',
        'sector': 'str',
        'has_rsbu': 'bool',
        'has_ifrs': 'bool',
        'has_scoring': 'bool',
        'update_date': 'datetime',
        'note': 'str',
        'has_multipliers': 'bool',
        'counter': 'int',
        'rn': 'int'
    }

    attribute_map = {
        'fininstid': 'fininstid',
        'shortname_rus': 'shortname_rus',
        'fullname_rus': 'fullname_rus',
        'inn': 'inn',
        'okpo': 'okpo',
        'ogrn': 'ogrn',
        'sector': 'sector',
        'has_rsbu': 'has_rsbu',
        'has_ifrs': 'has_ifrs',
        'has_scoring': 'has_scoring',
        'update_date': 'update_date',
        'note': 'note',
        'has_multipliers': 'has_multipliers',
        'counter': 'counter',
        'rn': 'rn'
    }

    def __init__(self, fininstid=None, shortname_rus=None, fullname_rus=None, inn=None, okpo=None, ogrn=None, sector=None, has_rsbu=None, has_ifrs=None, has_scoring=None, update_date=None, note=None, has_multipliers=None, counter=None, rn=None):  # noqa: E501
        """EfirDataHubModelsModelsEmitentCompaniesFields - a model defined in Swagger"""  # noqa: E501
        self._fininstid = None
        self._shortname_rus = None
        self._fullname_rus = None
        self._inn = None
        self._okpo = None
        self._ogrn = None
        self._sector = None
        self._has_rsbu = None
        self._has_ifrs = None
        self._has_scoring = None
        self._update_date = None
        self._note = None
        self._has_multipliers = None
        self._counter = None
        self._rn = None
        self.discriminator = None
        if fininstid is not None:
            self.fininstid = fininstid
        if shortname_rus is not None:
            self.shortname_rus = shortname_rus
        if fullname_rus is not None:
            self.fullname_rus = fullname_rus
        if inn is not None:
            self.inn = inn
        if okpo is not None:
            self.okpo = okpo
        if ogrn is not None:
            self.ogrn = ogrn
        if sector is not None:
            self.sector = sector
        if has_rsbu is not None:
            self.has_rsbu = has_rsbu
        if has_ifrs is not None:
            self.has_ifrs = has_ifrs
        if has_scoring is not None:
            self.has_scoring = has_scoring
        if update_date is not None:
            self.update_date = update_date
        if note is not None:
            self.note = note
        if has_multipliers is not None:
            self.has_multipliers = has_multipliers
        if counter is not None:
            self.counter = counter
        if rn is not None:
            self.rn = rn

    @property
    def fininstid(self):
        """Gets the fininstid of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        Идентификатор эмитента в базе Интерфакс  # noqa: E501

        :return: The fininstid of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: int
        """
        return self._fininstid

    @fininstid.setter
    def fininstid(self, fininstid):
        """Sets the fininstid of this EfirDataHubModelsModelsEmitentCompaniesFields.

        Идентификатор эмитента в базе Интерфакс  # noqa: E501

        :param fininstid: The fininstid of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: int
        """

        self._fininstid = fininstid

    @property
    def shortname_rus(self):
        """Gets the shortname_rus of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        Наименование эмитента (рус.)  # noqa: E501

        :return: The shortname_rus of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: str
        """
        return self._shortname_rus

    @shortname_rus.setter
    def shortname_rus(self, shortname_rus):
        """Sets the shortname_rus of this EfirDataHubModelsModelsEmitentCompaniesFields.

        Наименование эмитента (рус.)  # noqa: E501

        :param shortname_rus: The shortname_rus of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: str
        """

        self._shortname_rus = shortname_rus

    @property
    def fullname_rus(self):
        """Gets the fullname_rus of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        Полное наименование эмитента (рус)  # noqa: E501

        :return: The fullname_rus of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_rus

    @fullname_rus.setter
    def fullname_rus(self, fullname_rus):
        """Sets the fullname_rus of this EfirDataHubModelsModelsEmitentCompaniesFields.

        Полное наименование эмитента (рус)  # noqa: E501

        :param fullname_rus: The fullname_rus of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: str
        """

        self._fullname_rus = fullname_rus

    @property
    def inn(self):
        """Gets the inn of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        ИНН  # noqa: E501

        :return: The inn of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: str
        """
        return self._inn

    @inn.setter
    def inn(self, inn):
        """Sets the inn of this EfirDataHubModelsModelsEmitentCompaniesFields.

        ИНН  # noqa: E501

        :param inn: The inn of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: str
        """

        self._inn = inn

    @property
    def okpo(self):
        """Gets the okpo of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        ОКПО  # noqa: E501

        :return: The okpo of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: str
        """
        return self._okpo

    @okpo.setter
    def okpo(self, okpo):
        """Sets the okpo of this EfirDataHubModelsModelsEmitentCompaniesFields.

        ОКПО  # noqa: E501

        :param okpo: The okpo of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: str
        """

        self._okpo = okpo

    @property
    def ogrn(self):
        """Gets the ogrn of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        ОГРН  # noqa: E501

        :return: The ogrn of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: str
        """
        return self._ogrn

    @ogrn.setter
    def ogrn(self, ogrn):
        """Sets the ogrn of this EfirDataHubModelsModelsEmitentCompaniesFields.

        ОГРН  # noqa: E501

        :param ogrn: The ogrn of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: str
        """

        self._ogrn = ogrn

    @property
    def sector(self):
        """Gets the sector of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        Сектор  # noqa: E501

        :return: The sector of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: str
        """
        return self._sector

    @sector.setter
    def sector(self, sector):
        """Sets the sector of this EfirDataHubModelsModelsEmitentCompaniesFields.

        Сектор  # noqa: E501

        :param sector: The sector of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: str
        """

        self._sector = sector

    @property
    def has_rsbu(self):
        """Gets the has_rsbu of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        Имеется отчетность по РСБУ  # noqa: E501

        :return: The has_rsbu of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: bool
        """
        return self._has_rsbu

    @has_rsbu.setter
    def has_rsbu(self, has_rsbu):
        """Sets the has_rsbu of this EfirDataHubModelsModelsEmitentCompaniesFields.

        Имеется отчетность по РСБУ  # noqa: E501

        :param has_rsbu: The has_rsbu of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: bool
        """

        self._has_rsbu = has_rsbu

    @property
    def has_ifrs(self):
        """Gets the has_ifrs of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        Имеется отчетность по МСФО  # noqa: E501

        :return: The has_ifrs of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: bool
        """
        return self._has_ifrs

    @has_ifrs.setter
    def has_ifrs(self, has_ifrs):
        """Sets the has_ifrs of this EfirDataHubModelsModelsEmitentCompaniesFields.

        Имеется отчетность по МСФО  # noqa: E501

        :param has_ifrs: The has_ifrs of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: bool
        """

        self._has_ifrs = has_ifrs

    @property
    def has_scoring(self):
        """Gets the has_scoring of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        Имеется рассчитанный скоринг  # noqa: E501

        :return: The has_scoring of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: bool
        """
        return self._has_scoring

    @has_scoring.setter
    def has_scoring(self, has_scoring):
        """Sets the has_scoring of this EfirDataHubModelsModelsEmitentCompaniesFields.

        Имеется рассчитанный скоринг  # noqa: E501

        :param has_scoring: The has_scoring of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: bool
        """

        self._has_scoring = has_scoring

    @property
    def update_date(self):
        """Gets the update_date of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        Дата последнего обновления информации по компании  # noqa: E501

        :return: The update_date of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: datetime
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this EfirDataHubModelsModelsEmitentCompaniesFields.

        Дата последнего обновления информации по компании  # noqa: E501

        :param update_date: The update_date of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: datetime
        """

        self._update_date = update_date

    @property
    def note(self):
        """Gets the note of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        Примечание  # noqa: E501

        :return: The note of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this EfirDataHubModelsModelsEmitentCompaniesFields.

        Примечание  # noqa: E501

        :param note: The note of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: str
        """

        self._note = note

    @property
    def has_multipliers(self):
        """Gets the has_multipliers of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        Имеются рассчитанные мультипликаторы  # noqa: E501

        :return: The has_multipliers of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: bool
        """
        return self._has_multipliers

    @has_multipliers.setter
    def has_multipliers(self, has_multipliers):
        """Sets the has_multipliers of this EfirDataHubModelsModelsEmitentCompaniesFields.

        Имеются рассчитанные мультипликаторы  # noqa: E501

        :param has_multipliers: The has_multipliers of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: bool
        """

        self._has_multipliers = has_multipliers

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        Общее количество записей в выборке  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsEmitentCompaniesFields.

        Общее количество записей в выборке  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    @property
    def rn(self):
        """Gets the rn of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501

        Номер записи в выборке  # noqa: E501

        :return: The rn of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :rtype: int
        """
        return self._rn

    @rn.setter
    def rn(self, rn):
        """Sets the rn of this EfirDataHubModelsModelsEmitentCompaniesFields.

        Номер записи в выборке  # noqa: E501

        :param rn: The rn of this EfirDataHubModelsModelsEmitentCompaniesFields.  # noqa: E501
        :type: int
        """

        self._rn = rn

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsEmitentCompaniesFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsEmitentCompaniesFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
