# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsDictionaryCountriesFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'shortname_rus': 'str',
        'shortname_eng': 'str',
        'fullname_rus': 'str',
        'fullname_eng': 'str',
        'code_rus': 'int',
        'code_eng': 'str',
        'currency_code': 'str',
        'code2_eng': 'str',
        'country_id': 'int',
        'gov_fininst_id': 'int',
        'currency_fintool_id': 'int',
        'have_calendar': 'bool',
        'unfriendliness': 'bool'
    }

    attribute_map = {
        'shortname_rus': 'shortname_rus',
        'shortname_eng': 'shortname_eng',
        'fullname_rus': 'fullname_rus',
        'fullname_eng': 'fullname_eng',
        'code_rus': 'code_rus',
        'code_eng': 'code_eng',
        'currency_code': 'currency_code',
        'code2_eng': 'code2_eng',
        'country_id': 'country_id',
        'gov_fininst_id': 'gov_fininst_id',
        'currency_fintool_id': 'currency_fintool_id',
        'have_calendar': 'have_calendar',
        'unfriendliness': 'unfriendliness'
    }

    def __init__(self, shortname_rus=None, shortname_eng=None, fullname_rus=None, fullname_eng=None, code_rus=None, code_eng=None, currency_code=None, code2_eng=None, country_id=None, gov_fininst_id=None, currency_fintool_id=None, have_calendar=None, unfriendliness=None):  # noqa: E501
        """EfirDataHubModelsModelsDictionaryCountriesFields - a model defined in Swagger"""  # noqa: E501
        self._shortname_rus = None
        self._shortname_eng = None
        self._fullname_rus = None
        self._fullname_eng = None
        self._code_rus = None
        self._code_eng = None
        self._currency_code = None
        self._code2_eng = None
        self._country_id = None
        self._gov_fininst_id = None
        self._currency_fintool_id = None
        self._have_calendar = None
        self._unfriendliness = None
        self.discriminator = None
        if shortname_rus is not None:
            self.shortname_rus = shortname_rus
        if shortname_eng is not None:
            self.shortname_eng = shortname_eng
        if fullname_rus is not None:
            self.fullname_rus = fullname_rus
        if fullname_eng is not None:
            self.fullname_eng = fullname_eng
        if code_rus is not None:
            self.code_rus = code_rus
        if code_eng is not None:
            self.code_eng = code_eng
        if currency_code is not None:
            self.currency_code = currency_code
        if code2_eng is not None:
            self.code2_eng = code2_eng
        if country_id is not None:
            self.country_id = country_id
        if gov_fininst_id is not None:
            self.gov_fininst_id = gov_fininst_id
        if currency_fintool_id is not None:
            self.currency_fintool_id = currency_fintool_id
        if have_calendar is not None:
            self.have_calendar = have_calendar
        if unfriendliness is not None:
            self.unfriendliness = unfriendliness

    @property
    def shortname_rus(self):
        """Gets the shortname_rus of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501

        Краткое наименование страны – русскоязычное  # noqa: E501

        :return: The shortname_rus of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :rtype: str
        """
        return self._shortname_rus

    @shortname_rus.setter
    def shortname_rus(self, shortname_rus):
        """Sets the shortname_rus of this EfirDataHubModelsModelsDictionaryCountriesFields.

        Краткое наименование страны – русскоязычное  # noqa: E501

        :param shortname_rus: The shortname_rus of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :type: str
        """

        self._shortname_rus = shortname_rus

    @property
    def shortname_eng(self):
        """Gets the shortname_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501

        Краткое наименование страны – англоязычное  # noqa: E501

        :return: The shortname_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :rtype: str
        """
        return self._shortname_eng

    @shortname_eng.setter
    def shortname_eng(self, shortname_eng):
        """Sets the shortname_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.

        Краткое наименование страны – англоязычное  # noqa: E501

        :param shortname_eng: The shortname_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :type: str
        """

        self._shortname_eng = shortname_eng

    @property
    def fullname_rus(self):
        """Gets the fullname_rus of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501

        Полное наименование страны – русскоязычное  # noqa: E501

        :return: The fullname_rus of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_rus

    @fullname_rus.setter
    def fullname_rus(self, fullname_rus):
        """Sets the fullname_rus of this EfirDataHubModelsModelsDictionaryCountriesFields.

        Полное наименование страны – русскоязычное  # noqa: E501

        :param fullname_rus: The fullname_rus of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :type: str
        """

        self._fullname_rus = fullname_rus

    @property
    def fullname_eng(self):
        """Gets the fullname_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501

        Полное наименование страны – англоязычное  # noqa: E501

        :return: The fullname_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_eng

    @fullname_eng.setter
    def fullname_eng(self, fullname_eng):
        """Sets the fullname_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.

        Полное наименование страны – англоязычное  # noqa: E501

        :param fullname_eng: The fullname_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :type: str
        """

        self._fullname_eng = fullname_eng

    @property
    def code_rus(self):
        """Gets the code_rus of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501

        Код страны (рус)  # noqa: E501

        :return: The code_rus of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :rtype: int
        """
        return self._code_rus

    @code_rus.setter
    def code_rus(self, code_rus):
        """Sets the code_rus of this EfirDataHubModelsModelsDictionaryCountriesFields.

        Код страны (рус)  # noqa: E501

        :param code_rus: The code_rus of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :type: int
        """

        self._code_rus = code_rus

    @property
    def code_eng(self):
        """Gets the code_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501

        Код страны (англ)  # noqa: E501

        :return: The code_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :rtype: str
        """
        return self._code_eng

    @code_eng.setter
    def code_eng(self, code_eng):
        """Sets the code_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.

        Код страны (англ)  # noqa: E501

        :param code_eng: The code_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :type: str
        """

        self._code_eng = code_eng

    @property
    def currency_code(self):
        """Gets the currency_code of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501

        Код валюты  # noqa: E501

        :return: The currency_code of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this EfirDataHubModelsModelsDictionaryCountriesFields.

        Код валюты  # noqa: E501

        :param currency_code: The currency_code of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :type: str
        """

        self._currency_code = currency_code

    @property
    def code2_eng(self):
        """Gets the code2_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501

        Двухбуквенный код страны в соответствии с ОКСМ  # noqa: E501

        :return: The code2_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :rtype: str
        """
        return self._code2_eng

    @code2_eng.setter
    def code2_eng(self, code2_eng):
        """Sets the code2_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.

        Двухбуквенный код страны в соответствии с ОКСМ  # noqa: E501

        :param code2_eng: The code2_eng of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :type: str
        """

        self._code2_eng = code2_eng

    @property
    def country_id(self):
        """Gets the country_id of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501

        Идентификатор страны в БД  # noqa: E501

        :return: The country_id of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :rtype: int
        """
        return self._country_id

    @country_id.setter
    def country_id(self, country_id):
        """Sets the country_id of this EfirDataHubModelsModelsDictionaryCountriesFields.

        Идентификатор страны в БД  # noqa: E501

        :param country_id: The country_id of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :type: int
        """

        self._country_id = country_id

    @property
    def gov_fininst_id(self):
        """Gets the gov_fininst_id of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501

        Идентификатор правительства страны в БД  # noqa: E501

        :return: The gov_fininst_id of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :rtype: int
        """
        return self._gov_fininst_id

    @gov_fininst_id.setter
    def gov_fininst_id(self, gov_fininst_id):
        """Sets the gov_fininst_id of this EfirDataHubModelsModelsDictionaryCountriesFields.

        Идентификатор правительства страны в БД  # noqa: E501

        :param gov_fininst_id: The gov_fininst_id of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :type: int
        """

        self._gov_fininst_id = gov_fininst_id

    @property
    def currency_fintool_id(self):
        """Gets the currency_fintool_id of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501

        Идентификатор валюты страны в БД  # noqa: E501

        :return: The currency_fintool_id of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :rtype: int
        """
        return self._currency_fintool_id

    @currency_fintool_id.setter
    def currency_fintool_id(self, currency_fintool_id):
        """Sets the currency_fintool_id of this EfirDataHubModelsModelsDictionaryCountriesFields.

        Идентификатор валюты страны в БД  # noqa: E501

        :param currency_fintool_id: The currency_fintool_id of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :type: int
        """

        self._currency_fintool_id = currency_fintool_id

    @property
    def have_calendar(self):
        """Gets the have_calendar of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501

        Признак наличия календаря  # noqa: E501

        :return: The have_calendar of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :rtype: bool
        """
        return self._have_calendar

    @have_calendar.setter
    def have_calendar(self, have_calendar):
        """Sets the have_calendar of this EfirDataHubModelsModelsDictionaryCountriesFields.

        Признак наличия календаря  # noqa: E501

        :param have_calendar: The have_calendar of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :type: bool
        """

        self._have_calendar = have_calendar

    @property
    def unfriendliness(self):
        """Gets the unfriendliness of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501

        Признак принадлежности страны к перечню недружественных стран:  - true - недружественная,  - false - дружественная,  - null - нейтральная  # noqa: E501

        :return: The unfriendliness of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :rtype: bool
        """
        return self._unfriendliness

    @unfriendliness.setter
    def unfriendliness(self, unfriendliness):
        """Sets the unfriendliness of this EfirDataHubModelsModelsDictionaryCountriesFields.

        Признак принадлежности страны к перечню недружественных стран:  - true - недружественная,  - false - дружественная,  - null - нейтральная  # noqa: E501

        :param unfriendliness: The unfriendliness of this EfirDataHubModelsModelsDictionaryCountriesFields.  # noqa: E501
        :type: bool
        """

        self._unfriendliness = unfriendliness

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsDictionaryCountriesFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsDictionaryCountriesFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
