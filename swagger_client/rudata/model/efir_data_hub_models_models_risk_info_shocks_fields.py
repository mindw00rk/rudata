# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsRiskInfoShocksFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fintoolid': 'int',
        'begin_date_price': 'float',
        'begin_date': 'datetime',
        'end_date_price': 'float',
        'end_date': 'datetime',
        'price_change_pct': 'float',
        'index_iss_id': 'int',
        'index_name': 'str',
        'index_change_pct': 'float',
        'sensitivity_coeff': 'float',
        'explained_change_pct': 'float',
        'price_shock_pct': 'float',
        'errors': 'str'
    }

    attribute_map = {
        'fintoolid': 'fintoolid',
        'begin_date_price': 'begin_date_price',
        'begin_date': 'begin_date',
        'end_date_price': 'end_date_price',
        'end_date': 'end_date',
        'price_change_pct': 'price_change_pct',
        'index_iss_id': 'index_iss_id',
        'index_name': 'index_name',
        'index_change_pct': 'index_change_pct',
        'sensitivity_coeff': 'sensitivity_coeff',
        'explained_change_pct': 'explained_change_pct',
        'price_shock_pct': 'price_shock_pct',
        'errors': 'errors'
    }

    def __init__(self, fintoolid=None, begin_date_price=None, begin_date=None, end_date_price=None, end_date=None, price_change_pct=None, index_iss_id=None, index_name=None, index_change_pct=None, sensitivity_coeff=None, explained_change_pct=None, price_shock_pct=None, errors=None):  # noqa: E501
        """EfirDataHubModelsModelsRiskInfoShocksFields - a model defined in Swagger"""  # noqa: E501
        self._fintoolid = None
        self._begin_date_price = None
        self._begin_date = None
        self._end_date_price = None
        self._end_date = None
        self._price_change_pct = None
        self._index_iss_id = None
        self._index_name = None
        self._index_change_pct = None
        self._sensitivity_coeff = None
        self._explained_change_pct = None
        self._price_shock_pct = None
        self._errors = None
        self.discriminator = None
        if fintoolid is not None:
            self.fintoolid = fintoolid
        if begin_date_price is not None:
            self.begin_date_price = begin_date_price
        if begin_date is not None:
            self.begin_date = begin_date
        if end_date_price is not None:
            self.end_date_price = end_date_price
        if end_date is not None:
            self.end_date = end_date
        if price_change_pct is not None:
            self.price_change_pct = price_change_pct
        if index_iss_id is not None:
            self.index_iss_id = index_iss_id
        if index_name is not None:
            self.index_name = index_name
        if index_change_pct is not None:
            self.index_change_pct = index_change_pct
        if sensitivity_coeff is not None:
            self.sensitivity_coeff = sensitivity_coeff
        if explained_change_pct is not None:
            self.explained_change_pct = explained_change_pct
        if price_shock_pct is not None:
            self.price_shock_pct = price_shock_pct
        if errors is not None:
            self.errors = errors

    @property
    def fintoolid(self):
        """Gets the fintoolid of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501

        FintoolId инструмента  # noqa: E501

        :return: The fintoolid of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :rtype: int
        """
        return self._fintoolid

    @fintoolid.setter
    def fintoolid(self, fintoolid):
        """Sets the fintoolid of this EfirDataHubModelsModelsRiskInfoShocksFields.

        FintoolId инструмента  # noqa: E501

        :param fintoolid: The fintoolid of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :type: int
        """

        self._fintoolid = fintoolid

    @property
    def begin_date_price(self):
        """Gets the begin_date_price of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501

        Цена последней сделки на начало периода  # noqa: E501

        :return: The begin_date_price of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :rtype: float
        """
        return self._begin_date_price

    @begin_date_price.setter
    def begin_date_price(self, begin_date_price):
        """Sets the begin_date_price of this EfirDataHubModelsModelsRiskInfoShocksFields.

        Цена последней сделки на начало периода  # noqa: E501

        :param begin_date_price: The begin_date_price of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :type: float
        """

        self._begin_date_price = begin_date_price

    @property
    def begin_date(self):
        """Gets the begin_date of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501

        Дата цены последней сделки на начало периода  # noqa: E501

        :return: The begin_date of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :rtype: datetime
        """
        return self._begin_date

    @begin_date.setter
    def begin_date(self, begin_date):
        """Sets the begin_date of this EfirDataHubModelsModelsRiskInfoShocksFields.

        Дата цены последней сделки на начало периода  # noqa: E501

        :param begin_date: The begin_date of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :type: datetime
        """

        self._begin_date = begin_date

    @property
    def end_date_price(self):
        """Gets the end_date_price of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501

        Цена последней сделки на конец периода  # noqa: E501

        :return: The end_date_price of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :rtype: float
        """
        return self._end_date_price

    @end_date_price.setter
    def end_date_price(self, end_date_price):
        """Sets the end_date_price of this EfirDataHubModelsModelsRiskInfoShocksFields.

        Цена последней сделки на конец периода  # noqa: E501

        :param end_date_price: The end_date_price of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :type: float
        """

        self._end_date_price = end_date_price

    @property
    def end_date(self):
        """Gets the end_date of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501

        Дата цены последней сделки на конец периода  # noqa: E501

        :return: The end_date of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this EfirDataHubModelsModelsRiskInfoShocksFields.

        Дата цены последней сделки на конец периода  # noqa: E501

        :param end_date: The end_date of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :type: datetime
        """

        self._end_date = end_date

    @property
    def price_change_pct(self):
        """Gets the price_change_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501

        Изменение цены последней сделки по сравнению с началом периода в %  # noqa: E501

        :return: The price_change_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :rtype: float
        """
        return self._price_change_pct

    @price_change_pct.setter
    def price_change_pct(self, price_change_pct):
        """Sets the price_change_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.

        Изменение цены последней сделки по сравнению с началом периода в %  # noqa: E501

        :param price_change_pct: The price_change_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :type: float
        """

        self._price_change_pct = price_change_pct

    @property
    def index_iss_id(self):
        """Gets the index_iss_id of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501

        IssId базового индекса  # noqa: E501

        :return: The index_iss_id of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :rtype: int
        """
        return self._index_iss_id

    @index_iss_id.setter
    def index_iss_id(self, index_iss_id):
        """Sets the index_iss_id of this EfirDataHubModelsModelsRiskInfoShocksFields.

        IssId базового индекса  # noqa: E501

        :param index_iss_id: The index_iss_id of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :type: int
        """

        self._index_iss_id = index_iss_id

    @property
    def index_name(self):
        """Gets the index_name of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501

        Имя базового индекса  # noqa: E501

        :return: The index_name of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :rtype: str
        """
        return self._index_name

    @index_name.setter
    def index_name(self, index_name):
        """Sets the index_name of this EfirDataHubModelsModelsRiskInfoShocksFields.

        Имя базового индекса  # noqa: E501

        :param index_name: The index_name of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :type: str
        """

        self._index_name = index_name

    @property
    def index_change_pct(self):
        """Gets the index_change_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501

        Изменение значения базового индекса в %  # noqa: E501

        :return: The index_change_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :rtype: float
        """
        return self._index_change_pct

    @index_change_pct.setter
    def index_change_pct(self, index_change_pct):
        """Sets the index_change_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.

        Изменение значения базового индекса в %  # noqa: E501

        :param index_change_pct: The index_change_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :type: float
        """

        self._index_change_pct = index_change_pct

    @property
    def sensitivity_coeff(self):
        """Gets the sensitivity_coeff of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501

        Коэффициент чувствительности к индексу  # noqa: E501

        :return: The sensitivity_coeff of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :rtype: float
        """
        return self._sensitivity_coeff

    @sensitivity_coeff.setter
    def sensitivity_coeff(self, sensitivity_coeff):
        """Sets the sensitivity_coeff of this EfirDataHubModelsModelsRiskInfoShocksFields.

        Коэффициент чувствительности к индексу  # noqa: E501

        :param sensitivity_coeff: The sensitivity_coeff of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :type: float
        """

        self._sensitivity_coeff = sensitivity_coeff

    @property
    def explained_change_pct(self):
        """Gets the explained_change_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501

        Объясненные изменения цены в %  # noqa: E501

        :return: The explained_change_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :rtype: float
        """
        return self._explained_change_pct

    @explained_change_pct.setter
    def explained_change_pct(self, explained_change_pct):
        """Sets the explained_change_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.

        Объясненные изменения цены в %  # noqa: E501

        :param explained_change_pct: The explained_change_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :type: float
        """

        self._explained_change_pct = explained_change_pct

    @property
    def price_shock_pct(self):
        """Gets the price_shock_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501

        Ценовой шок в %  # noqa: E501

        :return: The price_shock_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :rtype: float
        """
        return self._price_shock_pct

    @price_shock_pct.setter
    def price_shock_pct(self, price_shock_pct):
        """Sets the price_shock_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.

        Ценовой шок в %  # noqa: E501

        :param price_shock_pct: The price_shock_pct of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :type: float
        """

        self._price_shock_pct = price_shock_pct

    @property
    def errors(self):
        """Gets the errors of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501

        Описание ошибок расчета  # noqa: E501

        :return: The errors of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :rtype: str
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this EfirDataHubModelsModelsRiskInfoShocksFields.

        Описание ошибок расчета  # noqa: E501

        :param errors: The errors of this EfirDataHubModelsModelsRiskInfoShocksFields.  # noqa: E501
        :type: str
        """

        self._errors = errors

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsRiskInfoShocksFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsRiskInfoShocksFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
