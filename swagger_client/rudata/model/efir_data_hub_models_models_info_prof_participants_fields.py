# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsInfoProfParticipantsFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'companyid': 'str',
        'sampletime': 'datetime',
        'fininstid': 'int',
        'typecompanyid': 'int',
        'shortname_rus': 'str',
        'fullname_rus': 'str',
        'inn': 'str',
        'ogrn': 'str',
        'reg_number': 'str',
        'reestr_date': 'datetime',
        'address': 'str',
        'phone': 'str',
        'license': 'str',
        'www': 'str',
        'e_mail': 'str',
        'delete_date': 'datetime',
        'typecompany_name': 'str',
        'counter': 'int'
    }

    attribute_map = {
        'companyid': 'companyid',
        'sampletime': 'sampletime',
        'fininstid': 'fininstid',
        'typecompanyid': 'typecompanyid',
        'shortname_rus': 'shortname_rus',
        'fullname_rus': 'fullname_rus',
        'inn': 'inn',
        'ogrn': 'ogrn',
        'reg_number': 'reg_number',
        'reestr_date': 'reestr_date',
        'address': 'address',
        'phone': 'phone',
        'license': 'license',
        'www': 'www',
        'e_mail': 'e_mail',
        'delete_date': 'delete_date',
        'typecompany_name': 'typecompany_name',
        'counter': 'counter'
    }

    def __init__(self, companyid=None, sampletime=None, fininstid=None, typecompanyid=None, shortname_rus=None, fullname_rus=None, inn=None, ogrn=None, reg_number=None, reestr_date=None, address=None, phone=None, license=None, www=None, e_mail=None, delete_date=None, typecompany_name=None, counter=None):  # noqa: E501
        """EfirDataHubModelsModelsInfoProfParticipantsFields - a model defined in Swagger"""  # noqa: E501
        self._companyid = None
        self._sampletime = None
        self._fininstid = None
        self._typecompanyid = None
        self._shortname_rus = None
        self._fullname_rus = None
        self._inn = None
        self._ogrn = None
        self._reg_number = None
        self._reestr_date = None
        self._address = None
        self._phone = None
        self._license = None
        self._www = None
        self._e_mail = None
        self._delete_date = None
        self._typecompany_name = None
        self._counter = None
        self.discriminator = None
        if companyid is not None:
            self.companyid = companyid
        if sampletime is not None:
            self.sampletime = sampletime
        if fininstid is not None:
            self.fininstid = fininstid
        if typecompanyid is not None:
            self.typecompanyid = typecompanyid
        if shortname_rus is not None:
            self.shortname_rus = shortname_rus
        if fullname_rus is not None:
            self.fullname_rus = fullname_rus
        if inn is not None:
            self.inn = inn
        if ogrn is not None:
            self.ogrn = ogrn
        if reg_number is not None:
            self.reg_number = reg_number
        if reestr_date is not None:
            self.reestr_date = reestr_date
        if address is not None:
            self.address = address
        if phone is not None:
            self.phone = phone
        if license is not None:
            self.license = license
        if www is not None:
            self.www = www
        if e_mail is not None:
            self.e_mail = e_mail
        if delete_date is not None:
            self.delete_date = delete_date
        if typecompany_name is not None:
            self.typecompany_name = typecompany_name
        if counter is not None:
            self.counter = counter

    @property
    def companyid(self):
        """Gets the companyid of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Идентификатор компании в ЦБ  # noqa: E501

        :return: The companyid of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: str
        """
        return self._companyid

    @companyid.setter
    def companyid(self, companyid):
        """Sets the companyid of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Идентификатор компании в ЦБ  # noqa: E501

        :param companyid: The companyid of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: str
        """

        self._companyid = companyid

    @property
    def sampletime(self):
        """Gets the sampletime of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Дата изменения данных на сайте ЦБ  # noqa: E501

        :return: The sampletime of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._sampletime

    @sampletime.setter
    def sampletime(self, sampletime):
        """Sets the sampletime of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Дата изменения данных на сайте ЦБ  # noqa: E501

        :param sampletime: The sampletime of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: datetime
        """

        self._sampletime = sampletime

    @property
    def fininstid(self):
        """Gets the fininstid of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Идентификатор эмитента в базе Интерфакс  # noqa: E501

        :return: The fininstid of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: int
        """
        return self._fininstid

    @fininstid.setter
    def fininstid(self, fininstid):
        """Sets the fininstid of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Идентификатор эмитента в базе Интерфакс  # noqa: E501

        :param fininstid: The fininstid of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: int
        """

        self._fininstid = fininstid

    @property
    def typecompanyid(self):
        """Gets the typecompanyid of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Идентификатор типа профучастника  # noqa: E501

        :return: The typecompanyid of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: int
        """
        return self._typecompanyid

    @typecompanyid.setter
    def typecompanyid(self, typecompanyid):
        """Sets the typecompanyid of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Идентификатор типа профучастника  # noqa: E501

        :param typecompanyid: The typecompanyid of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: int
        """

        self._typecompanyid = typecompanyid

    @property
    def shortname_rus(self):
        """Gets the shortname_rus of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Краткое наименование профучастника в даных ЦБ  # noqa: E501

        :return: The shortname_rus of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: str
        """
        return self._shortname_rus

    @shortname_rus.setter
    def shortname_rus(self, shortname_rus):
        """Sets the shortname_rus of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Краткое наименование профучастника в даных ЦБ  # noqa: E501

        :param shortname_rus: The shortname_rus of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: str
        """

        self._shortname_rus = shortname_rus

    @property
    def fullname_rus(self):
        """Gets the fullname_rus of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Полное наименование профучастника в даных ЦБ  # noqa: E501

        :return: The fullname_rus of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_rus

    @fullname_rus.setter
    def fullname_rus(self, fullname_rus):
        """Sets the fullname_rus of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Полное наименование профучастника в даных ЦБ  # noqa: E501

        :param fullname_rus: The fullname_rus of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: str
        """

        self._fullname_rus = fullname_rus

    @property
    def inn(self):
        """Gets the inn of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        ИНН  # noqa: E501

        :return: The inn of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: str
        """
        return self._inn

    @inn.setter
    def inn(self, inn):
        """Sets the inn of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        ИНН  # noqa: E501

        :param inn: The inn of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: str
        """

        self._inn = inn

    @property
    def ogrn(self):
        """Gets the ogrn of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        ОГРН  # noqa: E501

        :return: The ogrn of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: str
        """
        return self._ogrn

    @ogrn.setter
    def ogrn(self, ogrn):
        """Sets the ogrn of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        ОГРН  # noqa: E501

        :param ogrn: The ogrn of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: str
        """

        self._ogrn = ogrn

    @property
    def reg_number(self):
        """Gets the reg_number of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Регистрационный номер по данным ЦБ (для страховых компаний, СРО, КРА)  # noqa: E501

        :return: The reg_number of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: str
        """
        return self._reg_number

    @reg_number.setter
    def reg_number(self, reg_number):
        """Sets the reg_number of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Регистрационный номер по данным ЦБ (для страховых компаний, СРО, КРА)  # noqa: E501

        :param reg_number: The reg_number of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: str
        """

        self._reg_number = reg_number

    @property
    def reestr_date(self):
        """Gets the reestr_date of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Дата включения в реестр  # noqa: E501

        :return: The reestr_date of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._reestr_date

    @reestr_date.setter
    def reestr_date(self, reestr_date):
        """Sets the reestr_date of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Дата включения в реестр  # noqa: E501

        :param reestr_date: The reestr_date of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: datetime
        """

        self._reestr_date = reestr_date

    @property
    def address(self):
        """Gets the address of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Адрес местонахождения  # noqa: E501

        :return: The address of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Адрес местонахождения  # noqa: E501

        :param address: The address of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def phone(self):
        """Gets the phone of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Телефоны  # noqa: E501

        :return: The phone of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Телефоны  # noqa: E501

        :param phone: The phone of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def license(self):
        """Gets the license of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Лицензии(в текстовой форме)  # noqa: E501

        :return: The license of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: str
        """
        return self._license

    @license.setter
    def license(self, license):
        """Sets the license of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Лицензии(в текстовой форме)  # noqa: E501

        :param license: The license of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: str
        """

        self._license = license

    @property
    def www(self):
        """Gets the www of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Веб-сайты  # noqa: E501

        :return: The www of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: str
        """
        return self._www

    @www.setter
    def www(self, www):
        """Sets the www of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Веб-сайты  # noqa: E501

        :param www: The www of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: str
        """

        self._www = www

    @property
    def e_mail(self):
        """Gets the e_mail of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Адреса электронной почты  # noqa: E501

        :return: The e_mail of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: str
        """
        return self._e_mail

    @e_mail.setter
    def e_mail(self, e_mail):
        """Sets the e_mail of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Адреса электронной почты  # noqa: E501

        :param e_mail: The e_mail of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: str
        """

        self._e_mail = e_mail

    @property
    def delete_date(self):
        """Gets the delete_date of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Дата удаления записи из данных ЦБ  # noqa: E501

        :return: The delete_date of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._delete_date

    @delete_date.setter
    def delete_date(self, delete_date):
        """Sets the delete_date of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Дата удаления записи из данных ЦБ  # noqa: E501

        :param delete_date: The delete_date of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: datetime
        """

        self._delete_date = delete_date

    @property
    def typecompany_name(self):
        """Gets the typecompany_name of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Тип профучастника  # noqa: E501

        :return: The typecompany_name of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: str
        """
        return self._typecompany_name

    @typecompany_name.setter
    def typecompany_name(self, typecompany_name):
        """Sets the typecompany_name of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Тип профучастника  # noqa: E501

        :param typecompany_name: The typecompany_name of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: str
        """

        self._typecompany_name = typecompany_name

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501

        Общее количество записей в выборке  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsInfoProfParticipantsFields.

        Общее количество записей в выборке  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsInfoProfParticipantsFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsInfoProfParticipantsFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsInfoProfParticipantsFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
