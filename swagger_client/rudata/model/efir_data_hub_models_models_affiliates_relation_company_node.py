# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsAffiliatesRelationCompanyNode(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'spark_id': 'int',
        'inn': 'str',
        'ogrn': 'str',
        'fininst_id': 'int',
        'short_name': 'str'
    }

    attribute_map = {
        'spark_id': 'sparkId',
        'inn': 'inn',
        'ogrn': 'ogrn',
        'fininst_id': 'fininstId',
        'short_name': 'short_name'
    }

    def __init__(self, spark_id=None, inn=None, ogrn=None, fininst_id=None, short_name=None):  # noqa: E501
        """EfirDataHubModelsModelsAffiliatesRelationCompanyNode - a model defined in Swagger"""  # noqa: E501
        self._spark_id = None
        self._inn = None
        self._ogrn = None
        self._fininst_id = None
        self._short_name = None
        self.discriminator = None
        if spark_id is not None:
            self.spark_id = spark_id
        if inn is not None:
            self.inn = inn
        if ogrn is not None:
            self.ogrn = ogrn
        if fininst_id is not None:
            self.fininst_id = fininst_id
        if short_name is not None:
            self.short_name = short_name

    @property
    def spark_id(self):
        """Gets the spark_id of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501

        СПАРК ID компании  # noqa: E501

        :return: The spark_id of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501
        :rtype: int
        """
        return self._spark_id

    @spark_id.setter
    def spark_id(self, spark_id):
        """Sets the spark_id of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.

        СПАРК ID компании  # noqa: E501

        :param spark_id: The spark_id of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501
        :type: int
        """

        self._spark_id = spark_id

    @property
    def inn(self):
        """Gets the inn of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501

        ИНН  # noqa: E501

        :return: The inn of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501
        :rtype: str
        """
        return self._inn

    @inn.setter
    def inn(self, inn):
        """Sets the inn of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.

        ИНН  # noqa: E501

        :param inn: The inn of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501
        :type: str
        """

        self._inn = inn

    @property
    def ogrn(self):
        """Gets the ogrn of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501

        ОГРН  # noqa: E501

        :return: The ogrn of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501
        :rtype: str
        """
        return self._ogrn

    @ogrn.setter
    def ogrn(self, ogrn):
        """Sets the ogrn of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.

        ОГРН  # noqa: E501

        :param ogrn: The ogrn of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501
        :type: str
        """

        self._ogrn = ogrn

    @property
    def fininst_id(self):
        """Gets the fininst_id of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501

        Интерфакс ID компании  # noqa: E501

        :return: The fininst_id of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501
        :rtype: int
        """
        return self._fininst_id

    @fininst_id.setter
    def fininst_id(self, fininst_id):
        """Sets the fininst_id of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.

        Интерфакс ID компании  # noqa: E501

        :param fininst_id: The fininst_id of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501
        :type: int
        """

        self._fininst_id = fininst_id

    @property
    def short_name(self):
        """Gets the short_name of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501

        Краткое наименование компании  # noqa: E501

        :return: The short_name of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.

        Краткое наименование компании  # noqa: E501

        :param short_name: The short_name of this EfirDataHubModelsModelsAffiliatesRelationCompanyNode.  # noqa: E501
        :type: str
        """

        self._short_name = short_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsAffiliatesRelationCompanyNode, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsAffiliatesRelationCompanyNode):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
