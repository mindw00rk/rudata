# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsInfoFieldsFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'name': 'str',
        'full_name_rus': 'str',
        'full_name_eng': 'str',
        'comment_rus': 'str',
        'comment_eng': 'str',
        'activity': 'int',
        'visible': 'int',
        'id_fields_group': 'int',
        'fields_group_name': 'str',
        'ctype': 'str',
        'can_alert': 'int',
        'functional_field': 'int'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'full_name_rus': 'full_name_rus',
        'full_name_eng': 'full_name_eng',
        'comment_rus': 'comment_rus',
        'comment_eng': 'comment_eng',
        'activity': 'activity',
        'visible': 'visible',
        'id_fields_group': 'id_fields_group',
        'fields_group_name': 'fields_group_name',
        'ctype': 'ctype',
        'can_alert': 'can_alert',
        'functional_field': 'functional_field'
    }

    def __init__(self, id=None, name=None, full_name_rus=None, full_name_eng=None, comment_rus=None, comment_eng=None, activity=None, visible=None, id_fields_group=None, fields_group_name=None, ctype=None, can_alert=None, functional_field=None):  # noqa: E501
        """EfirDataHubModelsModelsInfoFieldsFields - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._name = None
        self._full_name_rus = None
        self._full_name_eng = None
        self._comment_rus = None
        self._comment_eng = None
        self._activity = None
        self._visible = None
        self._id_fields_group = None
        self._fields_group_name = None
        self._ctype = None
        self._can_alert = None
        self._functional_field = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if full_name_rus is not None:
            self.full_name_rus = full_name_rus
        if full_name_eng is not None:
            self.full_name_eng = full_name_eng
        if comment_rus is not None:
            self.comment_rus = comment_rus
        if comment_eng is not None:
            self.comment_eng = comment_eng
        if activity is not None:
            self.activity = activity
        if visible is not None:
            self.visible = visible
        if id_fields_group is not None:
            self.id_fields_group = id_fields_group
        if fields_group_name is not None:
            self.fields_group_name = fields_group_name
        if ctype is not None:
            self.ctype = ctype
        if can_alert is not None:
            self.can_alert = can_alert
        if functional_field is not None:
            self.functional_field = functional_field

    @property
    def id(self):
        """Gets the id of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501

        Идентификатор поля  # noqa: E501

        :return: The id of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EfirDataHubModelsModelsInfoFieldsFields.

        Идентификатор поля  # noqa: E501

        :param id: The id of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501

        Кодовое наименование поля  # noqa: E501

        :return: The name of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EfirDataHubModelsModelsInfoFieldsFields.

        Кодовое наименование поля  # noqa: E501

        :param name: The name of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def full_name_rus(self):
        """Gets the full_name_rus of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501

        Наименование поля (рус.)  # noqa: E501

        :return: The full_name_rus of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._full_name_rus

    @full_name_rus.setter
    def full_name_rus(self, full_name_rus):
        """Sets the full_name_rus of this EfirDataHubModelsModelsInfoFieldsFields.

        Наименование поля (рус.)  # noqa: E501

        :param full_name_rus: The full_name_rus of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :type: str
        """

        self._full_name_rus = full_name_rus

    @property
    def full_name_eng(self):
        """Gets the full_name_eng of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501

        Наименование поля (англ.)  # noqa: E501

        :return: The full_name_eng of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._full_name_eng

    @full_name_eng.setter
    def full_name_eng(self, full_name_eng):
        """Sets the full_name_eng of this EfirDataHubModelsModelsInfoFieldsFields.

        Наименование поля (англ.)  # noqa: E501

        :param full_name_eng: The full_name_eng of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :type: str
        """

        self._full_name_eng = full_name_eng

    @property
    def comment_rus(self):
        """Gets the comment_rus of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501

        Комментарий (рус.)  # noqa: E501

        :return: The comment_rus of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._comment_rus

    @comment_rus.setter
    def comment_rus(self, comment_rus):
        """Sets the comment_rus of this EfirDataHubModelsModelsInfoFieldsFields.

        Комментарий (рус.)  # noqa: E501

        :param comment_rus: The comment_rus of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :type: str
        """

        self._comment_rus = comment_rus

    @property
    def comment_eng(self):
        """Gets the comment_eng of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501

        Комментарий (англ.)  # noqa: E501

        :return: The comment_eng of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._comment_eng

    @comment_eng.setter
    def comment_eng(self, comment_eng):
        """Sets the comment_eng of this EfirDataHubModelsModelsInfoFieldsFields.

        Комментарий (англ.)  # noqa: E501

        :param comment_eng: The comment_eng of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :type: str
        """

        self._comment_eng = comment_eng

    @property
    def activity(self):
        """Gets the activity of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501

        Активность  # noqa: E501

        :return: The activity of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._activity

    @activity.setter
    def activity(self, activity):
        """Sets the activity of this EfirDataHubModelsModelsInfoFieldsFields.

        Активность  # noqa: E501

        :param activity: The activity of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :type: int
        """

        self._activity = activity

    @property
    def visible(self):
        """Gets the visible of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501

        Видимость  # noqa: E501

        :return: The visible of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._visible

    @visible.setter
    def visible(self, visible):
        """Sets the visible of this EfirDataHubModelsModelsInfoFieldsFields.

        Видимость  # noqa: E501

        :param visible: The visible of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :type: int
        """

        self._visible = visible

    @property
    def id_fields_group(self):
        """Gets the id_fields_group of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501

        Идентификатор группы полей  # noqa: E501

        :return: The id_fields_group of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._id_fields_group

    @id_fields_group.setter
    def id_fields_group(self, id_fields_group):
        """Sets the id_fields_group of this EfirDataHubModelsModelsInfoFieldsFields.

        Идентификатор группы полей  # noqa: E501

        :param id_fields_group: The id_fields_group of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :type: int
        """

        self._id_fields_group = id_fields_group

    @property
    def fields_group_name(self):
        """Gets the fields_group_name of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501

        Наименование группы полей  # noqa: E501

        :return: The fields_group_name of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._fields_group_name

    @fields_group_name.setter
    def fields_group_name(self, fields_group_name):
        """Sets the fields_group_name of this EfirDataHubModelsModelsInfoFieldsFields.

        Наименование группы полей  # noqa: E501

        :param fields_group_name: The fields_group_name of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :type: str
        """

        self._fields_group_name = fields_group_name

    @property
    def ctype(self):
        """Gets the ctype of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501

        Тип данных  # noqa: E501

        :return: The ctype of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._ctype

    @ctype.setter
    def ctype(self, ctype):
        """Sets the ctype of this EfirDataHubModelsModelsInfoFieldsFields.

        Тип данных  # noqa: E501

        :param ctype: The ctype of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :type: str
        """

        self._ctype = ctype

    @property
    def can_alert(self):
        """Gets the can_alert of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501

        Возможность использования в алертах  # noqa: E501

        :return: The can_alert of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._can_alert

    @can_alert.setter
    def can_alert(self, can_alert):
        """Sets the can_alert of this EfirDataHubModelsModelsInfoFieldsFields.

        Возможность использования в алертах  # noqa: E501

        :param can_alert: The can_alert of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :type: int
        """

        self._can_alert = can_alert

    @property
    def functional_field(self):
        """Gets the functional_field of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501

        Функциональное ли поле (в большинстве случаев показывает меняется поле или нет в онлайне)  # noqa: E501

        :return: The functional_field of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._functional_field

    @functional_field.setter
    def functional_field(self, functional_field):
        """Sets the functional_field of this EfirDataHubModelsModelsInfoFieldsFields.

        Функциональное ли поле (в большинстве случаев показывает меняется поле или нет в онлайне)  # noqa: E501

        :param functional_field: The functional_field of this EfirDataHubModelsModelsInfoFieldsFields.  # noqa: E501
        :type: int
        """

        self._functional_field = functional_field

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsInfoFieldsFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsInfoFieldsFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
