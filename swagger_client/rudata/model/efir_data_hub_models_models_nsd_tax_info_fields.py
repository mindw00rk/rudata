# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsNsdTaxInfoFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fintool_id': 'int',
        'nrdcode': 'str',
        'nrd_sec_id': 'int',
        'update_date': 'datetime',
        'tax_rate': 'float',
        'tax_country_id': 'int',
        'tax_country_name': 'str',
        'tax_country_name_en': 'str',
        'tax_types_id': 'int',
        'tax_types_name': 'str',
        'tax_types_name_en': 'str',
        'counter': 'int'
    }

    attribute_map = {
        'fintool_id': 'fintoolId',
        'nrdcode': 'nrdcode',
        'nrd_sec_id': 'nrd_sec_id',
        'update_date': 'update_date',
        'tax_rate': 'tax_rate',
        'tax_country_id': 'tax_country_id',
        'tax_country_name': 'tax_country_name',
        'tax_country_name_en': 'tax_country_name_en',
        'tax_types_id': 'tax_types_id',
        'tax_types_name': 'tax_types_name',
        'tax_types_name_en': 'tax_types_name_en',
        'counter': 'counter'
    }

    def __init__(self, fintool_id=None, nrdcode=None, nrd_sec_id=None, update_date=None, tax_rate=None, tax_country_id=None, tax_country_name=None, tax_country_name_en=None, tax_types_id=None, tax_types_name=None, tax_types_name_en=None, counter=None):  # noqa: E501
        """EfirDataHubModelsModelsNsdTaxInfoFields - a model defined in Swagger"""  # noqa: E501
        self._fintool_id = None
        self._nrdcode = None
        self._nrd_sec_id = None
        self._update_date = None
        self._tax_rate = None
        self._tax_country_id = None
        self._tax_country_name = None
        self._tax_country_name_en = None
        self._tax_types_id = None
        self._tax_types_name = None
        self._tax_types_name_en = None
        self._counter = None
        self.discriminator = None
        if fintool_id is not None:
            self.fintool_id = fintool_id
        if nrdcode is not None:
            self.nrdcode = nrdcode
        if nrd_sec_id is not None:
            self.nrd_sec_id = nrd_sec_id
        if update_date is not None:
            self.update_date = update_date
        if tax_rate is not None:
            self.tax_rate = tax_rate
        if tax_country_id is not None:
            self.tax_country_id = tax_country_id
        if tax_country_name is not None:
            self.tax_country_name = tax_country_name
        if tax_country_name_en is not None:
            self.tax_country_name_en = tax_country_name_en
        if tax_types_id is not None:
            self.tax_types_id = tax_types_id
        if tax_types_name is not None:
            self.tax_types_name = tax_types_name
        if tax_types_name_en is not None:
            self.tax_types_name_en = tax_types_name_en
        if counter is not None:
            self.counter = counter

    @property
    def fintool_id(self):
        """Gets the fintool_id of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501

        Идентификатор ценной бумаги в базе Интерфакс  # noqa: E501

        :return: The fintool_id of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :rtype: int
        """
        return self._fintool_id

    @fintool_id.setter
    def fintool_id(self, fintool_id):
        """Sets the fintool_id of this EfirDataHubModelsModelsNsdTaxInfoFields.

        Идентификатор ценной бумаги в базе Интерфакс  # noqa: E501

        :param fintool_id: The fintool_id of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :type: int
        """

        self._fintool_id = fintool_id

    @property
    def nrdcode(self):
        """Gets the nrdcode of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501

        Код НРД  # noqa: E501

        :return: The nrdcode of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :rtype: str
        """
        return self._nrdcode

    @nrdcode.setter
    def nrdcode(self, nrdcode):
        """Sets the nrdcode of this EfirDataHubModelsModelsNsdTaxInfoFields.

        Код НРД  # noqa: E501

        :param nrdcode: The nrdcode of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :type: str
        """

        self._nrdcode = nrdcode

    @property
    def nrd_sec_id(self):
        """Gets the nrd_sec_id of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501

        Идентификатор ценной бумаги в базе НРД  # noqa: E501

        :return: The nrd_sec_id of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :rtype: int
        """
        return self._nrd_sec_id

    @nrd_sec_id.setter
    def nrd_sec_id(self, nrd_sec_id):
        """Sets the nrd_sec_id of this EfirDataHubModelsModelsNsdTaxInfoFields.

        Идентификатор ценной бумаги в базе НРД  # noqa: E501

        :param nrd_sec_id: The nrd_sec_id of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :type: int
        """

        self._nrd_sec_id = nrd_sec_id

    @property
    def update_date(self):
        """Gets the update_date of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501

        Дата обновления информации о ценной бумаге  # noqa: E501

        :return: The update_date of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :rtype: datetime
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this EfirDataHubModelsModelsNsdTaxInfoFields.

        Дата обновления информации о ценной бумаге  # noqa: E501

        :param update_date: The update_date of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :type: datetime
        """

        self._update_date = update_date

    @property
    def tax_rate(self):
        """Gets the tax_rate of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501

        Cтавка налога на доход % без предоставления налоговых освобождений  # noqa: E501

        :return: The tax_rate of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :rtype: float
        """
        return self._tax_rate

    @tax_rate.setter
    def tax_rate(self, tax_rate):
        """Sets the tax_rate of this EfirDataHubModelsModelsNsdTaxInfoFields.

        Cтавка налога на доход % без предоставления налоговых освобождений  # noqa: E501

        :param tax_rate: The tax_rate of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :type: float
        """

        self._tax_rate = tax_rate

    @property
    def tax_country_id(self):
        """Gets the tax_country_id of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501

        Идентификатор страны налогообложения  # noqa: E501

        :return: The tax_country_id of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :rtype: int
        """
        return self._tax_country_id

    @tax_country_id.setter
    def tax_country_id(self, tax_country_id):
        """Sets the tax_country_id of this EfirDataHubModelsModelsNsdTaxInfoFields.

        Идентификатор страны налогообложения  # noqa: E501

        :param tax_country_id: The tax_country_id of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :type: int
        """

        self._tax_country_id = tax_country_id

    @property
    def tax_country_name(self):
        """Gets the tax_country_name of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501

        Наименование страны налогообложения  # noqa: E501

        :return: The tax_country_name of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :rtype: str
        """
        return self._tax_country_name

    @tax_country_name.setter
    def tax_country_name(self, tax_country_name):
        """Sets the tax_country_name of this EfirDataHubModelsModelsNsdTaxInfoFields.

        Наименование страны налогообложения  # noqa: E501

        :param tax_country_name: The tax_country_name of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :type: str
        """

        self._tax_country_name = tax_country_name

    @property
    def tax_country_name_en(self):
        """Gets the tax_country_name_en of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501

        Наименование страны налогообложения на англ.языке  # noqa: E501

        :return: The tax_country_name_en of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :rtype: str
        """
        return self._tax_country_name_en

    @tax_country_name_en.setter
    def tax_country_name_en(self, tax_country_name_en):
        """Sets the tax_country_name_en of this EfirDataHubModelsModelsNsdTaxInfoFields.

        Наименование страны налогообложения на англ.языке  # noqa: E501

        :param tax_country_name_en: The tax_country_name_en of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :type: str
        """

        self._tax_country_name_en = tax_country_name_en

    @property
    def tax_types_id(self):
        """Gets the tax_types_id of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501

        Идентификатор типа налога  # noqa: E501

        :return: The tax_types_id of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :rtype: int
        """
        return self._tax_types_id

    @tax_types_id.setter
    def tax_types_id(self, tax_types_id):
        """Sets the tax_types_id of this EfirDataHubModelsModelsNsdTaxInfoFields.

        Идентификатор типа налога  # noqa: E501

        :param tax_types_id: The tax_types_id of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :type: int
        """

        self._tax_types_id = tax_types_id

    @property
    def tax_types_name(self):
        """Gets the tax_types_name of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501

        Наименование типа налога  # noqa: E501

        :return: The tax_types_name of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :rtype: str
        """
        return self._tax_types_name

    @tax_types_name.setter
    def tax_types_name(self, tax_types_name):
        """Sets the tax_types_name of this EfirDataHubModelsModelsNsdTaxInfoFields.

        Наименование типа налога  # noqa: E501

        :param tax_types_name: The tax_types_name of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :type: str
        """

        self._tax_types_name = tax_types_name

    @property
    def tax_types_name_en(self):
        """Gets the tax_types_name_en of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501

        Наименование типа налога на англ.языке  # noqa: E501

        :return: The tax_types_name_en of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :rtype: str
        """
        return self._tax_types_name_en

    @tax_types_name_en.setter
    def tax_types_name_en(self, tax_types_name_en):
        """Sets the tax_types_name_en of this EfirDataHubModelsModelsNsdTaxInfoFields.

        Наименование типа налога на англ.языке  # noqa: E501

        :param tax_types_name_en: The tax_types_name_en of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :type: str
        """

        self._tax_types_name_en = tax_types_name_en

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501

        Общее количество записей в выборке, если указан pageNum = 1. Иначе = null  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsNsdTaxInfoFields.

        Общее количество записей в выборке, если указан pageNum = 1. Иначе = null  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsNsdTaxInfoFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsNsdTaxInfoFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsNsdTaxInfoFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
