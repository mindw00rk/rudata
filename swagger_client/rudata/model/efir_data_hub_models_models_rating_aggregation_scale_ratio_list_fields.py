# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsRatingAggregationScaleRatioListFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'line_number': 'int',
        'ru_level': 'int',
        'big3_level': 'int',
        'final_level': 'int'
    }

    attribute_map = {
        'line_number': 'line_number',
        'ru_level': 'ru_level',
        'big3_level': 'big3_level',
        'final_level': 'final_level'
    }

    def __init__(self, line_number=None, ru_level=None, big3_level=None, final_level=None):  # noqa: E501
        """EfirDataHubModelsModelsRatingAggregationScaleRatioListFields - a model defined in Swagger"""  # noqa: E501
        self._line_number = None
        self._ru_level = None
        self._big3_level = None
        self._final_level = None
        self.discriminator = None
        if line_number is not None:
            self.line_number = line_number
        if ru_level is not None:
            self.ru_level = ru_level
        if big3_level is not None:
            self.big3_level = big3_level
        if final_level is not None:
            self.final_level = final_level

    @property
    def line_number(self):
        """Gets the line_number of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.  # noqa: E501

        Номер строки  # noqa: E501

        :return: The line_number of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.  # noqa: E501
        :rtype: int
        """
        return self._line_number

    @line_number.setter
    def line_number(self, line_number):
        """Sets the line_number of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.

        Номер строки  # noqa: E501

        :param line_number: The line_number of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.  # noqa: E501
        :type: int
        """

        self._line_number = line_number

    @property
    def ru_level(self):
        """Gets the ru_level of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.  # noqa: E501

        Уровень рейтинга по шкале RU  # noqa: E501

        :return: The ru_level of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.  # noqa: E501
        :rtype: int
        """
        return self._ru_level

    @ru_level.setter
    def ru_level(self, ru_level):
        """Sets the ru_level of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.

        Уровень рейтинга по шкале RU  # noqa: E501

        :param ru_level: The ru_level of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.  # noqa: E501
        :type: int
        """

        self._ru_level = ru_level

    @property
    def big3_level(self):
        """Gets the big3_level of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.  # noqa: E501

        Уровень рейтинга по шкале BIG3  # noqa: E501

        :return: The big3_level of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.  # noqa: E501
        :rtype: int
        """
        return self._big3_level

    @big3_level.setter
    def big3_level(self, big3_level):
        """Sets the big3_level of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.

        Уровень рейтинга по шкале BIG3  # noqa: E501

        :param big3_level: The big3_level of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.  # noqa: E501
        :type: int
        """

        self._big3_level = big3_level

    @property
    def final_level(self):
        """Gets the final_level of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.  # noqa: E501

        Результирующий уровень рейтинга  # noqa: E501

        :return: The final_level of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.  # noqa: E501
        :rtype: int
        """
        return self._final_level

    @final_level.setter
    def final_level(self, final_level):
        """Sets the final_level of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.

        Результирующий уровень рейтинга  # noqa: E501

        :param final_level: The final_level of this EfirDataHubModelsModelsRatingAggregationScaleRatioListFields.  # noqa: E501
        :type: int
        """

        self._final_level = final_level

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsRatingAggregationScaleRatioListFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsRatingAggregationScaleRatioListFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
