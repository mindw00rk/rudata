# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsInfoFintoolReferenceDataFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'facevalue_m': 'int',
        'faceftname_m': 'int',
        'sumissuevol_m': 'int',
        'summarketvol_m': 'int',
        'numcoupons_m': 'int',
        'nrdcode': 'str',
        'regcode_m': 'int',
        'regdate_m': 'int',
        'regdistdate_m': 'int',
        'begdistdate_m': 'int',
        'enddistdate_m': 'int',
        'endmtydate_m': 'int',
        'daysall_m': 'int',
        'fullname_nrd': 'str',
        'rpregorg_nrd': 'str',
        'rpstate_nrd': 'str',
        'issuenumber': 'str',
        'currentfacevalue_nrd': 'float',
        'isqualified_nrd': 'int',
        'bondseries': 'str',
        'islombardcbr_nrd': 'int',
        'numcoupons_nrd': 'int',
        'facevalue_nrd': 'float',
        'faceftname_nrd': 'str',
        'summarketvol_nrd': 'float',
        'regcode_nrd': 'str',
        'regdate_nrd': 'datetime',
        'regorg_nrd': 'str',
        'begdistdate_nrd': 'datetime',
        'daysall_nrd': 'int',
        'enddistdate_nrd': 'datetime',
        'endmtydate_nrd': 'datetime',
        'regdistdate_nrd': 'datetime',
        'sumissuevol_nrd': 'float',
        'drqty': 'int',
        'isincodebase_nrd': 'str',
        'nrdcompcode': 'str',
        'shqty': 'int',
        'summarketvolorig_nrd': 'int',
        'issuername_nrd': 'str',
        'planmtydate_nrd': 'datetime',
        'firstcoupondate_nrd': 'datetime',
        'depositary_nrd': 'str',
        'registrar_nrd': 'str',
        'placeprice_nrd': 'float',
        'micexlist_nrd': 'str',
        'minlot_nrd': 'float',
        'formarketbonds_nrd': 'int',
        'registraracctype_nrd': 'str',
        'registraracctypedate_nrd': 'datetime',
        'facialacc_nrd': 'str',
        'acc_open_date_nrd': 'datetime',
        'fraction_nrd': 'int',
        'specialized_depo_nrd': 'str',
        'cmp_code_nsd_issuer_nrd': 'str',
        'cmp_code_nsd_managing_nrd': 'str',
        'ratetypenamerus_nrd': 'str',
        'ratetypenameeng_nrd': 'str',
        'coupontypename_nrd': 'str',
        'base_month': 'str',
        'base_year': 'str',
        'basis_nrd': 'str',
        'sectypenamerus_nrd': 'str',
        'sectypenameeng_nrd': 'str',
        'secformnamerus_nrd': 'str',
        'secformnameeng_nrd': 'str',
        'sectypenamebr_nrd': 'str',
        'secstaterus_nrd': 'str',
        'secstateeng_nrd': 'str',
        'placementtype_nrd': 'str',
        'share_category_name_nrd': 'str',
        'share_category_name_en_nrd': 'str',
        'dr_category_name_nrd': 'str',
        'dr_category_name_en_nrd': 'str',
        'company_state_name_nrd': 'str',
        'rate_type_id': 'int',
        'cp_type_id': 'int',
        'coupon_period_base_id': 'int',
        'sec_type_id': 'int',
        'sec_form_id': 'int',
        'sec_state_id': 'int',
        'placement_type_id': 'int',
        'share_category_id': 'int',
        'dr_category_mn': 'str',
        'company_state_mn': 'str',
        'sector4212u': 'str',
        'sna2008': 'str',
        'fullname_en_nrd': 'str',
        'seniorityname': 'str',
        'fintoolid': 'int',
        'moex_code': 'str',
        'moex_name': 'str',
        'fullname': 'str',
        'isin144a': 'str',
        'isincode': 'str',
        'nickname': 'str',
        'progfintoolid': 'int',
        'regcode': 'str',
        'regdate': 'datetime',
        'regorg': 'str',
        'amortisedmty': 'int',
        'basis': 'str',
        'bondstructuralpar': 'str',
        'cfi': 'str',
        'coupontype': 'str',
        'fintooltype': 'str',
        'guaranteeamount': 'str',
        'guaranteetype': 'str',
        'haveoffer': 'int',
        'isconvertible': 'int',
        'isguaranteed': 'int',
        'maturitygroup': 'str',
        'securitization': 'str',
        'accruedintcalctype': 'int',
        'country': 'str',
        'couponperyear': 'int',
        'faceftname': 'str',
        'facevalue': 'float',
        'guarantval': 'float',
        'havedefault': 'int',
        'numcoupons': 'int',
        'status': 'str',
        'sumissueval': 'float',
        'sumissuevol': 'float',
        'summarketval': 'float',
        'summarketvol': 'float',
        'borrowername': 'str',
        'borrowerokpo': 'str',
        'borrowersector': 'str',
        'borroweruid': 'int',
        'borrowerinn': 'str',
        'borrowercountry': 'str',
        'borrowerregionname': 'str',
        'issuername': 'str',
        'issuerokpo': 'str',
        'issuersector': 'str',
        'issueruid': 'int',
        'issuerinn': 'str',
        'issuercountry': 'str',
        'issuerregionname': 'str',
        'assetssector': 'str',
        'numguarantors': 'int',
        'begdistdate': 'datetime',
        'begmtydate': 'datetime',
        'daysall': 'int',
        'enddistdate': 'datetime',
        'endmtydate': 'datetime',
        'privatedist': 'int',
        'regdistdate': 'datetime',
        'securitytype': 'str',
        'securitykind': 'str',
        'nominaltype': 'str',
        'update_time': 'datetime',
        'isregion': 'int',
        'nsd_service': 'str',
        'raterevisionsperyear': 'int',
        'floatratename': 'str',
        'issubordinated': 'int',
        'note': 'str',
        'listing_level': 'int',
        'havecovenant': 'bool',
        'haverepayment': 'bool',
        'haveindexedfv': 'bool',
        'numdecimals': 'int',
        'couponperiod': 'int',
        'ismatched': 'bool',
        'firstcoupondate': 'datetime',
        'couponrate': 'float',
        'iscomplicated': 'bool',
        'available_for_unqualified': 'bool',
        'sec_type_br_code': 'str',
        'original_country': 'str',
        'qualified_test_id': 'int',
        'qualified_test_id_tm': 'int',
        'base_asset_fintoolid': 'int',
        'isqualified': 'bool',
        'listing_level_spb': 'int',
        'have_mm_moex': 'bool',
        'have_mm_spb': 'bool',
        'beg_book_date': 'datetime',
        'seniority': 'int',
        'tradesite': 'int',
        'counter': 'int',
        'rn': 'int'
    }

    attribute_map = {
        'facevalue_m': 'facevalue_m',
        'faceftname_m': 'faceftname_m',
        'sumissuevol_m': 'sumissuevol_m',
        'summarketvol_m': 'summarketvol_m',
        'numcoupons_m': 'numcoupons_m',
        'nrdcode': 'nrdcode',
        'regcode_m': 'regcode_m',
        'regdate_m': 'regdate_m',
        'regdistdate_m': 'regdistdate_m',
        'begdistdate_m': 'begdistdate_m',
        'enddistdate_m': 'enddistdate_m',
        'endmtydate_m': 'endmtydate_m',
        'daysall_m': 'daysall_m',
        'fullname_nrd': 'fullname_nrd',
        'rpregorg_nrd': 'rpregorg_nrd',
        'rpstate_nrd': 'rpstate_nrd',
        'issuenumber': 'issuenumber',
        'currentfacevalue_nrd': 'currentfacevalue_nrd',
        'isqualified_nrd': 'isqualified_nrd',
        'bondseries': 'bondseries',
        'islombardcbr_nrd': 'islombardcbr_nrd',
        'numcoupons_nrd': 'numcoupons_nrd',
        'facevalue_nrd': 'facevalue_nrd',
        'faceftname_nrd': 'faceftname_nrd',
        'summarketvol_nrd': 'summarketvol_nrd',
        'regcode_nrd': 'regcode_nrd',
        'regdate_nrd': 'regdate_nrd',
        'regorg_nrd': 'regorg_nrd',
        'begdistdate_nrd': 'begdistdate_nrd',
        'daysall_nrd': 'daysall_nrd',
        'enddistdate_nrd': 'enddistdate_nrd',
        'endmtydate_nrd': 'endmtydate_nrd',
        'regdistdate_nrd': 'regdistdate_nrd',
        'sumissuevol_nrd': 'sumissuevol_nrd',
        'drqty': 'drqty',
        'isincodebase_nrd': 'isincodebase_nrd',
        'nrdcompcode': 'nrdcompcode',
        'shqty': 'shqty',
        'summarketvolorig_nrd': 'summarketvolorig_nrd',
        'issuername_nrd': 'issuername_nrd',
        'planmtydate_nrd': 'planmtydate_nrd',
        'firstcoupondate_nrd': 'firstcoupondate_nrd',
        'depositary_nrd': 'depositary_nrd',
        'registrar_nrd': 'registrar_nrd',
        'placeprice_nrd': 'placeprice_nrd',
        'micexlist_nrd': 'micexlist_nrd',
        'minlot_nrd': 'minlot_nrd',
        'formarketbonds_nrd': 'formarketbonds_nrd',
        'registraracctype_nrd': 'registraracctype_nrd',
        'registraracctypedate_nrd': 'registraracctypedate_nrd',
        'facialacc_nrd': 'facialacc_nrd',
        'acc_open_date_nrd': 'acc_open_date_nrd',
        'fraction_nrd': 'fraction_nrd',
        'specialized_depo_nrd': 'specialized_depo_nrd',
        'cmp_code_nsd_issuer_nrd': 'cmp_code_nsd_issuer_nrd',
        'cmp_code_nsd_managing_nrd': 'cmp_code_nsd_managing_nrd',
        'ratetypenamerus_nrd': 'ratetypenamerus_nrd',
        'ratetypenameeng_nrd': 'ratetypenameeng_nrd',
        'coupontypename_nrd': 'coupontypename_nrd',
        'base_month': 'base_month',
        'base_year': 'base_year',
        'basis_nrd': 'basis_nrd',
        'sectypenamerus_nrd': 'sectypenamerus_nrd',
        'sectypenameeng_nrd': 'sectypenameeng_nrd',
        'secformnamerus_nrd': 'secformnamerus_nrd',
        'secformnameeng_nrd': 'secformnameeng_nrd',
        'sectypenamebr_nrd': 'sectypenamebr_nrd',
        'secstaterus_nrd': 'secstaterus_nrd',
        'secstateeng_nrd': 'secstateeng_nrd',
        'placementtype_nrd': 'placementtype_nrd',
        'share_category_name_nrd': 'share_category_name_nrd',
        'share_category_name_en_nrd': 'share_category_name_en_nrd',
        'dr_category_name_nrd': 'dr_category_name_nrd',
        'dr_category_name_en_nrd': 'dr_category_name_en_nrd',
        'company_state_name_nrd': 'company_state_name_nrd',
        'rate_type_id': 'rate_type_id',
        'cp_type_id': 'cp_type_id',
        'coupon_period_base_id': 'coupon_period_base_id',
        'sec_type_id': 'sec_type_id',
        'sec_form_id': 'sec_form_id',
        'sec_state_id': 'sec_state_id',
        'placement_type_id': 'placement_type_id',
        'share_category_id': 'share_category_id',
        'dr_category_mn': 'dr_category_mn',
        'company_state_mn': 'company_state_mn',
        'sector4212u': 'sector4212u',
        'sna2008': 'sna2008',
        'fullname_en_nrd': 'fullname_en_nrd',
        'seniorityname': 'seniorityname',
        'fintoolid': 'fintoolid',
        'moex_code': 'moex_code',
        'moex_name': 'moex_name',
        'fullname': 'fullname',
        'isin144a': 'isin144a',
        'isincode': 'isincode',
        'nickname': 'nickname',
        'progfintoolid': 'progfintoolid',
        'regcode': 'regcode',
        'regdate': 'regdate',
        'regorg': 'regorg',
        'amortisedmty': 'amortisedmty',
        'basis': 'basis',
        'bondstructuralpar': 'bondstructuralpar',
        'cfi': 'cfi',
        'coupontype': 'coupontype',
        'fintooltype': 'fintooltype',
        'guaranteeamount': 'guaranteeamount',
        'guaranteetype': 'guaranteetype',
        'haveoffer': 'haveoffer',
        'isconvertible': 'isconvertible',
        'isguaranteed': 'isguaranteed',
        'maturitygroup': 'maturitygroup',
        'securitization': 'securitization',
        'accruedintcalctype': 'accruedintcalctype',
        'country': 'country',
        'couponperyear': 'couponperyear',
        'faceftname': 'faceftname',
        'facevalue': 'facevalue',
        'guarantval': 'guarantval',
        'havedefault': 'havedefault',
        'numcoupons': 'numcoupons',
        'status': 'status',
        'sumissueval': 'sumissueval',
        'sumissuevol': 'sumissuevol',
        'summarketval': 'summarketval',
        'summarketvol': 'summarketvol',
        'borrowername': 'borrowername',
        'borrowerokpo': 'borrowerokpo',
        'borrowersector': 'borrowersector',
        'borroweruid': 'borroweruid',
        'borrowerinn': 'borrowerinn',
        'borrowercountry': 'borrowercountry',
        'borrowerregionname': 'borrowerregionname',
        'issuername': 'issuername',
        'issuerokpo': 'issuerokpo',
        'issuersector': 'issuersector',
        'issueruid': 'issueruid',
        'issuerinn': 'issuerinn',
        'issuercountry': 'issuercountry',
        'issuerregionname': 'issuerregionname',
        'assetssector': 'assetssector',
        'numguarantors': 'numguarantors',
        'begdistdate': 'begdistdate',
        'begmtydate': 'begmtydate',
        'daysall': 'daysall',
        'enddistdate': 'enddistdate',
        'endmtydate': 'endmtydate',
        'privatedist': 'privatedist',
        'regdistdate': 'regdistdate',
        'securitytype': 'securitytype',
        'securitykind': 'securitykind',
        'nominaltype': 'nominaltype',
        'update_time': 'update_time',
        'isregion': 'isregion',
        'nsd_service': 'nsd_service',
        'raterevisionsperyear': 'raterevisionsperyear',
        'floatratename': 'floatratename',
        'issubordinated': 'issubordinated',
        'note': 'note',
        'listing_level': 'listing_level',
        'havecovenant': 'havecovenant',
        'haverepayment': 'haverepayment',
        'haveindexedfv': 'haveindexedfv',
        'numdecimals': 'numdecimals',
        'couponperiod': 'couponperiod',
        'ismatched': 'ismatched',
        'firstcoupondate': 'firstcoupondate',
        'couponrate': 'couponrate',
        'iscomplicated': 'iscomplicated',
        'available_for_unqualified': 'available_for_unqualified',
        'sec_type_br_code': 'sec_type_br_code',
        'original_country': 'original_country',
        'qualified_test_id': 'qualified_test_id',
        'qualified_test_id_tm': 'qualified_test_id_tm',
        'base_asset_fintoolid': 'base_asset_fintoolid',
        'isqualified': 'isqualified',
        'listing_level_spb': 'listing_level_spb',
        'have_mm_moex': 'have_mm_moex',
        'have_mm_spb': 'have_mm_spb',
        'beg_book_date': 'beg_book_date',
        'seniority': 'seniority',
        'tradesite': 'tradesite',
        'counter': 'counter',
        'rn': 'rn'
    }

    def __init__(self, facevalue_m=None, faceftname_m=None, sumissuevol_m=None, summarketvol_m=None, numcoupons_m=None, nrdcode=None, regcode_m=None, regdate_m=None, regdistdate_m=None, begdistdate_m=None, enddistdate_m=None, endmtydate_m=None, daysall_m=None, fullname_nrd=None, rpregorg_nrd=None, rpstate_nrd=None, issuenumber=None, currentfacevalue_nrd=None, isqualified_nrd=None, bondseries=None, islombardcbr_nrd=None, numcoupons_nrd=None, facevalue_nrd=None, faceftname_nrd=None, summarketvol_nrd=None, regcode_nrd=None, regdate_nrd=None, regorg_nrd=None, begdistdate_nrd=None, daysall_nrd=None, enddistdate_nrd=None, endmtydate_nrd=None, regdistdate_nrd=None, sumissuevol_nrd=None, drqty=None, isincodebase_nrd=None, nrdcompcode=None, shqty=None, summarketvolorig_nrd=None, issuername_nrd=None, planmtydate_nrd=None, firstcoupondate_nrd=None, depositary_nrd=None, registrar_nrd=None, placeprice_nrd=None, micexlist_nrd=None, minlot_nrd=None, formarketbonds_nrd=None, registraracctype_nrd=None, registraracctypedate_nrd=None, facialacc_nrd=None, acc_open_date_nrd=None, fraction_nrd=None, specialized_depo_nrd=None, cmp_code_nsd_issuer_nrd=None, cmp_code_nsd_managing_nrd=None, ratetypenamerus_nrd=None, ratetypenameeng_nrd=None, coupontypename_nrd=None, base_month=None, base_year=None, basis_nrd=None, sectypenamerus_nrd=None, sectypenameeng_nrd=None, secformnamerus_nrd=None, secformnameeng_nrd=None, sectypenamebr_nrd=None, secstaterus_nrd=None, secstateeng_nrd=None, placementtype_nrd=None, share_category_name_nrd=None, share_category_name_en_nrd=None, dr_category_name_nrd=None, dr_category_name_en_nrd=None, company_state_name_nrd=None, rate_type_id=None, cp_type_id=None, coupon_period_base_id=None, sec_type_id=None, sec_form_id=None, sec_state_id=None, placement_type_id=None, share_category_id=None, dr_category_mn=None, company_state_mn=None, sector4212u=None, sna2008=None, fullname_en_nrd=None, seniorityname=None, fintoolid=None, moex_code=None, moex_name=None, fullname=None, isin144a=None, isincode=None, nickname=None, progfintoolid=None, regcode=None, regdate=None, regorg=None, amortisedmty=None, basis=None, bondstructuralpar=None, cfi=None, coupontype=None, fintooltype=None, guaranteeamount=None, guaranteetype=None, haveoffer=None, isconvertible=None, isguaranteed=None, maturitygroup=None, securitization=None, accruedintcalctype=None, country=None, couponperyear=None, faceftname=None, facevalue=None, guarantval=None, havedefault=None, numcoupons=None, status=None, sumissueval=None, sumissuevol=None, summarketval=None, summarketvol=None, borrowername=None, borrowerokpo=None, borrowersector=None, borroweruid=None, borrowerinn=None, borrowercountry=None, borrowerregionname=None, issuername=None, issuerokpo=None, issuersector=None, issueruid=None, issuerinn=None, issuercountry=None, issuerregionname=None, assetssector=None, numguarantors=None, begdistdate=None, begmtydate=None, daysall=None, enddistdate=None, endmtydate=None, privatedist=None, regdistdate=None, securitytype=None, securitykind=None, nominaltype=None, update_time=None, isregion=None, nsd_service=None, raterevisionsperyear=None, floatratename=None, issubordinated=None, note=None, listing_level=None, havecovenant=None, haverepayment=None, haveindexedfv=None, numdecimals=None, couponperiod=None, ismatched=None, firstcoupondate=None, couponrate=None, iscomplicated=None, available_for_unqualified=None, sec_type_br_code=None, original_country=None, qualified_test_id=None, qualified_test_id_tm=None, base_asset_fintoolid=None, isqualified=None, listing_level_spb=None, have_mm_moex=None, have_mm_spb=None, beg_book_date=None, seniority=None, tradesite=None, counter=None, rn=None):  # noqa: E501
        """EfirDataHubModelsModelsInfoFintoolReferenceDataFields - a model defined in Swagger"""  # noqa: E501
        self._facevalue_m = None
        self._faceftname_m = None
        self._sumissuevol_m = None
        self._summarketvol_m = None
        self._numcoupons_m = None
        self._nrdcode = None
        self._regcode_m = None
        self._regdate_m = None
        self._regdistdate_m = None
        self._begdistdate_m = None
        self._enddistdate_m = None
        self._endmtydate_m = None
        self._daysall_m = None
        self._fullname_nrd = None
        self._rpregorg_nrd = None
        self._rpstate_nrd = None
        self._issuenumber = None
        self._currentfacevalue_nrd = None
        self._isqualified_nrd = None
        self._bondseries = None
        self._islombardcbr_nrd = None
        self._numcoupons_nrd = None
        self._facevalue_nrd = None
        self._faceftname_nrd = None
        self._summarketvol_nrd = None
        self._regcode_nrd = None
        self._regdate_nrd = None
        self._regorg_nrd = None
        self._begdistdate_nrd = None
        self._daysall_nrd = None
        self._enddistdate_nrd = None
        self._endmtydate_nrd = None
        self._regdistdate_nrd = None
        self._sumissuevol_nrd = None
        self._drqty = None
        self._isincodebase_nrd = None
        self._nrdcompcode = None
        self._shqty = None
        self._summarketvolorig_nrd = None
        self._issuername_nrd = None
        self._planmtydate_nrd = None
        self._firstcoupondate_nrd = None
        self._depositary_nrd = None
        self._registrar_nrd = None
        self._placeprice_nrd = None
        self._micexlist_nrd = None
        self._minlot_nrd = None
        self._formarketbonds_nrd = None
        self._registraracctype_nrd = None
        self._registraracctypedate_nrd = None
        self._facialacc_nrd = None
        self._acc_open_date_nrd = None
        self._fraction_nrd = None
        self._specialized_depo_nrd = None
        self._cmp_code_nsd_issuer_nrd = None
        self._cmp_code_nsd_managing_nrd = None
        self._ratetypenamerus_nrd = None
        self._ratetypenameeng_nrd = None
        self._coupontypename_nrd = None
        self._base_month = None
        self._base_year = None
        self._basis_nrd = None
        self._sectypenamerus_nrd = None
        self._sectypenameeng_nrd = None
        self._secformnamerus_nrd = None
        self._secformnameeng_nrd = None
        self._sectypenamebr_nrd = None
        self._secstaterus_nrd = None
        self._secstateeng_nrd = None
        self._placementtype_nrd = None
        self._share_category_name_nrd = None
        self._share_category_name_en_nrd = None
        self._dr_category_name_nrd = None
        self._dr_category_name_en_nrd = None
        self._company_state_name_nrd = None
        self._rate_type_id = None
        self._cp_type_id = None
        self._coupon_period_base_id = None
        self._sec_type_id = None
        self._sec_form_id = None
        self._sec_state_id = None
        self._placement_type_id = None
        self._share_category_id = None
        self._dr_category_mn = None
        self._company_state_mn = None
        self._sector4212u = None
        self._sna2008 = None
        self._fullname_en_nrd = None
        self._seniorityname = None
        self._fintoolid = None
        self._moex_code = None
        self._moex_name = None
        self._fullname = None
        self._isin144a = None
        self._isincode = None
        self._nickname = None
        self._progfintoolid = None
        self._regcode = None
        self._regdate = None
        self._regorg = None
        self._amortisedmty = None
        self._basis = None
        self._bondstructuralpar = None
        self._cfi = None
        self._coupontype = None
        self._fintooltype = None
        self._guaranteeamount = None
        self._guaranteetype = None
        self._haveoffer = None
        self._isconvertible = None
        self._isguaranteed = None
        self._maturitygroup = None
        self._securitization = None
        self._accruedintcalctype = None
        self._country = None
        self._couponperyear = None
        self._faceftname = None
        self._facevalue = None
        self._guarantval = None
        self._havedefault = None
        self._numcoupons = None
        self._status = None
        self._sumissueval = None
        self._sumissuevol = None
        self._summarketval = None
        self._summarketvol = None
        self._borrowername = None
        self._borrowerokpo = None
        self._borrowersector = None
        self._borroweruid = None
        self._borrowerinn = None
        self._borrowercountry = None
        self._borrowerregionname = None
        self._issuername = None
        self._issuerokpo = None
        self._issuersector = None
        self._issueruid = None
        self._issuerinn = None
        self._issuercountry = None
        self._issuerregionname = None
        self._assetssector = None
        self._numguarantors = None
        self._begdistdate = None
        self._begmtydate = None
        self._daysall = None
        self._enddistdate = None
        self._endmtydate = None
        self._privatedist = None
        self._regdistdate = None
        self._securitytype = None
        self._securitykind = None
        self._nominaltype = None
        self._update_time = None
        self._isregion = None
        self._nsd_service = None
        self._raterevisionsperyear = None
        self._floatratename = None
        self._issubordinated = None
        self._note = None
        self._listing_level = None
        self._havecovenant = None
        self._haverepayment = None
        self._haveindexedfv = None
        self._numdecimals = None
        self._couponperiod = None
        self._ismatched = None
        self._firstcoupondate = None
        self._couponrate = None
        self._iscomplicated = None
        self._available_for_unqualified = None
        self._sec_type_br_code = None
        self._original_country = None
        self._qualified_test_id = None
        self._qualified_test_id_tm = None
        self._base_asset_fintoolid = None
        self._isqualified = None
        self._listing_level_spb = None
        self._have_mm_moex = None
        self._have_mm_spb = None
        self._beg_book_date = None
        self._seniority = None
        self._tradesite = None
        self._counter = None
        self._rn = None
        self.discriminator = None
        if facevalue_m is not None:
            self.facevalue_m = facevalue_m
        if faceftname_m is not None:
            self.faceftname_m = faceftname_m
        if sumissuevol_m is not None:
            self.sumissuevol_m = sumissuevol_m
        if summarketvol_m is not None:
            self.summarketvol_m = summarketvol_m
        if numcoupons_m is not None:
            self.numcoupons_m = numcoupons_m
        if nrdcode is not None:
            self.nrdcode = nrdcode
        if regcode_m is not None:
            self.regcode_m = regcode_m
        if regdate_m is not None:
            self.regdate_m = regdate_m
        if regdistdate_m is not None:
            self.regdistdate_m = regdistdate_m
        if begdistdate_m is not None:
            self.begdistdate_m = begdistdate_m
        if enddistdate_m is not None:
            self.enddistdate_m = enddistdate_m
        if endmtydate_m is not None:
            self.endmtydate_m = endmtydate_m
        if daysall_m is not None:
            self.daysall_m = daysall_m
        if fullname_nrd is not None:
            self.fullname_nrd = fullname_nrd
        if rpregorg_nrd is not None:
            self.rpregorg_nrd = rpregorg_nrd
        if rpstate_nrd is not None:
            self.rpstate_nrd = rpstate_nrd
        if issuenumber is not None:
            self.issuenumber = issuenumber
        if currentfacevalue_nrd is not None:
            self.currentfacevalue_nrd = currentfacevalue_nrd
        if isqualified_nrd is not None:
            self.isqualified_nrd = isqualified_nrd
        if bondseries is not None:
            self.bondseries = bondseries
        if islombardcbr_nrd is not None:
            self.islombardcbr_nrd = islombardcbr_nrd
        if numcoupons_nrd is not None:
            self.numcoupons_nrd = numcoupons_nrd
        if facevalue_nrd is not None:
            self.facevalue_nrd = facevalue_nrd
        if faceftname_nrd is not None:
            self.faceftname_nrd = faceftname_nrd
        if summarketvol_nrd is not None:
            self.summarketvol_nrd = summarketvol_nrd
        if regcode_nrd is not None:
            self.regcode_nrd = regcode_nrd
        if regdate_nrd is not None:
            self.regdate_nrd = regdate_nrd
        if regorg_nrd is not None:
            self.regorg_nrd = regorg_nrd
        if begdistdate_nrd is not None:
            self.begdistdate_nrd = begdistdate_nrd
        if daysall_nrd is not None:
            self.daysall_nrd = daysall_nrd
        if enddistdate_nrd is not None:
            self.enddistdate_nrd = enddistdate_nrd
        if endmtydate_nrd is not None:
            self.endmtydate_nrd = endmtydate_nrd
        if regdistdate_nrd is not None:
            self.regdistdate_nrd = regdistdate_nrd
        if sumissuevol_nrd is not None:
            self.sumissuevol_nrd = sumissuevol_nrd
        if drqty is not None:
            self.drqty = drqty
        if isincodebase_nrd is not None:
            self.isincodebase_nrd = isincodebase_nrd
        if nrdcompcode is not None:
            self.nrdcompcode = nrdcompcode
        if shqty is not None:
            self.shqty = shqty
        if summarketvolorig_nrd is not None:
            self.summarketvolorig_nrd = summarketvolorig_nrd
        if issuername_nrd is not None:
            self.issuername_nrd = issuername_nrd
        if planmtydate_nrd is not None:
            self.planmtydate_nrd = planmtydate_nrd
        if firstcoupondate_nrd is not None:
            self.firstcoupondate_nrd = firstcoupondate_nrd
        if depositary_nrd is not None:
            self.depositary_nrd = depositary_nrd
        if registrar_nrd is not None:
            self.registrar_nrd = registrar_nrd
        if placeprice_nrd is not None:
            self.placeprice_nrd = placeprice_nrd
        if micexlist_nrd is not None:
            self.micexlist_nrd = micexlist_nrd
        if minlot_nrd is not None:
            self.minlot_nrd = minlot_nrd
        if formarketbonds_nrd is not None:
            self.formarketbonds_nrd = formarketbonds_nrd
        if registraracctype_nrd is not None:
            self.registraracctype_nrd = registraracctype_nrd
        if registraracctypedate_nrd is not None:
            self.registraracctypedate_nrd = registraracctypedate_nrd
        if facialacc_nrd is not None:
            self.facialacc_nrd = facialacc_nrd
        if acc_open_date_nrd is not None:
            self.acc_open_date_nrd = acc_open_date_nrd
        if fraction_nrd is not None:
            self.fraction_nrd = fraction_nrd
        if specialized_depo_nrd is not None:
            self.specialized_depo_nrd = specialized_depo_nrd
        if cmp_code_nsd_issuer_nrd is not None:
            self.cmp_code_nsd_issuer_nrd = cmp_code_nsd_issuer_nrd
        if cmp_code_nsd_managing_nrd is not None:
            self.cmp_code_nsd_managing_nrd = cmp_code_nsd_managing_nrd
        if ratetypenamerus_nrd is not None:
            self.ratetypenamerus_nrd = ratetypenamerus_nrd
        if ratetypenameeng_nrd is not None:
            self.ratetypenameeng_nrd = ratetypenameeng_nrd
        if coupontypename_nrd is not None:
            self.coupontypename_nrd = coupontypename_nrd
        if base_month is not None:
            self.base_month = base_month
        if base_year is not None:
            self.base_year = base_year
        if basis_nrd is not None:
            self.basis_nrd = basis_nrd
        if sectypenamerus_nrd is not None:
            self.sectypenamerus_nrd = sectypenamerus_nrd
        if sectypenameeng_nrd is not None:
            self.sectypenameeng_nrd = sectypenameeng_nrd
        if secformnamerus_nrd is not None:
            self.secformnamerus_nrd = secformnamerus_nrd
        if secformnameeng_nrd is not None:
            self.secformnameeng_nrd = secformnameeng_nrd
        if sectypenamebr_nrd is not None:
            self.sectypenamebr_nrd = sectypenamebr_nrd
        if secstaterus_nrd is not None:
            self.secstaterus_nrd = secstaterus_nrd
        if secstateeng_nrd is not None:
            self.secstateeng_nrd = secstateeng_nrd
        if placementtype_nrd is not None:
            self.placementtype_nrd = placementtype_nrd
        if share_category_name_nrd is not None:
            self.share_category_name_nrd = share_category_name_nrd
        if share_category_name_en_nrd is not None:
            self.share_category_name_en_nrd = share_category_name_en_nrd
        if dr_category_name_nrd is not None:
            self.dr_category_name_nrd = dr_category_name_nrd
        if dr_category_name_en_nrd is not None:
            self.dr_category_name_en_nrd = dr_category_name_en_nrd
        if company_state_name_nrd is not None:
            self.company_state_name_nrd = company_state_name_nrd
        if rate_type_id is not None:
            self.rate_type_id = rate_type_id
        if cp_type_id is not None:
            self.cp_type_id = cp_type_id
        if coupon_period_base_id is not None:
            self.coupon_period_base_id = coupon_period_base_id
        if sec_type_id is not None:
            self.sec_type_id = sec_type_id
        if sec_form_id is not None:
            self.sec_form_id = sec_form_id
        if sec_state_id is not None:
            self.sec_state_id = sec_state_id
        if placement_type_id is not None:
            self.placement_type_id = placement_type_id
        if share_category_id is not None:
            self.share_category_id = share_category_id
        if dr_category_mn is not None:
            self.dr_category_mn = dr_category_mn
        if company_state_mn is not None:
            self.company_state_mn = company_state_mn
        if sector4212u is not None:
            self.sector4212u = sector4212u
        if sna2008 is not None:
            self.sna2008 = sna2008
        if fullname_en_nrd is not None:
            self.fullname_en_nrd = fullname_en_nrd
        if seniorityname is not None:
            self.seniorityname = seniorityname
        if fintoolid is not None:
            self.fintoolid = fintoolid
        if moex_code is not None:
            self.moex_code = moex_code
        if moex_name is not None:
            self.moex_name = moex_name
        if fullname is not None:
            self.fullname = fullname
        if isin144a is not None:
            self.isin144a = isin144a
        if isincode is not None:
            self.isincode = isincode
        if nickname is not None:
            self.nickname = nickname
        if progfintoolid is not None:
            self.progfintoolid = progfintoolid
        if regcode is not None:
            self.regcode = regcode
        if regdate is not None:
            self.regdate = regdate
        if regorg is not None:
            self.regorg = regorg
        if amortisedmty is not None:
            self.amortisedmty = amortisedmty
        if basis is not None:
            self.basis = basis
        if bondstructuralpar is not None:
            self.bondstructuralpar = bondstructuralpar
        if cfi is not None:
            self.cfi = cfi
        if coupontype is not None:
            self.coupontype = coupontype
        if fintooltype is not None:
            self.fintooltype = fintooltype
        if guaranteeamount is not None:
            self.guaranteeamount = guaranteeamount
        if guaranteetype is not None:
            self.guaranteetype = guaranteetype
        if haveoffer is not None:
            self.haveoffer = haveoffer
        if isconvertible is not None:
            self.isconvertible = isconvertible
        if isguaranteed is not None:
            self.isguaranteed = isguaranteed
        if maturitygroup is not None:
            self.maturitygroup = maturitygroup
        if securitization is not None:
            self.securitization = securitization
        if accruedintcalctype is not None:
            self.accruedintcalctype = accruedintcalctype
        if country is not None:
            self.country = country
        if couponperyear is not None:
            self.couponperyear = couponperyear
        if faceftname is not None:
            self.faceftname = faceftname
        if facevalue is not None:
            self.facevalue = facevalue
        if guarantval is not None:
            self.guarantval = guarantval
        if havedefault is not None:
            self.havedefault = havedefault
        if numcoupons is not None:
            self.numcoupons = numcoupons
        if status is not None:
            self.status = status
        if sumissueval is not None:
            self.sumissueval = sumissueval
        if sumissuevol is not None:
            self.sumissuevol = sumissuevol
        if summarketval is not None:
            self.summarketval = summarketval
        if summarketvol is not None:
            self.summarketvol = summarketvol
        if borrowername is not None:
            self.borrowername = borrowername
        if borrowerokpo is not None:
            self.borrowerokpo = borrowerokpo
        if borrowersector is not None:
            self.borrowersector = borrowersector
        if borroweruid is not None:
            self.borroweruid = borroweruid
        if borrowerinn is not None:
            self.borrowerinn = borrowerinn
        if borrowercountry is not None:
            self.borrowercountry = borrowercountry
        if borrowerregionname is not None:
            self.borrowerregionname = borrowerregionname
        if issuername is not None:
            self.issuername = issuername
        if issuerokpo is not None:
            self.issuerokpo = issuerokpo
        if issuersector is not None:
            self.issuersector = issuersector
        if issueruid is not None:
            self.issueruid = issueruid
        if issuerinn is not None:
            self.issuerinn = issuerinn
        if issuercountry is not None:
            self.issuercountry = issuercountry
        if issuerregionname is not None:
            self.issuerregionname = issuerregionname
        if assetssector is not None:
            self.assetssector = assetssector
        if numguarantors is not None:
            self.numguarantors = numguarantors
        if begdistdate is not None:
            self.begdistdate = begdistdate
        if begmtydate is not None:
            self.begmtydate = begmtydate
        if daysall is not None:
            self.daysall = daysall
        if enddistdate is not None:
            self.enddistdate = enddistdate
        if endmtydate is not None:
            self.endmtydate = endmtydate
        if privatedist is not None:
            self.privatedist = privatedist
        if regdistdate is not None:
            self.regdistdate = regdistdate
        if securitytype is not None:
            self.securitytype = securitytype
        if securitykind is not None:
            self.securitykind = securitykind
        if nominaltype is not None:
            self.nominaltype = nominaltype
        if update_time is not None:
            self.update_time = update_time
        if isregion is not None:
            self.isregion = isregion
        if nsd_service is not None:
            self.nsd_service = nsd_service
        if raterevisionsperyear is not None:
            self.raterevisionsperyear = raterevisionsperyear
        if floatratename is not None:
            self.floatratename = floatratename
        if issubordinated is not None:
            self.issubordinated = issubordinated
        if note is not None:
            self.note = note
        if listing_level is not None:
            self.listing_level = listing_level
        if havecovenant is not None:
            self.havecovenant = havecovenant
        if haverepayment is not None:
            self.haverepayment = haverepayment
        if haveindexedfv is not None:
            self.haveindexedfv = haveindexedfv
        if numdecimals is not None:
            self.numdecimals = numdecimals
        if couponperiod is not None:
            self.couponperiod = couponperiod
        if ismatched is not None:
            self.ismatched = ismatched
        if firstcoupondate is not None:
            self.firstcoupondate = firstcoupondate
        if couponrate is not None:
            self.couponrate = couponrate
        if iscomplicated is not None:
            self.iscomplicated = iscomplicated
        if available_for_unqualified is not None:
            self.available_for_unqualified = available_for_unqualified
        if sec_type_br_code is not None:
            self.sec_type_br_code = sec_type_br_code
        if original_country is not None:
            self.original_country = original_country
        if qualified_test_id is not None:
            self.qualified_test_id = qualified_test_id
        if qualified_test_id_tm is not None:
            self.qualified_test_id_tm = qualified_test_id_tm
        if base_asset_fintoolid is not None:
            self.base_asset_fintoolid = base_asset_fintoolid
        if isqualified is not None:
            self.isqualified = isqualified
        if listing_level_spb is not None:
            self.listing_level_spb = listing_level_spb
        if have_mm_moex is not None:
            self.have_mm_moex = have_mm_moex
        if have_mm_spb is not None:
            self.have_mm_spb = have_mm_spb
        if beg_book_date is not None:
            self.beg_book_date = beg_book_date
        if seniority is not None:
            self.seniority = seniority
        if tradesite is not None:
            self.tradesite = tradesite
        if counter is not None:
            self.counter = counter
        if rn is not None:
            self.rn = rn

    @property
    def facevalue_m(self):
        """Gets the facevalue_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Маркер сравнения начального номинала финансового инструмента НРД и Интерфакса\"  # noqa: E501

        :return: The facevalue_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._facevalue_m

    @facevalue_m.setter
    def facevalue_m(self, facevalue_m):
        """Sets the facevalue_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Маркер сравнения начального номинала финансового инструмента НРД и Интерфакса\"  # noqa: E501

        :param facevalue_m: The facevalue_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._facevalue_m = facevalue_m

    @property
    def faceftname_m(self):
        """Gets the faceftname_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Маркер сравнения валюты номинала НРД и Интерфакса\"  # noqa: E501

        :return: The faceftname_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._faceftname_m

    @faceftname_m.setter
    def faceftname_m(self, faceftname_m):
        """Sets the faceftname_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Маркер сравнения валюты номинала НРД и Интерфакса\"  # noqa: E501

        :param faceftname_m: The faceftname_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._faceftname_m = faceftname_m

    @property
    def sumissuevol_m(self):
        """Gets the sumissuevol_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Маркер сравнения заявленного объема эмиссии в штуках НРД и Интерфакса\"  # noqa: E501

        :return: The sumissuevol_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._sumissuevol_m

    @sumissuevol_m.setter
    def sumissuevol_m(self, sumissuevol_m):
        """Sets the sumissuevol_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Маркер сравнения заявленного объема эмиссии в штуках НРД и Интерфакса\"  # noqa: E501

        :param sumissuevol_m: The sumissuevol_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._sumissuevol_m = sumissuevol_m

    @property
    def summarketvol_m(self):
        """Gets the summarketvol_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Маркер сравнения объема в обращении в штуках НРД и Интерфакса\"  # noqa: E501

        :return: The summarketvol_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._summarketvol_m

    @summarketvol_m.setter
    def summarketvol_m(self, summarketvol_m):
        """Sets the summarketvol_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Маркер сравнения объема в обращении в штуках НРД и Интерфакса\"  # noqa: E501

        :param summarketvol_m: The summarketvol_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._summarketvol_m = summarketvol_m

    @property
    def numcoupons_m(self):
        """Gets the numcoupons_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Маркер сравнения количества купонов всего НРД и Интерфакса\"  # noqa: E501

        :return: The numcoupons_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._numcoupons_m

    @numcoupons_m.setter
    def numcoupons_m(self, numcoupons_m):
        """Sets the numcoupons_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Маркер сравнения количества купонов всего НРД и Интерфакса\"  # noqa: E501

        :param numcoupons_m: The numcoupons_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._numcoupons_m = numcoupons_m

    @property
    def nrdcode(self):
        """Gets the nrdcode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Код НРД финансового инструмента\"  # noqa: E501

        :return: The nrdcode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._nrdcode

    @nrdcode.setter
    def nrdcode(self, nrdcode):
        """Sets the nrdcode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Код НРД финансового инструмента\"  # noqa: E501

        :param nrdcode: The nrdcode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._nrdcode = nrdcode

    @property
    def regcode_m(self):
        """Gets the regcode_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Маркер сравнения регистрационного номера финансового инструмента НРД и Интерфакса\"  # noqa: E501

        :return: The regcode_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._regcode_m

    @regcode_m.setter
    def regcode_m(self, regcode_m):
        """Sets the regcode_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Маркер сравнения регистрационного номера финансового инструмента НРД и Интерфакса\"  # noqa: E501

        :param regcode_m: The regcode_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._regcode_m = regcode_m

    @property
    def regdate_m(self):
        """Gets the regdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REGISTR\" - \"description_rus\": \"Маркер сравнения даты государственной регистрации выпуска НРД и Интерфакса\"  # noqa: E501

        :return: The regdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._regdate_m

    @regdate_m.setter
    def regdate_m(self, regdate_m):
        """Sets the regdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REGISTR\" - \"description_rus\": \"Маркер сравнения даты государственной регистрации выпуска НРД и Интерфакса\"  # noqa: E501

        :param regdate_m: The regdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._regdate_m = regdate_m

    @property
    def regdistdate_m(self):
        """Gets the regdistdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REPORT\" - \"description_rus\": \"Маркер сравнения даты регистрации отчета о выпуске финансового инструмента / даты отсылки уведомления НРД и Интерфакса\"  # noqa: E501

        :return: The regdistdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._regdistdate_m

    @regdistdate_m.setter
    def regdistdate_m(self, regdistdate_m):
        """Sets the regdistdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REPORT\" - \"description_rus\": \"Маркер сравнения даты регистрации отчета о выпуске финансового инструмента / даты отсылки уведомления НРД и Интерфакса\"  # noqa: E501

        :param regdistdate_m: The regdistdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._regdistdate_m = regdistdate_m

    @property
    def begdistdate_m(self):
        """Gets the begdistdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Маркер сравнения даты начала размещения НРД и Интерфакса\"  # noqa: E501

        :return: The begdistdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._begdistdate_m

    @begdistdate_m.setter
    def begdistdate_m(self, begdistdate_m):
        """Sets the begdistdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Маркер сравнения даты начала размещения НРД и Интерфакса\"  # noqa: E501

        :param begdistdate_m: The begdistdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._begdistdate_m = begdistdate_m

    @property
    def enddistdate_m(self):
        """Gets the enddistdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Маркер сравнения даты окончания размещения НРД и Интерфакса\"  # noqa: E501

        :return: The enddistdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._enddistdate_m

    @enddistdate_m.setter
    def enddistdate_m(self, enddistdate_m):
        """Sets the enddistdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Маркер сравнения даты окончания размещения НРД и Интерфакса\"  # noqa: E501

        :param enddistdate_m: The enddistdate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._enddistdate_m = enddistdate_m

    @property
    def endmtydate_m(self):
        """Gets the endmtydate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Маркер сравнения даты погашения финансового инструмента НРД и Интерфакса\"  # noqa: E501

        :return: The endmtydate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._endmtydate_m

    @endmtydate_m.setter
    def endmtydate_m(self, endmtydate_m):
        """Sets the endmtydate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Маркер сравнения даты погашения финансового инструмента НРД и Интерфакса\"  # noqa: E501

        :param endmtydate_m: The endmtydate_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._endmtydate_m = endmtydate_m

    @property
    def daysall_m(self):
        """Gets the daysall_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Маркер сравнения количества дней с даты начала размещения до даты окончания погашения облигации НРД и Интерфакса\"  # noqa: E501

        :return: The daysall_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._daysall_m

    @daysall_m.setter
    def daysall_m(self, daysall_m):
        """Sets the daysall_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Маркер сравнения количества дней с даты начала размещения до даты окончания погашения облигации НРД и Интерфакса\"  # noqa: E501

        :param daysall_m: The daysall_m of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._daysall_m = daysall_m

    @property
    def fullname_nrd(self):
        """Gets the fullname_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"NAME\" - \"description_rus\": \"Полное название финансового инструмента по базе НРД\"  # noqa: E501

        :return: The fullname_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_nrd

    @fullname_nrd.setter
    def fullname_nrd(self, fullname_nrd):
        """Sets the fullname_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"NAME\" - \"description_rus\": \"Полное название финансового инструмента по базе НРД\"  # noqa: E501

        :param fullname_nrd: The fullname_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._fullname_nrd = fullname_nrd

    @property
    def rpregorg_nrd(self):
        """Gets the rpregorg_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REPORT\" - \"description_rus\": \"Орган, осуществивший регистрацию отчета по базе НРД\"  # noqa: E501

        :return: The rpregorg_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._rpregorg_nrd

    @rpregorg_nrd.setter
    def rpregorg_nrd(self, rpregorg_nrd):
        """Sets the rpregorg_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REPORT\" - \"description_rus\": \"Орган, осуществивший регистрацию отчета по базе НРД\"  # noqa: E501

        :param rpregorg_nrd: The rpregorg_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._rpregorg_nrd = rpregorg_nrd

    @property
    def rpstate_nrd(self):
        """Gets the rpstate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REPORT\" - \"description_rus\": \"Состояние отчета о выпуске по базе НРД. Список возможных значений возвращает метод /EnumValues (‘referenceData’, ‘RpState_NRD’).\"  # noqa: E501

        :return: The rpstate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._rpstate_nrd

    @rpstate_nrd.setter
    def rpstate_nrd(self, rpstate_nrd):
        """Sets the rpstate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REPORT\" - \"description_rus\": \"Состояние отчета о выпуске по базе НРД. Список возможных значений возвращает метод /EnumValues (‘referenceData’, ‘RpState_NRD’).\"  # noqa: E501

        :param rpstate_nrd: The rpstate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._rpstate_nrd = rpstate_nrd

    @property
    def issuenumber(self):
        """Gets the issuenumber of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Номер выпуска по базе НРД\"  # noqa: E501

        :return: The issuenumber of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._issuenumber

    @issuenumber.setter
    def issuenumber(self, issuenumber):
        """Sets the issuenumber of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Номер выпуска по базе НРД\"  # noqa: E501

        :param issuenumber: The issuenumber of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._issuenumber = issuenumber

    @property
    def currentfacevalue_nrd(self):
        """Gets the currentfacevalue_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Текущий номинал облигации с учетом амортизации по базе НРД\"  # noqa: E501

        :return: The currentfacevalue_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: float
        """
        return self._currentfacevalue_nrd

    @currentfacevalue_nrd.setter
    def currentfacevalue_nrd(self, currentfacevalue_nrd):
        """Sets the currentfacevalue_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Текущий номинал облигации с учетом амортизации по базе НРД\"  # noqa: E501

        :param currentfacevalue_nrd: The currentfacevalue_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: float
        """

        self._currentfacevalue_nrd = currentfacevalue_nrd

    @property
    def isqualified_nrd(self):
        """Gets the isqualified_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"QI\" - \"description_rus\": \"Для квалифицированных инвесторов (1/0) по базе НРД\"  # noqa: E501

        :return: The isqualified_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._isqualified_nrd

    @isqualified_nrd.setter
    def isqualified_nrd(self, isqualified_nrd):
        """Sets the isqualified_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"QI\" - \"description_rus\": \"Для квалифицированных инвесторов (1/0) по базе НРД\"  # noqa: E501

        :param isqualified_nrd: The isqualified_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._isqualified_nrd = isqualified_nrd

    @property
    def bondseries(self):
        """Gets the bondseries of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Номер серии по базе НРД\"  # noqa: E501

        :return: The bondseries of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._bondseries

    @bondseries.setter
    def bondseries(self, bondseries):
        """Sets the bondseries of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Номер серии по базе НРД\"  # noqa: E501

        :param bondseries: The bondseries of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._bondseries = bondseries

    @property
    def islombardcbr_nrd(self):
        """Gets the islombardcbr_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"LIST\" - \"description_rus\": \"Включение в ломбардный список (1/0) по базе НРД\"  # noqa: E501

        :return: The islombardcbr_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._islombardcbr_nrd

    @islombardcbr_nrd.setter
    def islombardcbr_nrd(self, islombardcbr_nrd):
        """Sets the islombardcbr_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"LIST\" - \"description_rus\": \"Включение в ломбардный список (1/0) по базе НРД\"  # noqa: E501

        :param islombardcbr_nrd: The islombardcbr_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._islombardcbr_nrd = islombardcbr_nrd

    @property
    def numcoupons_nrd(self):
        """Gets the numcoupons_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Количество купонов всего по базе НРД\"  # noqa: E501

        :return: The numcoupons_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._numcoupons_nrd

    @numcoupons_nrd.setter
    def numcoupons_nrd(self, numcoupons_nrd):
        """Sets the numcoupons_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Количество купонов всего по базе НРД\"  # noqa: E501

        :param numcoupons_nrd: The numcoupons_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._numcoupons_nrd = numcoupons_nrd

    @property
    def facevalue_nrd(self):
        """Gets the facevalue_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Номинал финансового инструмента по базе НРД\"  # noqa: E501

        :return: The facevalue_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: float
        """
        return self._facevalue_nrd

    @facevalue_nrd.setter
    def facevalue_nrd(self, facevalue_nrd):
        """Sets the facevalue_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Номинал финансового инструмента по базе НРД\"  # noqa: E501

        :param facevalue_nrd: The facevalue_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: float
        """

        self._facevalue_nrd = facevalue_nrd

    @property
    def faceftname_nrd(self):
        """Gets the faceftname_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Валюта номинала финансового инструмента по базе НРД. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘FaceFTName_NRD’).\"  # noqa: E501

        :return: The faceftname_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._faceftname_nrd

    @faceftname_nrd.setter
    def faceftname_nrd(self, faceftname_nrd):
        """Sets the faceftname_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Валюта номинала финансового инструмента по базе НРД. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘FaceFTName_NRD’).\"  # noqa: E501

        :param faceftname_nrd: The faceftname_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._faceftname_nrd = faceftname_nrd

    @property
    def summarketvol_nrd(self):
        """Gets the summarketvol_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Объем в обращении в штуках по базе НРД\"  # noqa: E501

        :return: The summarketvol_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: float
        """
        return self._summarketvol_nrd

    @summarketvol_nrd.setter
    def summarketvol_nrd(self, summarketvol_nrd):
        """Sets the summarketvol_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Объем в обращении в штуках по базе НРД\"  # noqa: E501

        :param summarketvol_nrd: The summarketvol_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: float
        """

        self._summarketvol_nrd = summarketvol_nrd

    @property
    def regcode_nrd(self):
        """Gets the regcode_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Регистрационный номер финансового инструмента в базе НРД\"  # noqa: E501

        :return: The regcode_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._regcode_nrd

    @regcode_nrd.setter
    def regcode_nrd(self, regcode_nrd):
        """Sets the regcode_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Регистрационный номер финансового инструмента в базе НРД\"  # noqa: E501

        :param regcode_nrd: The regcode_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._regcode_nrd = regcode_nrd

    @property
    def regdate_nrd(self):
        """Gets the regdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REGISTR\" - \"description_rus\": \"Дата государственной регистрации выпуска в базе НРД\"  # noqa: E501

        :return: The regdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._regdate_nrd

    @regdate_nrd.setter
    def regdate_nrd(self, regdate_nrd):
        """Sets the regdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REGISTR\" - \"description_rus\": \"Дата государственной регистрации выпуска в базе НРД\"  # noqa: E501

        :param regdate_nrd: The regdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._regdate_nrd = regdate_nrd

    @property
    def regorg_nrd(self):
        """Gets the regorg_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REGISTR\" - \"description_rus\": \"Регистрирующий орган по базе НРД\"  # noqa: E501

        :return: The regorg_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._regorg_nrd

    @regorg_nrd.setter
    def regorg_nrd(self, regorg_nrd):
        """Sets the regorg_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REGISTR\" - \"description_rus\": \"Регистрирующий орган по базе НРД\"  # noqa: E501

        :param regorg_nrd: The regorg_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._regorg_nrd = regorg_nrd

    @property
    def begdistdate_nrd(self):
        """Gets the begdistdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Дата начала размещения по базе НРД\"  # noqa: E501

        :return: The begdistdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._begdistdate_nrd

    @begdistdate_nrd.setter
    def begdistdate_nrd(self, begdistdate_nrd):
        """Sets the begdistdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Дата начала размещения по базе НРД\"  # noqa: E501

        :param begdistdate_nrd: The begdistdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._begdistdate_nrd = begdistdate_nrd

    @property
    def daysall_nrd(self):
        """Gets the daysall_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Количество дней с даты начала размещения до даты окончания погашения облигации по базе НРД\"  # noqa: E501

        :return: The daysall_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._daysall_nrd

    @daysall_nrd.setter
    def daysall_nrd(self, daysall_nrd):
        """Sets the daysall_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Количество дней с даты начала размещения до даты окончания погашения облигации по базе НРД\"  # noqa: E501

        :param daysall_nrd: The daysall_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._daysall_nrd = daysall_nrd

    @property
    def enddistdate_nrd(self):
        """Gets the enddistdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Дата окончания размещения по базе НРД\"  # noqa: E501

        :return: The enddistdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._enddistdate_nrd

    @enddistdate_nrd.setter
    def enddistdate_nrd(self, enddistdate_nrd):
        """Sets the enddistdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Дата окончания размещения по базе НРД\"  # noqa: E501

        :param enddistdate_nrd: The enddistdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._enddistdate_nrd = enddistdate_nrd

    @property
    def endmtydate_nrd(self):
        """Gets the endmtydate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Дата погашения финансового инструмента по базе НРД\"  # noqa: E501

        :return: The endmtydate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._endmtydate_nrd

    @endmtydate_nrd.setter
    def endmtydate_nrd(self, endmtydate_nrd):
        """Sets the endmtydate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Дата погашения финансового инструмента по базе НРД\"  # noqa: E501

        :param endmtydate_nrd: The endmtydate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._endmtydate_nrd = endmtydate_nrd

    @property
    def regdistdate_nrd(self):
        """Gets the regdistdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REPORT\" - \"description_rus\": \"Дата регистрации отчета о выпуске финансового инструмента / дата отсылки уведомления по базе НРД\"  # noqa: E501

        :return: The regdistdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._regdistdate_nrd

    @regdistdate_nrd.setter
    def regdistdate_nrd(self, regdistdate_nrd):
        """Sets the regdistdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REPORT\" - \"description_rus\": \"Дата регистрации отчета о выпуске финансового инструмента / дата отсылки уведомления по базе НРД\"  # noqa: E501

        :param regdistdate_nrd: The regdistdate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._regdistdate_nrd = regdistdate_nrd

    @property
    def sumissuevol_nrd(self):
        """Gets the sumissuevol_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Заявленный объем эмиссии в штуках по базе НРД\"  # noqa: E501

        :return: The sumissuevol_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: float
        """
        return self._sumissuevol_nrd

    @sumissuevol_nrd.setter
    def sumissuevol_nrd(self, sumissuevol_nrd):
        """Sets the sumissuevol_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Заявленный объем эмиссии в штуках по базе НРД\"  # noqa: E501

        :param sumissuevol_nrd: The sumissuevol_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: float
        """

        self._sumissuevol_nrd = sumissuevol_nrd

    @property
    def drqty(self):
        """Gets the drqty of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Количество ДР\"  # noqa: E501

        :return: The drqty of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._drqty

    @drqty.setter
    def drqty(self, drqty):
        """Sets the drqty of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Количество ДР\"  # noqa: E501

        :param drqty: The drqty of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._drqty = drqty

    @property
    def isincodebase_nrd(self):
        """Gets the isincodebase_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"BASE\" - \"description_rus\": \"ISIN-код выпуска акций, на которые выпущены расписки\"  # noqa: E501

        :return: The isincodebase_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._isincodebase_nrd

    @isincodebase_nrd.setter
    def isincodebase_nrd(self, isincodebase_nrd):
        """Sets the isincodebase_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"BASE\" - \"description_rus\": \"ISIN-код выпуска акций, на которые выпущены расписки\"  # noqa: E501

        :param isincodebase_nrd: The isincodebase_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._isincodebase_nrd = isincodebase_nrd

    @property
    def nrdcompcode(self):
        """Gets the nrdcompcode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"Код НРД эмитента\"  # noqa: E501

        :return: The nrdcompcode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._nrdcompcode

    @nrdcompcode.setter
    def nrdcompcode(self, nrdcompcode):
        """Sets the nrdcompcode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"Код НРД эмитента\"  # noqa: E501

        :param nrdcompcode: The nrdcompcode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._nrdcompcode = nrdcompcode

    @property
    def shqty(self):
        """Gets the shqty of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Количество представляемых ц.б.\"  # noqa: E501

        :return: The shqty of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._shqty

    @shqty.setter
    def shqty(self, shqty):
        """Sets the shqty of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Количество представляемых ц.б.\"  # noqa: E501

        :param shqty: The shqty of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._shqty = shqty

    @property
    def summarketvolorig_nrd(self):
        """Gets the summarketvolorig_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Объем бумаг в обращении (с учетом доп. выпусков за вычетом погашенных ц.б) по остаточной номинальной стоимости\"  # noqa: E501

        :return: The summarketvolorig_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._summarketvolorig_nrd

    @summarketvolorig_nrd.setter
    def summarketvolorig_nrd(self, summarketvolorig_nrd):
        """Sets the summarketvolorig_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Объем бумаг в обращении (с учетом доп. выпусков за вычетом погашенных ц.б) по остаточной номинальной стоимости\"  # noqa: E501

        :param summarketvolorig_nrd: The summarketvolorig_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._summarketvolorig_nrd = summarketvolorig_nrd

    @property
    def issuername_nrd(self):
        """Gets the issuername_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"Название оператора выпуска финансового инструмента по базе НРД\"  # noqa: E501

        :return: The issuername_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._issuername_nrd

    @issuername_nrd.setter
    def issuername_nrd(self, issuername_nrd):
        """Sets the issuername_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"Название оператора выпуска финансового инструмента по базе НРД\"  # noqa: E501

        :param issuername_nrd: The issuername_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._issuername_nrd = issuername_nrd

    @property
    def planmtydate_nrd(self):
        """Gets the planmtydate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Дата погашения плановая\"  # noqa: E501

        :return: The planmtydate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._planmtydate_nrd

    @planmtydate_nrd.setter
    def planmtydate_nrd(self, planmtydate_nrd):
        """Sets the planmtydate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Дата погашения плановая\"  # noqa: E501

        :param planmtydate_nrd: The planmtydate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._planmtydate_nrd = planmtydate_nrd

    @property
    def firstcoupondate_nrd(self):
        """Gets the firstcoupondate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Дата начала начисления первого купона\"  # noqa: E501

        :return: The firstcoupondate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._firstcoupondate_nrd

    @firstcoupondate_nrd.setter
    def firstcoupondate_nrd(self, firstcoupondate_nrd):
        """Sets the firstcoupondate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Дата начала начисления первого купона\"  # noqa: E501

        :param firstcoupondate_nrd: The firstcoupondate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._firstcoupondate_nrd = firstcoupondate_nrd

    @property
    def depositary_nrd(self):
        """Gets the depositary_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"DEPO\" - \"description_rus\": \"Уполномоченный депозитарий\"  # noqa: E501

        :return: The depositary_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._depositary_nrd

    @depositary_nrd.setter
    def depositary_nrd(self, depositary_nrd):
        """Sets the depositary_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"DEPO\" - \"description_rus\": \"Уполномоченный депозитарий\"  # noqa: E501

        :param depositary_nrd: The depositary_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._depositary_nrd = depositary_nrd

    @property
    def registrar_nrd(self):
        """Gets the registrar_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"DEPO\" - \"description_rus\": \"Реестродержатель\"  # noqa: E501

        :return: The registrar_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._registrar_nrd

    @registrar_nrd.setter
    def registrar_nrd(self, registrar_nrd):
        """Sets the registrar_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"DEPO\" - \"description_rus\": \"Реестродержатель\"  # noqa: E501

        :param registrar_nrd: The registrar_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._registrar_nrd = registrar_nrd

    @property
    def placeprice_nrd(self):
        """Gets the placeprice_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Цена размещения в валюте номинала\"  # noqa: E501

        :return: The placeprice_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: float
        """
        return self._placeprice_nrd

    @placeprice_nrd.setter
    def placeprice_nrd(self, placeprice_nrd):
        """Sets the placeprice_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Цена размещения в валюте номинала\"  # noqa: E501

        :param placeprice_nrd: The placeprice_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: float
        """

        self._placeprice_nrd = placeprice_nrd

    @property
    def micexlist_nrd(self):
        """Gets the micexlist_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"LIST\" - \"description_rus\": \"Листинг/внесписочные (ФБ ММВБ)\"  # noqa: E501

        :return: The micexlist_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._micexlist_nrd

    @micexlist_nrd.setter
    def micexlist_nrd(self, micexlist_nrd):
        """Sets the micexlist_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"LIST\" - \"description_rus\": \"Листинг/внесписочные (ФБ ММВБ)\"  # noqa: E501

        :param micexlist_nrd: The micexlist_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._micexlist_nrd = micexlist_nrd

    @property
    def minlot_nrd(self):
        """Gets the minlot_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"DEPO\" - \"description_rus\": \"Минимальный лот (в валюте номинала) для проведения расчетов в ISCD\"  # noqa: E501

        :return: The minlot_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: float
        """
        return self._minlot_nrd

    @minlot_nrd.setter
    def minlot_nrd(self, minlot_nrd):
        """Sets the minlot_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"DEPO\" - \"description_rus\": \"Минимальный лот (в валюте номинала) для проведения расчетов в ISCD\"  # noqa: E501

        :param minlot_nrd: The minlot_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: float
        """

        self._minlot_nrd = minlot_nrd

    @property
    def formarketbonds_nrd(self):
        """Gets the formarketbonds_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Признак биржевой облигации\"  # noqa: E501

        :return: The formarketbonds_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._formarketbonds_nrd

    @formarketbonds_nrd.setter
    def formarketbonds_nrd(self, formarketbonds_nrd):
        """Sets the formarketbonds_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Признак биржевой облигации\"  # noqa: E501

        :param formarketbonds_nrd: The formarketbonds_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._formarketbonds_nrd = formarketbonds_nrd

    @property
    def registraracctype_nrd(self):
        """Gets the registraracctype_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"ACC\" - \"description_rus\": \"Тип лицевого счета (НД или НДЦД). Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘RegistrarAccType_NRD’).\"  # noqa: E501

        :return: The registraracctype_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._registraracctype_nrd

    @registraracctype_nrd.setter
    def registraracctype_nrd(self, registraracctype_nrd):
        """Sets the registraracctype_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"ACC\" - \"description_rus\": \"Тип лицевого счета (НД или НДЦД). Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘RegistrarAccType_NRD’).\"  # noqa: E501

        :param registraracctype_nrd: The registraracctype_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._registraracctype_nrd = registraracctype_nrd

    @property
    def registraracctypedate_nrd(self):
        """Gets the registraracctypedate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"ACC\" - \"description_rus\": \"Дата открытия лицевого счета/изменения типа ЛС\"  # noqa: E501

        :return: The registraracctypedate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._registraracctypedate_nrd

    @registraracctypedate_nrd.setter
    def registraracctypedate_nrd(self, registraracctypedate_nrd):
        """Sets the registraracctypedate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"ACC\" - \"description_rus\": \"Дата открытия лицевого счета/изменения типа ЛС\"  # noqa: E501

        :param registraracctypedate_nrd: The registraracctypedate_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._registraracctypedate_nrd = registraracctypedate_nrd

    @property
    def facialacc_nrd(self):
        """Gets the facialacc_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"ACC\" - \"description_rus\": \"Номер лицевого счета\"  # noqa: E501

        :return: The facialacc_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._facialacc_nrd

    @facialacc_nrd.setter
    def facialacc_nrd(self, facialacc_nrd):
        """Sets the facialacc_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"ACC\" - \"description_rus\": \"Номер лицевого счета\"  # noqa: E501

        :param facialacc_nrd: The facialacc_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._facialacc_nrd = facialacc_nrd

    @property
    def acc_open_date_nrd(self):
        """Gets the acc_open_date_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"ACC\" - \"description_rus\": \"Дата первого открытия ЛС в реестре\"  # noqa: E501

        :return: The acc_open_date_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._acc_open_date_nrd

    @acc_open_date_nrd.setter
    def acc_open_date_nrd(self, acc_open_date_nrd):
        """Sets the acc_open_date_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"ACC\" - \"description_rus\": \"Дата первого открытия ЛС в реестре\"  # noqa: E501

        :param acc_open_date_nrd: The acc_open_date_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._acc_open_date_nrd = acc_open_date_nrd

    @property
    def fraction_nrd(self):
        """Gets the fraction_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Количество знаков после запятой\"  # noqa: E501

        :return: The fraction_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._fraction_nrd

    @fraction_nrd.setter
    def fraction_nrd(self, fraction_nrd):
        """Sets the fraction_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Количество знаков после запятой\"  # noqa: E501

        :param fraction_nrd: The fraction_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._fraction_nrd = fraction_nrd

    @property
    def specialized_depo_nrd(self):
        """Gets the specialized_depo_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"DEPO\" - \"description_rus\": \"Код НРД специализированного депозитария\"  # noqa: E501

        :return: The specialized_depo_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._specialized_depo_nrd

    @specialized_depo_nrd.setter
    def specialized_depo_nrd(self, specialized_depo_nrd):
        """Sets the specialized_depo_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"CUSTODY\" - \"field_subgroup\": \"DEPO\" - \"description_rus\": \"Код НРД специализированного депозитария\"  # noqa: E501

        :param specialized_depo_nrd: The specialized_depo_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._specialized_depo_nrd = specialized_depo_nrd

    @property
    def cmp_code_nsd_issuer_nrd(self):
        """Gets the cmp_code_nsd_issuer_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"FUND\" - \"description_rus\": \"Код НРД фонда/ИСУ\"  # noqa: E501

        :return: The cmp_code_nsd_issuer_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._cmp_code_nsd_issuer_nrd

    @cmp_code_nsd_issuer_nrd.setter
    def cmp_code_nsd_issuer_nrd(self, cmp_code_nsd_issuer_nrd):
        """Sets the cmp_code_nsd_issuer_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"FUND\" - \"description_rus\": \"Код НРД фонда/ИСУ\"  # noqa: E501

        :param cmp_code_nsd_issuer_nrd: The cmp_code_nsd_issuer_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._cmp_code_nsd_issuer_nrd = cmp_code_nsd_issuer_nrd

    @property
    def cmp_code_nsd_managing_nrd(self):
        """Gets the cmp_code_nsd_managing_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"FUND\" - \"description_rus\": \"Код НРД управляющего ипотечным покрытием\"  # noqa: E501

        :return: The cmp_code_nsd_managing_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._cmp_code_nsd_managing_nrd

    @cmp_code_nsd_managing_nrd.setter
    def cmp_code_nsd_managing_nrd(self, cmp_code_nsd_managing_nrd):
        """Sets the cmp_code_nsd_managing_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"FUND\" - \"description_rus\": \"Код НРД управляющего ипотечным покрытием\"  # noqa: E501

        :param cmp_code_nsd_managing_nrd: The cmp_code_nsd_managing_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._cmp_code_nsd_managing_nrd = cmp_code_nsd_managing_nrd

    @property
    def ratetypenamerus_nrd(self):
        """Gets the ratetypenamerus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Наименование вида купона (процента), русское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘RateTypeNameRus_NRD’).\"  # noqa: E501

        :return: The ratetypenamerus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._ratetypenamerus_nrd

    @ratetypenamerus_nrd.setter
    def ratetypenamerus_nrd(self, ratetypenamerus_nrd):
        """Sets the ratetypenamerus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Наименование вида купона (процента), русское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘RateTypeNameRus_NRD’).\"  # noqa: E501

        :param ratetypenamerus_nrd: The ratetypenamerus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._ratetypenamerus_nrd = ratetypenamerus_nrd

    @property
    def ratetypenameeng_nrd(self):
        """Gets the ratetypenameeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Наименование вида купона (процента), английское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘RateTypeNameEng_NRD’).\"  # noqa: E501

        :return: The ratetypenameeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._ratetypenameeng_nrd

    @ratetypenameeng_nrd.setter
    def ratetypenameeng_nrd(self, ratetypenameeng_nrd):
        """Sets the ratetypenameeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Наименование вида купона (процента), английское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘RateTypeNameEng_NRD’).\"  # noqa: E501

        :param ratetypenameeng_nrd: The ratetypenameeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._ratetypenameeng_nrd = ratetypenameeng_nrd

    @property
    def coupontypename_nrd(self):
        """Gets the coupontypename_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Наименование типа купонного периода. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘CouponTypeName_NRD’).\"  # noqa: E501

        :return: The coupontypename_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._coupontypename_nrd

    @coupontypename_nrd.setter
    def coupontypename_nrd(self, coupontypename_nrd):
        """Sets the coupontypename_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Наименование типа купонного периода. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘CouponTypeName_NRD’).\"  # noqa: E501

        :param coupontypename_nrd: The coupontypename_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._coupontypename_nrd = coupontypename_nrd

    @property
    def base_month(self):
        """Gets the base_month of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Базовый месяц по базе НРД\"  # noqa: E501

        :return: The base_month of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._base_month

    @base_month.setter
    def base_month(self, base_month):
        """Sets the base_month of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Базовый месяц по базе НРД\"  # noqa: E501

        :param base_month: The base_month of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._base_month = base_month

    @property
    def base_year(self):
        """Gets the base_year of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Базовый год по базе НРД\"  # noqa: E501

        :return: The base_year of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._base_year

    @base_year.setter
    def base_year(self, base_year):
        """Sets the base_year of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Базовый год по базе НРД\"  # noqa: E501

        :param base_year: The base_year of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._base_year = base_year

    @property
    def basis_nrd(self):
        """Gets the basis_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Базис НКД по базе НРД. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘Basis_NRD’).\"  # noqa: E501

        :return: The basis_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._basis_nrd

    @basis_nrd.setter
    def basis_nrd(self, basis_nrd):
        """Sets the basis_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Базис НКД по базе НРД. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘Basis_NRD’).\"  # noqa: E501

        :param basis_nrd: The basis_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._basis_nrd = basis_nrd

    @property
    def sectypenamerus_nrd(self):
        """Gets the sectypenamerus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Наименование типа ценных бумаг, русское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecTypeNameRus_NRD’).\"  # noqa: E501

        :return: The sectypenamerus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._sectypenamerus_nrd

    @sectypenamerus_nrd.setter
    def sectypenamerus_nrd(self, sectypenamerus_nrd):
        """Sets the sectypenamerus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Наименование типа ценных бумаг, русское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecTypeNameRus_NRD’).\"  # noqa: E501

        :param sectypenamerus_nrd: The sectypenamerus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._sectypenamerus_nrd = sectypenamerus_nrd

    @property
    def sectypenameeng_nrd(self):
        """Gets the sectypenameeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Наименование типа ценных бумаг, английское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecTypeNameEng_NRD’).\"  # noqa: E501

        :return: The sectypenameeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._sectypenameeng_nrd

    @sectypenameeng_nrd.setter
    def sectypenameeng_nrd(self, sectypenameeng_nrd):
        """Sets the sectypenameeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Наименование типа ценных бумаг, английское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecTypeNameEng_NRD’).\"  # noqa: E501

        :param sectypenameeng_nrd: The sectypenameeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._sectypenameeng_nrd = sectypenameeng_nrd

    @property
    def secformnamerus_nrd(self):
        """Gets the secformnamerus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Наименование формы выпуска(русс). Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecFormNameRus_NRD’).\"  # noqa: E501

        :return: The secformnamerus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._secformnamerus_nrd

    @secformnamerus_nrd.setter
    def secformnamerus_nrd(self, secformnamerus_nrd):
        """Sets the secformnamerus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Наименование формы выпуска(русс). Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecFormNameRus_NRD’).\"  # noqa: E501

        :param secformnamerus_nrd: The secformnamerus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._secformnamerus_nrd = secformnamerus_nrd

    @property
    def secformnameeng_nrd(self):
        """Gets the secformnameeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Наименование формы выпуска(англ). Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecFormNameEng_NRD’).\"  # noqa: E501

        :return: The secformnameeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._secformnameeng_nrd

    @secformnameeng_nrd.setter
    def secformnameeng_nrd(self, secformnameeng_nrd):
        """Sets the secformnameeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Наименование формы выпуска(англ). Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecFormNameEng_NRD’).\"  # noqa: E501

        :param secformnameeng_nrd: The secformnameeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._secformnameeng_nrd = secformnameeng_nrd

    @property
    def sectypenamebr_nrd(self):
        """Gets the sectypenamebr_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Наименование типа ц.б.по классификации Банка России. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘SecTypeNameBR_NRD’).\"  # noqa: E501

        :return: The sectypenamebr_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._sectypenamebr_nrd

    @sectypenamebr_nrd.setter
    def sectypenamebr_nrd(self, sectypenamebr_nrd):
        """Sets the sectypenamebr_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Наименование типа ц.б.по классификации Банка России. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘SecTypeNameBR_NRD’).\"  # noqa: E501

        :param sectypenamebr_nrd: The sectypenamebr_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._sectypenamebr_nrd = sectypenamebr_nrd

    @property
    def secstaterus_nrd(self):
        """Gets the secstaterus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"STATUS\" - \"description_rus\": \"Наименование состояния бумаги/ выпуска/транша, русское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecStateRus_NRD’).\"  # noqa: E501

        :return: The secstaterus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._secstaterus_nrd

    @secstaterus_nrd.setter
    def secstaterus_nrd(self, secstaterus_nrd):
        """Sets the secstaterus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"STATUS\" - \"description_rus\": \"Наименование состояния бумаги/ выпуска/транша, русское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecStateRus_NRD’).\"  # noqa: E501

        :param secstaterus_nrd: The secstaterus_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._secstaterus_nrd = secstaterus_nrd

    @property
    def secstateeng_nrd(self):
        """Gets the secstateeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"STATUS\" - \"description_rus\": \"Наименование состояния бумаги/ выпуска/транша, англ. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecStateEng_NRD’).\"  # noqa: E501

        :return: The secstateeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._secstateeng_nrd

    @secstateeng_nrd.setter
    def secstateeng_nrd(self, secstateeng_nrd):
        """Sets the secstateeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"STATUS\" - \"description_rus\": \"Наименование состояния бумаги/ выпуска/транша, англ. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecStateEng_NRD’).\"  # noqa: E501

        :param secstateeng_nrd: The secstateeng_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._secstateeng_nrd = secstateeng_nrd

    @property
    def placementtype_nrd(self):
        """Gets the placementtype_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Наименование способа размещения ценных бумаг. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘PlacementType_NRD’).\"  # noqa: E501

        :return: The placementtype_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._placementtype_nrd

    @placementtype_nrd.setter
    def placementtype_nrd(self, placementtype_nrd):
        """Sets the placementtype_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Наименование способа размещения ценных бумаг. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘PlacementType_NRD’).\"  # noqa: E501

        :param placementtype_nrd: The placementtype_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._placementtype_nrd = placementtype_nrd

    @property
    def share_category_name_nrd(self):
        """Gets the share_category_name_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"SHARE\" - \"description_rus\": \"Наименование категории, русское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘Share_Category_Name_NRD’).\"  # noqa: E501

        :return: The share_category_name_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._share_category_name_nrd

    @share_category_name_nrd.setter
    def share_category_name_nrd(self, share_category_name_nrd):
        """Sets the share_category_name_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"SHARE\" - \"description_rus\": \"Наименование категории, русское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘Share_Category_Name_NRD’).\"  # noqa: E501

        :param share_category_name_nrd: The share_category_name_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._share_category_name_nrd = share_category_name_nrd

    @property
    def share_category_name_en_nrd(self):
        """Gets the share_category_name_en_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"SHARE\" - \"description_rus\": \"Наименование категории, английское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘Share_Category_Name_En_NRD’).\"  # noqa: E501

        :return: The share_category_name_en_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._share_category_name_en_nrd

    @share_category_name_en_nrd.setter
    def share_category_name_en_nrd(self, share_category_name_en_nrd):
        """Sets the share_category_name_en_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"SHARE\" - \"description_rus\": \"Наименование категории, английское. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘Share_Category_Name_En_NRD’).\"  # noqa: E501

        :param share_category_name_en_nrd: The share_category_name_en_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._share_category_name_en_nrd = share_category_name_en_nrd

    @property
    def dr_category_name_nrd(self):
        """Gets the dr_category_name_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"DR\" - \"description_rus\": \"Полное наименование категории депозитарных расписок (рус.)\"  # noqa: E501

        :return: The dr_category_name_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._dr_category_name_nrd

    @dr_category_name_nrd.setter
    def dr_category_name_nrd(self, dr_category_name_nrd):
        """Sets the dr_category_name_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"DR\" - \"description_rus\": \"Полное наименование категории депозитарных расписок (рус.)\"  # noqa: E501

        :param dr_category_name_nrd: The dr_category_name_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._dr_category_name_nrd = dr_category_name_nrd

    @property
    def dr_category_name_en_nrd(self):
        """Gets the dr_category_name_en_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"DR\" - \"description_rus\": \"Полное наименование категории депозитарных расписок (англ.)\"  # noqa: E501

        :return: The dr_category_name_en_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._dr_category_name_en_nrd

    @dr_category_name_en_nrd.setter
    def dr_category_name_en_nrd(self, dr_category_name_en_nrd):
        """Sets the dr_category_name_en_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"DR\" - \"description_rus\": \"Полное наименование категории депозитарных расписок (англ.)\"  # noqa: E501

        :param dr_category_name_en_nrd: The dr_category_name_en_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._dr_category_name_en_nrd = dr_category_name_en_nrd

    @property
    def company_state_name_nrd(self):
        """Gets the company_state_name_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"FUND\" - \"description_rus\": \"Наименование состояния организации\"  # noqa: E501

        :return: The company_state_name_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._company_state_name_nrd

    @company_state_name_nrd.setter
    def company_state_name_nrd(self, company_state_name_nrd):
        """Sets the company_state_name_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"FUND\" - \"description_rus\": \"Наименование состояния организации\"  # noqa: E501

        :param company_state_name_nrd: The company_state_name_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._company_state_name_nrd = company_state_name_nrd

    @property
    def rate_type_id(self):
        """Gets the rate_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Идентификатор вида купона (процента)\"  # noqa: E501

        :return: The rate_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._rate_type_id

    @rate_type_id.setter
    def rate_type_id(self, rate_type_id):
        """Sets the rate_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Идентификатор вида купона (процента)\"  # noqa: E501

        :param rate_type_id: The rate_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._rate_type_id = rate_type_id

    @property
    def cp_type_id(self):
        """Gets the cp_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Периодичность выплаты купона\"  # noqa: E501

        :return: The cp_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._cp_type_id

    @cp_type_id.setter
    def cp_type_id(self, cp_type_id):
        """Sets the cp_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Периодичность выплаты купона\"  # noqa: E501

        :param cp_type_id: The cp_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._cp_type_id = cp_type_id

    @property
    def coupon_period_base_id(self):
        """Gets the coupon_period_base_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Идентификатор метода исчисления купонного дохода\"  # noqa: E501

        :return: The coupon_period_base_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._coupon_period_base_id

    @coupon_period_base_id.setter
    def coupon_period_base_id(self, coupon_period_base_id):
        """Sets the coupon_period_base_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Идентификатор метода исчисления купонного дохода\"  # noqa: E501

        :param coupon_period_base_id: The coupon_period_base_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._coupon_period_base_id = coupon_period_base_id

    @property
    def sec_type_id(self):
        """Gets the sec_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Идентификатор типа ценной бумаги\"  # noqa: E501

        :return: The sec_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._sec_type_id

    @sec_type_id.setter
    def sec_type_id(self, sec_type_id):
        """Sets the sec_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Идентификатор типа ценной бумаги\"  # noqa: E501

        :param sec_type_id: The sec_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._sec_type_id = sec_type_id

    @property
    def sec_form_id(self):
        """Gets the sec_form_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Идентификатор формы выпуска ценных бумаг. Соответствующие наименования см.поля secformnamerus_nrd и secformnameeng_nrd\"  # noqa: E501

        :return: The sec_form_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._sec_form_id

    @sec_form_id.setter
    def sec_form_id(self, sec_form_id):
        """Sets the sec_form_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Идентификатор формы выпуска ценных бумаг. Соответствующие наименования см.поля secformnamerus_nrd и secformnameeng_nrd\"  # noqa: E501

        :param sec_form_id: The sec_form_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._sec_form_id = sec_form_id

    @property
    def sec_state_id(self):
        """Gets the sec_state_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"STATUS\" - \"description_rus\": \"Состояние выпуска\"  # noqa: E501

        :return: The sec_state_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._sec_state_id

    @sec_state_id.setter
    def sec_state_id(self, sec_state_id):
        """Sets the sec_state_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"STATUS\" - \"description_rus\": \"Состояние выпуска\"  # noqa: E501

        :param sec_state_id: The sec_state_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._sec_state_id = sec_state_id

    @property
    def placement_type_id(self):
        """Gets the placement_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Способ размещения\"  # noqa: E501

        :return: The placement_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._placement_type_id

    @placement_type_id.setter
    def placement_type_id(self, placement_type_id):
        """Sets the placement_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Способ размещения\"  # noqa: E501

        :param placement_type_id: The placement_type_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._placement_type_id = placement_type_id

    @property
    def share_category_id(self):
        """Gets the share_category_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"SHARE\" - \"description_rus\": \"Категория акций\"  # noqa: E501

        :return: The share_category_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._share_category_id

    @share_category_id.setter
    def share_category_id(self, share_category_id):
        """Sets the share_category_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"SHARE\" - \"description_rus\": \"Категория акций\"  # noqa: E501

        :param share_category_id: The share_category_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._share_category_id = share_category_id

    @property
    def dr_category_mn(self):
        """Gets the dr_category_mn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"DR\" - \"description_rus\": \"Мнемокод категории депозитарных расписок\"  # noqa: E501

        :return: The dr_category_mn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._dr_category_mn

    @dr_category_mn.setter
    def dr_category_mn(self, dr_category_mn):
        """Sets the dr_category_mn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"DR\" - \"description_rus\": \"Мнемокод категории депозитарных расписок\"  # noqa: E501

        :param dr_category_mn: The dr_category_mn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._dr_category_mn = dr_category_mn

    @property
    def company_state_mn(self):
        """Gets the company_state_mn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"FUND\" - \"description_rus\": \"Мнемокод состояния организации\"  # noqa: E501

        :return: The company_state_mn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._company_state_mn

    @company_state_mn.setter
    def company_state_mn(self, company_state_mn):
        """Sets the company_state_mn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"FUND\" - \"description_rus\": \"Мнемокод состояния организации\"  # noqa: E501

        :param company_state_mn: The company_state_mn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._company_state_mn = company_state_mn

    @property
    def sector4212u(self):
        """Gets the sector4212u of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"SECTOR\" - \"description_rus\": \"Сектор экономики по классификатору ЦБ РФ\"  # noqa: E501

        :return: The sector4212u of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._sector4212u

    @sector4212u.setter
    def sector4212u(self, sector4212u):
        """Sets the sector4212u of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"SECTOR\" - \"description_rus\": \"Сектор экономики по классификатору ЦБ РФ\"  # noqa: E501

        :param sector4212u: The sector4212u of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._sector4212u = sector4212u

    @property
    def sna2008(self):
        """Gets the sna2008 of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"SECTOR\" - \"description_rus\": \"Система национальных счетов 2008\"  # noqa: E501

        :return: The sna2008 of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._sna2008

    @sna2008.setter
    def sna2008(self, sna2008):
        """Sets the sna2008 of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"SECTOR\" - \"description_rus\": \"Система национальных счетов 2008\"  # noqa: E501

        :param sna2008: The sna2008 of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._sna2008 = sna2008

    @property
    def fullname_en_nrd(self):
        """Gets the fullname_en_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"NAME\" - \"description_rus\": \"Полное наименование на английском языке по базе НРД\"  # noqa: E501

        :return: The fullname_en_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_en_nrd

    @fullname_en_nrd.setter
    def fullname_en_nrd(self, fullname_en_nrd):
        """Sets the fullname_en_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"NAME\" - \"description_rus\": \"Полное наименование на английском языке по базе НРД\"  # noqa: E501

        :param fullname_en_nrd: The fullname_en_nrd of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._fullname_en_nrd = fullname_en_nrd

    @property
    def seniorityname(self):
        """Gets the seniorityname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"description_rus\": \"Старшинство выплат - наименование\"  # noqa: E501

        :return: The seniorityname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._seniorityname

    @seniorityname.setter
    def seniorityname(self, seniorityname):
        """Sets the seniorityname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"description_rus\": \"Старшинство выплат - наименование\"  # noqa: E501

        :param seniorityname: The seniorityname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._seniorityname = seniorityname

    @property
    def fintoolid(self):
        """Gets the fintoolid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Идентификатор финансового инструмента в базе Интерфакс\" - \"description_eng\": \"Financial instrument's Interfax identifier\"  # noqa: E501

        :return: The fintoolid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._fintoolid

    @fintoolid.setter
    def fintoolid(self, fintoolid):
        """Sets the fintoolid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Идентификатор финансового инструмента в базе Интерфакс\" - \"description_eng\": \"Financial instrument's Interfax identifier\"  # noqa: E501

        :param fintoolid: The fintoolid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._fintoolid = fintoolid

    @property
    def moex_code(self):
        """Gets the moex_code of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Идентификатор инструмента на Московской бирже (SECID)\"  # noqa: E501

        :return: The moex_code of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._moex_code

    @moex_code.setter
    def moex_code(self, moex_code):
        """Sets the moex_code of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Идентификатор инструмента на Московской бирже (SECID)\"  # noqa: E501

        :param moex_code: The moex_code of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._moex_code = moex_code

    @property
    def moex_name(self):
        """Gets the moex_name of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"NAME\" - \"description_rus\": \"Краткое наименование инструмента на Московской бирже (SHORTNAME)\"  # noqa: E501

        :return: The moex_name of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._moex_name

    @moex_name.setter
    def moex_name(self, moex_name):
        """Sets the moex_name of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"NAME\" - \"description_rus\": \"Краткое наименование инструмента на Московской бирже (SHORTNAME)\"  # noqa: E501

        :param moex_name: The moex_name of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._moex_name = moex_name

    @property
    def fullname(self):
        """Gets the fullname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"NAME\" - \"description_rus\": \"Полное название финансового инструмента\"  # noqa: E501

        :return: The fullname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname

    @fullname.setter
    def fullname(self, fullname):
        """Sets the fullname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"NAME\" - \"description_rus\": \"Полное название финансового инструмента\"  # noqa: E501

        :param fullname: The fullname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._fullname = fullname

    @property
    def isin144a(self):
        """Gets the isin144a of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Дополнительный ISIN-код выпуска облигаций\"  # noqa: E501

        :return: The isin144a of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._isin144a

    @isin144a.setter
    def isin144a(self, isin144a):
        """Sets the isin144a of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Дополнительный ISIN-код выпуска облигаций\"  # noqa: E501

        :param isin144a: The isin144a of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._isin144a = isin144a

    @property
    def isincode(self):
        """Gets the isincode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"ISIN-код финансового инструмента\"  # noqa: E501

        :return: The isincode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._isincode

    @isincode.setter
    def isincode(self, isincode):
        """Sets the isincode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"ISIN-код финансового инструмента\"  # noqa: E501

        :param isincode: The isincode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._isincode = isincode

    @property
    def nickname(self):
        """Gets the nickname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"NAME\" - \"description_rus\": \"Краткое наименование финансового инструмента\"  # noqa: E501

        :return: The nickname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._nickname

    @nickname.setter
    def nickname(self, nickname):
        """Sets the nickname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"NAME\" - \"description_rus\": \"Краткое наименование финансового инструмента\"  # noqa: E501

        :param nickname: The nickname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._nickname = nickname

    @property
    def progfintoolid(self):
        """Gets the progfintoolid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Связь между УИН выпуска облигаций и УИН программы облигаций\"  # noqa: E501

        :return: The progfintoolid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._progfintoolid

    @progfintoolid.setter
    def progfintoolid(self, progfintoolid):
        """Sets the progfintoolid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Связь между УИН выпуска облигаций и УИН программы облигаций\"  # noqa: E501

        :param progfintoolid: The progfintoolid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._progfintoolid = progfintoolid

    @property
    def regcode(self):
        """Gets the regcode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Регистрационный номер финансового инструмента\"  # noqa: E501

        :return: The regcode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._regcode

    @regcode.setter
    def regcode(self, regcode):
        """Sets the regcode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"CODE\" - \"description_rus\": \"Регистрационный номер финансового инструмента\"  # noqa: E501

        :param regcode: The regcode of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._regcode = regcode

    @property
    def regdate(self):
        """Gets the regdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REGISTR\" - \"description_rus\": \"Дата государственной регистрации выпуска\"  # noqa: E501

        :return: The regdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._regdate

    @regdate.setter
    def regdate(self, regdate):
        """Sets the regdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REGISTR\" - \"description_rus\": \"Дата государственной регистрации выпуска\"  # noqa: E501

        :param regdate: The regdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._regdate = regdate

    @property
    def regorg(self):
        """Gets the regorg of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REGISTR\" - \"description_rus\": \"Регистрирующий орган\"  # noqa: E501

        :return: The regorg of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._regorg

    @regorg.setter
    def regorg(self, regorg):
        """Sets the regorg of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"REGISTR\" - \"description_rus\": \"Регистрирующий орган\"  # noqa: E501

        :param regorg: The regorg of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._regorg = regorg

    @property
    def amortisedmty(self):
        """Gets the amortisedmty of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Признак наличия амортизационного погашения по выпуску (1 - да)\"  # noqa: E501

        :return: The amortisedmty of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._amortisedmty

    @amortisedmty.setter
    def amortisedmty(self, amortisedmty):
        """Sets the amortisedmty of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Признак наличия амортизационного погашения по выпуску (1 - да)\"  # noqa: E501

        :param amortisedmty: The amortisedmty of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._amortisedmty = amortisedmty

    @property
    def basis(self):
        """Gets the basis of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Базис НКД по базе Интерфакс. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘Basis’).\"  # noqa: E501

        :return: The basis of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._basis

    @basis.setter
    def basis(self, basis):
        """Sets the basis of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Базис НКД по базе Интерфакс. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘Basis’).\"  # noqa: E501

        :param basis: The basis of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._basis = basis

    @property
    def bondstructuralpar(self):
        """Gets the bondstructuralpar of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Структурный параметр облигации\"  # noqa: E501

        :return: The bondstructuralpar of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._bondstructuralpar

    @bondstructuralpar.setter
    def bondstructuralpar(self, bondstructuralpar):
        """Sets the bondstructuralpar of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Структурный параметр облигации\"  # noqa: E501

        :param bondstructuralpar: The bondstructuralpar of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._bondstructuralpar = bondstructuralpar

    @property
    def cfi(self):
        """Gets the cfi of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        Код типа инструмента  # noqa: E501

        :return: The cfi of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._cfi

    @cfi.setter
    def cfi(self, cfi):
        """Sets the cfi of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        Код типа инструмента  # noqa: E501

        :param cfi: The cfi of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._cfi = cfi

    @property
    def coupontype(self):
        """Gets the coupontype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Вид купона. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘CouponType’).\"  # noqa: E501

        :return: The coupontype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._coupontype

    @coupontype.setter
    def coupontype(self, coupontype):
        """Sets the coupontype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Вид купона. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘CouponType’).\"  # noqa: E501

        :param coupontype: The coupontype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._coupontype = coupontype

    @property
    def fintooltype(self):
        """Gets the fintooltype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Тип финансового инструмента (наименование). Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘fintooltype’).\"  # noqa: E501

        :return: The fintooltype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._fintooltype

    @fintooltype.setter
    def fintooltype(self, fintooltype):
        """Sets the fintooltype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Тип финансового инструмента (наименование). Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘fintooltype’).\"  # noqa: E501

        :param fintooltype: The fintooltype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._fintooltype = fintooltype

    @property
    def guaranteeamount(self):
        """Gets the guaranteeamount of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"COVER\" - \"description_rus\": \"Полнота гарантии\"  # noqa: E501

        :return: The guaranteeamount of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._guaranteeamount

    @guaranteeamount.setter
    def guaranteeamount(self, guaranteeamount):
        """Sets the guaranteeamount of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"COVER\" - \"description_rus\": \"Полнота гарантии\"  # noqa: E501

        :param guaranteeamount: The guaranteeamount of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._guaranteeamount = guaranteeamount

    @property
    def guaranteetype(self):
        """Gets the guaranteetype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"COVER\" - \"description_rus\": \"Вид гарантии. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘GuaranteeType’).\"  # noqa: E501

        :return: The guaranteetype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._guaranteetype

    @guaranteetype.setter
    def guaranteetype(self, guaranteetype):
        """Sets the guaranteetype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"COVER\" - \"description_rus\": \"Вид гарантии. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘GuaranteeType’).\"  # noqa: E501

        :param guaranteetype: The guaranteetype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._guaranteetype = guaranteetype

    @property
    def haveoffer(self):
        """Gets the haveoffer of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Признак наличия по выпуску возможности досрочного выкупа или погашения (1 - да)\"  # noqa: E501

        :return: The haveoffer of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._haveoffer

    @haveoffer.setter
    def haveoffer(self, haveoffer):
        """Sets the haveoffer of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Признак наличия по выпуску возможности досрочного выкупа или погашения (1 - да)\"  # noqa: E501

        :param haveoffer: The haveoffer of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._haveoffer = haveoffer

    @property
    def isconvertible(self):
        """Gets the isconvertible of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Наличие возможности конвертации / осуществленная конвертация в другой инструмент (1 - да)\"  # noqa: E501

        :return: The isconvertible of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._isconvertible

    @isconvertible.setter
    def isconvertible(self, isconvertible):
        """Sets the isconvertible of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Наличие возможности конвертации / осуществленная конвертация в другой инструмент (1 - да)\"  # noqa: E501

        :param isconvertible: The isconvertible of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._isconvertible = isconvertible

    @property
    def isguaranteed(self):
        """Gets the isguaranteed of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"COVER\" - \"description_rus\": \"Признак наличия по выпуску гарантии (1-да)\"  # noqa: E501

        :return: The isguaranteed of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._isguaranteed

    @isguaranteed.setter
    def isguaranteed(self, isguaranteed):
        """Sets the isguaranteed of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"COVER\" - \"description_rus\": \"Признак наличия по выпуску гарантии (1-да)\"  # noqa: E501

        :param isguaranteed: The isguaranteed of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._isguaranteed = isguaranteed

    @property
    def maturitygroup(self):
        """Gets the maturitygroup of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Группа по периоду обращения. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘MaturityGroup’).\"  # noqa: E501

        :return: The maturitygroup of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._maturitygroup

    @maturitygroup.setter
    def maturitygroup(self, maturitygroup):
        """Sets the maturitygroup of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Группа по периоду обращения. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘MaturityGroup’).\"  # noqa: E501

        :param maturitygroup: The maturitygroup of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._maturitygroup = maturitygroup

    @property
    def securitization(self):
        """Gets the securitization of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Секьюритизация\"  # noqa: E501

        :return: The securitization of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._securitization

    @securitization.setter
    def securitization(self, securitization):
        """Sets the securitization of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Секьюритизация\"  # noqa: E501

        :param securitization: The securitization of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._securitization = securitization

    @property
    def accruedintcalctype(self):
        """Gets the accruedintcalctype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Признак, определяющий правила расчета НКД. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘AccruedintCalcType’).\"  # noqa: E501

        :return: The accruedintcalctype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._accruedintcalctype

    @accruedintcalctype.setter
    def accruedintcalctype(self, accruedintcalctype):
        """Sets the accruedintcalctype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Признак, определяющий правила расчета НКД. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘AccruedintCalcType’).\"  # noqa: E501

        :param accruedintcalctype: The accruedintcalctype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._accruedintcalctype = accruedintcalctype

    @property
    def country(self):
        """Gets the country of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"REGION\" - \"description_rus\": \"Двухбуквенный код страны в соответствии с ОКСМ. Список возможных значений возвращает метод /Info/EnumValues(‘referenceData’, ‘Country’).\"  # noqa: E501

        :return: The country of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"REGION\" - \"description_rus\": \"Двухбуквенный код страны в соответствии с ОКСМ. Список возможных значений возвращает метод /Info/EnumValues(‘referenceData’, ‘Country’).\"  # noqa: E501

        :param country: The country of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._country = country

    @property
    def couponperyear(self):
        """Gets the couponperyear of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Количество купонов в год\"  # noqa: E501

        :return: The couponperyear of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._couponperyear

    @couponperyear.setter
    def couponperyear(self, couponperyear):
        """Sets the couponperyear of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Количество купонов в год\"  # noqa: E501

        :param couponperyear: The couponperyear of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._couponperyear = couponperyear

    @property
    def faceftname(self):
        """Gets the faceftname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Валюта номинала финансового инструмента. Список возможных значений возвращает метод /Info/EnumValues (‘referenceData’, ‘FaceFTName’).\"  # noqa: E501

        :return: The faceftname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._faceftname

    @faceftname.setter
    def faceftname(self, faceftname):
        """Sets the faceftname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Валюта номинала финансового инструмента. Список возможных значений возвращает метод /Info/EnumValues (‘referenceData’, ‘FaceFTName’).\"  # noqa: E501

        :param faceftname: The faceftname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._faceftname = faceftname

    @property
    def facevalue(self):
        """Gets the facevalue of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Начальный номинал финансового инструмента\"  # noqa: E501

        :return: The facevalue of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: float
        """
        return self._facevalue

    @facevalue.setter
    def facevalue(self, facevalue):
        """Sets the facevalue of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"FACEVAL\" - \"description_rus\": \"Начальный номинал финансового инструмента\"  # noqa: E501

        :param facevalue: The facevalue of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: float
        """

        self._facevalue = facevalue

    @property
    def guarantval(self):
        """Gets the guarantval of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"COVER\" - \"description_rus\": \"Гарантированная сумма\"  # noqa: E501

        :return: The guarantval of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: float
        """
        return self._guarantval

    @guarantval.setter
    def guarantval(self, guarantval):
        """Sets the guarantval of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"COVER\" - \"description_rus\": \"Гарантированная сумма\"  # noqa: E501

        :param guarantval: The guarantval of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: float
        """

        self._guarantval = guarantval

    @property
    def havedefault(self):
        """Gets the havedefault of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"STATUS\" - \"description_rus\": \"Признак наличия дефолта по выпуску (1 - да)\"  # noqa: E501

        :return: The havedefault of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._havedefault

    @havedefault.setter
    def havedefault(self, havedefault):
        """Sets the havedefault of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"STATUS\" - \"description_rus\": \"Признак наличия дефолта по выпуску (1 - да)\"  # noqa: E501

        :param havedefault: The havedefault of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._havedefault = havedefault

    @property
    def numcoupons(self):
        """Gets the numcoupons of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Количество купонов всего\"  # noqa: E501

        :return: The numcoupons of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._numcoupons

    @numcoupons.setter
    def numcoupons(self, numcoupons):
        """Sets the numcoupons of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Количество купонов всего\"  # noqa: E501

        :param numcoupons: The numcoupons of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._numcoupons = numcoupons

    @property
    def status(self):
        """Gets the status of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"STATUS\" - \"description_rus\": \"Состояние выпуска финансового инструмента. Список возможных значений возвращает метод /Info/EnumValues(‘referenceData’, ‘Status’).\"  # noqa: E501

        :return: The status of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"STATUS\" - \"description_rus\": \"Состояние выпуска финансового инструмента. Список возможных значений возвращает метод /Info/EnumValues(‘referenceData’, ‘Status’).\"  # noqa: E501

        :param status: The status of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def sumissueval(self):
        """Gets the sumissueval of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Заявленный объем эмиссии в валюте номинала\"  # noqa: E501

        :return: The sumissueval of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: float
        """
        return self._sumissueval

    @sumissueval.setter
    def sumissueval(self, sumissueval):
        """Sets the sumissueval of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Заявленный объем эмиссии в валюте номинала\"  # noqa: E501

        :param sumissueval: The sumissueval of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: float
        """

        self._sumissueval = sumissueval

    @property
    def sumissuevol(self):
        """Gets the sumissuevol of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Заявленный объем эмиссии в штуках\"  # noqa: E501

        :return: The sumissuevol of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: float
        """
        return self._sumissuevol

    @sumissuevol.setter
    def sumissuevol(self, sumissuevol):
        """Sets the sumissuevol of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Заявленный объем эмиссии в штуках\"  # noqa: E501

        :param sumissuevol: The sumissuevol of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: float
        """

        self._sumissuevol = sumissuevol

    @property
    def summarketval(self):
        """Gets the summarketval of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Объем в обращении в валюте номинала\"  # noqa: E501

        :return: The summarketval of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: float
        """
        return self._summarketval

    @summarketval.setter
    def summarketval(self, summarketval):
        """Sets the summarketval of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Объем в обращении в валюте номинала\"  # noqa: E501

        :param summarketval: The summarketval of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: float
        """

        self._summarketval = summarketval

    @property
    def summarketvol(self):
        """Gets the summarketvol of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Объем в обращении в штуках\"  # noqa: E501

        :return: The summarketvol of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: float
        """
        return self._summarketvol

    @summarketvol.setter
    def summarketvol(self, summarketvol):
        """Sets the summarketvol of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"VOLUME\" - \"description_rus\": \"Объем в обращении в штуках\"  # noqa: E501

        :param summarketvol: The summarketvol of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: float
        """

        self._summarketvol = summarketvol

    @property
    def borrowername(self):
        """Gets the borrowername of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"Название реального заемщика (эмитента) облигаций\"  # noqa: E501

        :return: The borrowername of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._borrowername

    @borrowername.setter
    def borrowername(self, borrowername):
        """Sets the borrowername of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"Название реального заемщика (эмитента) облигаций\"  # noqa: E501

        :param borrowername: The borrowername of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._borrowername = borrowername

    @property
    def borrowerokpo(self):
        """Gets the borrowerokpo of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"ОКПО реального заемщика (эмитента) облигаций\"  # noqa: E501

        :return: The borrowerokpo of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._borrowerokpo

    @borrowerokpo.setter
    def borrowerokpo(self, borrowerokpo):
        """Sets the borrowerokpo of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"ОКПО реального заемщика (эмитента) облигаций\"  # noqa: E501

        :param borrowerokpo: The borrowerokpo of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._borrowerokpo = borrowerokpo

    @property
    def borrowersector(self):
        """Gets the borrowersector of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"Сектор реального заемщика. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘BorrowerSector’).\"  # noqa: E501

        :return: The borrowersector of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._borrowersector

    @borrowersector.setter
    def borrowersector(self, borrowersector):
        """Sets the borrowersector of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"Сектор реального заемщика. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘BorrowerSector’).\"  # noqa: E501

        :param borrowersector: The borrowersector of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._borrowersector = borrowersector

    @property
    def borroweruid(self):
        """Gets the borroweruid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"УИН реального заемщика (эмитента) в БД Интерфакс (fininstid)\"  # noqa: E501

        :return: The borroweruid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._borroweruid

    @borroweruid.setter
    def borroweruid(self, borroweruid):
        """Sets the borroweruid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"УИН реального заемщика (эмитента) в БД Интерфакс (fininstid)\"  # noqa: E501

        :param borroweruid: The borroweruid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._borroweruid = borroweruid

    @property
    def borrowerinn(self):
        """Gets the borrowerinn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"ИНН / TIN реального заемщика(эмитента) облигаций; для депо-расписок ИНН / TIN эмитента представляемой(базовой) ценной бумаги\"  # noqa: E501

        :return: The borrowerinn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._borrowerinn

    @borrowerinn.setter
    def borrowerinn(self, borrowerinn):
        """Sets the borrowerinn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"ИНН / TIN реального заемщика(эмитента) облигаций; для депо-расписок ИНН / TIN эмитента представляемой(базовой) ценной бумаги\"  # noqa: E501

        :param borrowerinn: The borrowerinn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._borrowerinn = borrowerinn

    @property
    def borrowercountry(self):
        """Gets the borrowercountry of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"Страна реального заёмщика. Двухбуквенный код страны в соответствии с ОКСМ. Список возможных значений возвращает метод /Info/EnumValues(‘referenceData’, ‘Country’).\"  # noqa: E501

        :return: The borrowercountry of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._borrowercountry

    @borrowercountry.setter
    def borrowercountry(self, borrowercountry):
        """Sets the borrowercountry of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"Страна реального заёмщика. Двухбуквенный код страны в соответствии с ОКСМ. Список возможных значений возвращает метод /Info/EnumValues(‘referenceData’, ‘Country’).\"  # noqa: E501

        :param borrowercountry: The borrowercountry of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._borrowercountry = borrowercountry

    @property
    def borrowerregionname(self):
        """Gets the borrowerregionname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"Регион в стране реального заемщика\"  # noqa: E501

        :return: The borrowerregionname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._borrowerregionname

    @borrowerregionname.setter
    def borrowerregionname(self, borrowerregionname):
        """Sets the borrowerregionname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"BORROW\" - \"description_rus\": \"Регион в стране реального заемщика\"  # noqa: E501

        :param borrowerregionname: The borrowerregionname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._borrowerregionname = borrowerregionname

    @property
    def issuername(self):
        """Gets the issuername of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"Название оператора выпуска финансового инструмента\"  # noqa: E501

        :return: The issuername of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._issuername

    @issuername.setter
    def issuername(self, issuername):
        """Sets the issuername of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"Название оператора выпуска финансового инструмента\"  # noqa: E501

        :param issuername: The issuername of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._issuername = issuername

    @property
    def issuerokpo(self):
        """Gets the issuerokpo of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"ОКПО оператора выпуска финансового инструмента\"  # noqa: E501

        :return: The issuerokpo of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._issuerokpo

    @issuerokpo.setter
    def issuerokpo(self, issuerokpo):
        """Sets the issuerokpo of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"ОКПО оператора выпуска финансового инструмента\"  # noqa: E501

        :param issuerokpo: The issuerokpo of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._issuerokpo = issuerokpo

    @property
    def issuersector(self):
        """Gets the issuersector of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"Сектор эмитента. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘IssuerSector’).\"  # noqa: E501

        :return: The issuersector of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._issuersector

    @issuersector.setter
    def issuersector(self, issuersector):
        """Sets the issuersector of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"Сектор эмитента. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘IssuerSector’).\"  # noqa: E501

        :param issuersector: The issuersector of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._issuersector = issuersector

    @property
    def issueruid(self):
        """Gets the issueruid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"УИН оператора в БД Интерфакс (fininstid)\"  # noqa: E501

        :return: The issueruid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._issueruid

    @issueruid.setter
    def issueruid(self, issueruid):
        """Sets the issueruid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"УИН оператора в БД Интерфакс (fininstid)\"  # noqa: E501

        :param issueruid: The issueruid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._issueruid = issueruid

    @property
    def issuerinn(self):
        """Gets the issuerinn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"ИНН / TIN оператора выпуска финансового инструмента\"  # noqa: E501

        :return: The issuerinn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._issuerinn

    @issuerinn.setter
    def issuerinn(self, issuerinn):
        """Sets the issuerinn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"ИНН / TIN оператора выпуска финансового инструмента\"  # noqa: E501

        :param issuerinn: The issuerinn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._issuerinn = issuerinn

    @property
    def issuercountry(self):
        """Gets the issuercountry of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"Страна эмитента. Двухбуквенный код страны в соответствии с ОКСМ. Список возможных значений возвращает метод /Info/EnumValues(‘referenceData’, ‘Country’).\"  # noqa: E501

        :return: The issuercountry of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._issuercountry

    @issuercountry.setter
    def issuercountry(self, issuercountry):
        """Sets the issuercountry of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"Страна эмитента. Двухбуквенный код страны в соответствии с ОКСМ. Список возможных значений возвращает метод /Info/EnumValues(‘referenceData’, ‘Country’).\"  # noqa: E501

        :param issuercountry: The issuercountry of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._issuercountry = issuercountry

    @property
    def issuerregionname(self):
        """Gets the issuerregionname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"Регион в стране эмитента\"  # noqa: E501

        :return: The issuerregionname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._issuerregionname

    @issuerregionname.setter
    def issuerregionname(self, issuerregionname):
        """Sets the issuerregionname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"ISSUER\" - \"description_rus\": \"Регион в стране эмитента\"  # noqa: E501

        :param issuerregionname: The issuerregionname of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._issuerregionname = issuerregionname

    @property
    def assetssector(self):
        """Gets the assetssector of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"SECTOR\" - \"description_rus\": \"Отрасль актива. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘AssetsSector’).\"  # noqa: E501

        :return: The assetssector of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._assetssector

    @assetssector.setter
    def assetssector(self, assetssector):
        """Sets the assetssector of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"SECTOR\" - \"description_rus\": \"Отрасль актива. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘AssetsSector’).\"  # noqa: E501

        :param assetssector: The assetssector of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._assetssector = assetssector

    @property
    def numguarantors(self):
        """Gets the numguarantors of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"GUARANT\" - \"description_rus\": \"Количество гарантов/поручителей\"  # noqa: E501

        :return: The numguarantors of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._numguarantors

    @numguarantors.setter
    def numguarantors(self, numguarantors):
        """Sets the numguarantors of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"MAINROLE\" - \"field_subgroup\": \"GUARANT\" - \"description_rus\": \"Количество гарантов/поручителей\"  # noqa: E501

        :param numguarantors: The numguarantors of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._numguarantors = numguarantors

    @property
    def begdistdate(self):
        """Gets the begdistdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Дата начала размещения\"  # noqa: E501

        :return: The begdistdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._begdistdate

    @begdistdate.setter
    def begdistdate(self, begdistdate):
        """Sets the begdistdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Дата начала размещения\"  # noqa: E501

        :param begdistdate: The begdistdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._begdistdate = begdistdate

    @property
    def begmtydate(self):
        """Gets the begmtydate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Дата начала погашения\"  # noqa: E501

        :return: The begmtydate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._begmtydate

    @begmtydate.setter
    def begmtydate(self, begmtydate):
        """Sets the begmtydate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Дата начала погашения\"  # noqa: E501

        :param begmtydate: The begmtydate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._begmtydate = begmtydate

    @property
    def daysall(self):
        """Gets the daysall of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Количество дней с даты начала размещения до даты окончания погашения облигации\"  # noqa: E501

        :return: The daysall of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._daysall

    @daysall.setter
    def daysall(self, daysall):
        """Sets the daysall of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Количество дней с даты начала размещения до даты окончания погашения облигации\"  # noqa: E501

        :param daysall: The daysall of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._daysall = daysall

    @property
    def enddistdate(self):
        """Gets the enddistdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Дата окончания размещения\"  # noqa: E501

        :return: The enddistdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._enddistdate

    @enddistdate.setter
    def enddistdate(self, enddistdate):
        """Sets the enddistdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Дата окончания размещения\"  # noqa: E501

        :param enddistdate: The enddistdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._enddistdate = enddistdate

    @property
    def endmtydate(self):
        """Gets the endmtydate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Дата погашения финансового инструмента\"  # noqa: E501

        :return: The endmtydate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._endmtydate

    @endmtydate.setter
    def endmtydate(self, endmtydate):
        """Sets the endmtydate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"MTY\" - \"description_rus\": \"Дата погашения финансового инструмента\"  # noqa: E501

        :param endmtydate: The endmtydate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._endmtydate = endmtydate

    @property
    def privatedist(self):
        """Gets the privatedist of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Признак размещения по открытой/закрытой подписке\"  # noqa: E501

        :return: The privatedist of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._privatedist

    @privatedist.setter
    def privatedist(self, privatedist):
        """Sets the privatedist of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Признак размещения по открытой/закрытой подписке\"  # noqa: E501

        :param privatedist: The privatedist of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._privatedist = privatedist

    @property
    def regdistdate(self):
        """Gets the regdistdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        Дата регистрации отчета о выпуске финансового инструмента / дата отсылки уведомления  # noqa: E501

        :return: The regdistdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._regdistdate

    @regdistdate.setter
    def regdistdate(self, regdistdate):
        """Sets the regdistdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        Дата регистрации отчета о выпуске финансового инструмента / дата отсылки уведомления  # noqa: E501

        :param regdistdate: The regdistdate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._regdistdate = regdistdate

    @property
    def securitytype(self):
        """Gets the securitytype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Тип выпуска/расписки/фонда. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecurityType’).\"  # noqa: E501

        :return: The securitytype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._securitytype

    @securitytype.setter
    def securitytype(self, securitytype):
        """Sets the securitytype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Тип выпуска/расписки/фонда. Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘SecurityType’).\"  # noqa: E501

        :param securitytype: The securitytype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._securitytype = securitytype

    @property
    def securitykind(self):
        """Gets the securitykind of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Вид выпуска/спонсируемость/тип инвестиций. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘SecurityKind’).\"  # noqa: E501

        :return: The securitykind of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._securitykind

    @securitykind.setter
    def securitykind(self, securitykind):
        """Sets the securitykind of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Вид выпуска/спонсируемость/тип инвестиций. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘SecurityKind’).\"  # noqa: E501

        :param securitykind: The securitykind of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._securitykind = securitykind

    @property
    def nominaltype(self):
        """Gets the nominaltype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Тип номинала ценной бумаги. Список возможных значений возвращает метод /Info/EnumValues (‘referenceData’, ‘nominaltype’).\"  # noqa: E501

        :return: The nominaltype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._nominaltype

    @nominaltype.setter
    def nominaltype(self, nominaltype):
        """Sets the nominaltype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Тип номинала ценной бумаги. Список возможных значений возвращает метод /Info/EnumValues (‘referenceData’, ‘nominaltype’).\"  # noqa: E501

        :param nominaltype: The nominaltype of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._nominaltype = nominaltype

    @property
    def update_time(self):
        """Gets the update_time of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"SUPPORT\" - \"field_subgroup\": \"UPDATE\" - \"description_rus\": \"Дата последнего обновления данных по бумаге\"  # noqa: E501

        :return: The update_time of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"SUPPORT\" - \"field_subgroup\": \"UPDATE\" - \"description_rus\": \"Дата последнего обновления данных по бумаге\"  # noqa: E501

        :param update_time: The update_time of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._update_time = update_time

    @property
    def isregion(self):
        """Gets the isregion of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"REGION\" - \"description_rus\": \"Выпуск субъекта федерации: 0 - муниципальный выпуск, 1 - выпуск субъекта федерации, пусто - другое.\"  # noqa: E501

        :return: The isregion of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._isregion

    @isregion.setter
    def isregion(self, isregion):
        """Sets the isregion of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"REGION\" - \"description_rus\": \"Выпуск субъекта федерации: 0 - муниципальный выпуск, 1 - выпуск субъекта федерации, пусто - другое.\"  # noqa: E501

        :param isregion: The isregion of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._isregion = isregion

    @property
    def nsd_service(self):
        """Gets the nsd_service of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"SUPPORT\" - \"field_subgroup\": \"ATTRIB\" - \"description_rus\": \"Обслуживание в НРД. («На обслуживании» и т.п.). Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘nsd_service’).\"  # noqa: E501

        :return: The nsd_service of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._nsd_service

    @nsd_service.setter
    def nsd_service(self, nsd_service):
        """Sets the nsd_service of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"SUPPORT\" - \"field_subgroup\": \"ATTRIB\" - \"description_rus\": \"Обслуживание в НРД. («На обслуживании» и т.п.). Список возможных значений возвращает метод EnumValues(‘referenceData’, ‘nsd_service’).\"  # noqa: E501

        :param nsd_service: The nsd_service of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._nsd_service = nsd_service

    @property
    def raterevisionsperyear(self):
        """Gets the raterevisionsperyear of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Частота пересмотра плавающей ставки купона (кол-во раз в год)\"  # noqa: E501

        :return: The raterevisionsperyear of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._raterevisionsperyear

    @raterevisionsperyear.setter
    def raterevisionsperyear(self, raterevisionsperyear):
        """Sets the raterevisionsperyear of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Частота пересмотра плавающей ставки купона (кол-во раз в год)\"  # noqa: E501

        :param raterevisionsperyear: The raterevisionsperyear of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._raterevisionsperyear = raterevisionsperyear

    @property
    def floatratename(self):
        """Gets the floatratename of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"BASE\" - \"description_rus\": \"Определение плавающей процентной ставки по купону\"  # noqa: E501

        :return: The floatratename of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._floatratename

    @floatratename.setter
    def floatratename(self, floatratename):
        """Sets the floatratename of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"BASE\" - \"description_rus\": \"Определение плавающей процентной ставки по купону\"  # noqa: E501

        :param floatratename: The floatratename of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._floatratename = floatratename

    @property
    def issubordinated(self):
        """Gets the issubordinated of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Признак субординированных облигаций (1 - да)\"  # noqa: E501

        :return: The issubordinated of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._issubordinated

    @issubordinated.setter
    def issubordinated(self, issubordinated):
        """Sets the issubordinated of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Признак субординированных облигаций (1 - да)\"  # noqa: E501

        :param issubordinated: The issubordinated of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._issubordinated = issubordinated

    @property
    def note(self):
        """Gets the note of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"SUPPORT\" - \"field_subgroup\": \"NOTE\" - \"description_rus\": \"Примечание - выдержки из эмиссионных документов\"  # noqa: E501

        :return: The note of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"SUPPORT\" - \"field_subgroup\": \"NOTE\" - \"description_rus\": \"Примечание - выдержки из эмиссионных документов\"  # noqa: E501

        :param note: The note of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._note = note

    @property
    def listing_level(self):
        """Gets the listing_level of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"LIST\" - \"description_rus\": \"Уровень листинга на Московской бирже\"  # noqa: E501

        :return: The listing_level of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._listing_level

    @listing_level.setter
    def listing_level(self, listing_level):
        """Sets the listing_level of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"LIST\" - \"description_rus\": \"Уровень листинга на Московской бирже\"  # noqa: E501

        :param listing_level: The listing_level of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._listing_level = listing_level

    @property
    def havecovenant(self):
        """Gets the havecovenant of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Наличие ковенантов согласно проспекту эмиссии\"  # noqa: E501

        :return: The havecovenant of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: bool
        """
        return self._havecovenant

    @havecovenant.setter
    def havecovenant(self, havecovenant):
        """Sets the havecovenant of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Наличие ковенантов согласно проспекту эмиссии\"  # noqa: E501

        :param havecovenant: The havecovenant of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: bool
        """

        self._havecovenant = havecovenant

    @property
    def haverepayment(self):
        """Gets the haverepayment of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Наличие возможности досрочного погашения по инициативе эмитента\"  # noqa: E501

        :return: The haverepayment of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: bool
        """
        return self._haverepayment

    @haverepayment.setter
    def haverepayment(self, haverepayment):
        """Sets the haverepayment of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Наличие возможности досрочного погашения по инициативе эмитента\"  # noqa: E501

        :param haverepayment: The haverepayment of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: bool
        """

        self._haverepayment = haverepayment

    @property
    def haveindexedfv(self):
        """Gets the haveindexedfv of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Облигация с индексируемым номиналом\"  # noqa: E501

        :return: The haveindexedfv of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: bool
        """
        return self._haveindexedfv

    @haveindexedfv.setter
    def haveindexedfv(self, haveindexedfv):
        """Sets the haveindexedfv of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Облигация с индексируемым номиналом\"  # noqa: E501

        :param haveindexedfv: The haveindexedfv of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: bool
        """

        self._haveindexedfv = haveindexedfv

    @property
    def numdecimals(self):
        """Gets the numdecimals of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Количество знаков после запятой, до которого выполняют округление НКД и купонных выплат\"  # noqa: E501

        :return: The numdecimals of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._numdecimals

    @numdecimals.setter
    def numdecimals(self, numdecimals):
        """Sets the numdecimals of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"ACCINT\" - \"description_rus\": \"Количество знаков после запятой, до которого выполняют округление НКД и купонных выплат\"  # noqa: E501

        :param numdecimals: The numdecimals of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._numdecimals = numdecimals

    @property
    def couponperiod(self):
        """Gets the couponperiod of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Продолжительность текущего на дату запроса купонного периода в днях\"  # noqa: E501

        :return: The couponperiod of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._couponperiod

    @couponperiod.setter
    def couponperiod(self, couponperiod):
        """Sets the couponperiod of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Продолжительность текущего на дату запроса купонного периода в днях\"  # noqa: E501

        :param couponperiod: The couponperiod of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._couponperiod = couponperiod

    @property
    def ismatched(self):
        """Gets the ismatched of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"SUPPORT\" - \"field_subgroup\": \"ATTRIB\" - \"description_rus\": \"Сверен ли инструмент (с НРД или иным первоисточником данных)\"  # noqa: E501

        :return: The ismatched of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: bool
        """
        return self._ismatched

    @ismatched.setter
    def ismatched(self, ismatched):
        """Sets the ismatched of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"SUPPORT\" - \"field_subgroup\": \"ATTRIB\" - \"description_rus\": \"Сверен ли инструмент (с НРД или иным первоисточником данных)\"  # noqa: E501

        :param ismatched: The ismatched of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: bool
        """

        self._ismatched = ismatched

    @property
    def firstcoupondate(self):
        """Gets the firstcoupondate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Дата начала первого купонного периода\"  # noqa: E501

        :return: The firstcoupondate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._firstcoupondate

    @firstcoupondate.setter
    def firstcoupondate(self, firstcoupondate):
        """Sets the firstcoupondate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Дата начала первого купонного периода\"  # noqa: E501

        :param firstcoupondate: The firstcoupondate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._firstcoupondate = firstcoupondate

    @property
    def couponrate(self):
        """Gets the couponrate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Ставка текущего купона\"  # noqa: E501

        :return: The couponrate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: float
        """
        return self._couponrate

    @couponrate.setter
    def couponrate(self, couponrate):
        """Sets the couponrate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"CPN\" - \"description_rus\": \"Ставка текущего купона\"  # noqa: E501

        :param couponrate: The couponrate of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: float
        """

        self._couponrate = couponrate

    @property
    def iscomplicated(self):
        """Gets the iscomplicated of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"TEST\" - \"description_rus\": \"Выпуск является сложным\"  # noqa: E501

        :return: The iscomplicated of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: bool
        """
        return self._iscomplicated

    @iscomplicated.setter
    def iscomplicated(self, iscomplicated):
        """Sets the iscomplicated of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"TEST\" - \"description_rus\": \"Выпуск является сложным\"  # noqa: E501

        :param iscomplicated: The iscomplicated of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: bool
        """

        self._iscomplicated = iscomplicated

    @property
    def available_for_unqualified(self):
        """Gets the available_for_unqualified of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"TEST\" - \"description_rus\": \"Выпуск доступен для неквалифицированных инвесторов\"  # noqa: E501

        :return: The available_for_unqualified of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: bool
        """
        return self._available_for_unqualified

    @available_for_unqualified.setter
    def available_for_unqualified(self, available_for_unqualified):
        """Sets the available_for_unqualified of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"TEST\" - \"description_rus\": \"Выпуск доступен для неквалифицированных инвесторов\"  # noqa: E501

        :param available_for_unqualified: The available_for_unqualified of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: bool
        """

        self._available_for_unqualified = available_for_unqualified

    @property
    def sec_type_br_code(self):
        """Gets the sec_type_br_code of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Тип ц.б. по классификации Банка России. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘Sec_Type_BR_Code’).\"  # noqa: E501

        :return: The sec_type_br_code of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._sec_type_br_code

    @sec_type_br_code.setter
    def sec_type_br_code(self, sec_type_br_code):
        """Sets the sec_type_br_code of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"CLASS\" - \"description_rus\": \"Тип ц.б. по классификации Банка России. Список возможных значений возвращает метод EnumValues (‘referenceData’, ‘Sec_Type_BR_Code’).\"  # noqa: E501

        :param sec_type_br_code: The sec_type_br_code of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._sec_type_br_code = sec_type_br_code

    @property
    def original_country(self):
        """Gets the original_country of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"REGION\" - \"description_rus\": \"Идентификатор страны риска в базе Интерфакс. Двухбуквенный код страны в соответствии с ОКСМ.\"  # noqa: E501

        :return: The original_country of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: str
        """
        return self._original_country

    @original_country.setter
    def original_country(self, original_country):
        """Sets the original_country of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"REGION\" - \"description_rus\": \"Идентификатор страны риска в базе Интерфакс. Двухбуквенный код страны в соответствии с ОКСМ.\"  # noqa: E501

        :param original_country: The original_country of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: str
        """

        self._original_country = original_country

    @property
    def qualified_test_id(self):
        """Gets the qualified_test_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"TEST\" - \"description_rus\": \"Идентификатор теста, в соответствии с которым по данным ‘на сегодня’ бумага не может быть предложена неквалифицированным инвесторам\"  # noqa: E501

        :return: The qualified_test_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._qualified_test_id

    @qualified_test_id.setter
    def qualified_test_id(self, qualified_test_id):
        """Sets the qualified_test_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"TEST\" - \"description_rus\": \"Идентификатор теста, в соответствии с которым по данным ‘на сегодня’ бумага не может быть предложена неквалифицированным инвесторам\"  # noqa: E501

        :param qualified_test_id: The qualified_test_id of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._qualified_test_id = qualified_test_id

    @property
    def qualified_test_id_tm(self):
        """Gets the qualified_test_id_tm of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"TEST\" - \"description_rus\": \"Идентификатор теста, в соответствии с которым по данным ‘на завтра’ бумага не может быть предложена неквалифицированным инвесторам\"  # noqa: E501

        :return: The qualified_test_id_tm of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._qualified_test_id_tm

    @qualified_test_id_tm.setter
    def qualified_test_id_tm(self, qualified_test_id_tm):
        """Sets the qualified_test_id_tm of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"TEST\" - \"description_rus\": \"Идентификатор теста, в соответствии с которым по данным ‘на завтра’ бумага не может быть предложена неквалифицированным инвесторам\"  # noqa: E501

        :param qualified_test_id_tm: The qualified_test_id_tm of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._qualified_test_id_tm = qualified_test_id_tm

    @property
    def base_asset_fintoolid(self):
        """Gets the base_asset_fintoolid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"ID\" - \"field_subgroup\": \"BASE\" - \"description_rus\": \"Идентификатор базового актива\"  # noqa: E501

        :return: The base_asset_fintoolid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._base_asset_fintoolid

    @base_asset_fintoolid.setter
    def base_asset_fintoolid(self, base_asset_fintoolid):
        """Sets the base_asset_fintoolid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"ID\" - \"field_subgroup\": \"BASE\" - \"description_rus\": \"Идентификатор базового актива\"  # noqa: E501

        :param base_asset_fintoolid: The base_asset_fintoolid of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._base_asset_fintoolid = base_asset_fintoolid

    @property
    def isqualified(self):
        """Gets the isqualified of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"QI\" - \"description_rus\": \"Предназначено для квалифицированных инвесторов\"  # noqa: E501

        :return: The isqualified of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: bool
        """
        return self._isqualified

    @isqualified.setter
    def isqualified(self, isqualified):
        """Sets the isqualified of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"QI\" - \"description_rus\": \"Предназначено для квалифицированных инвесторов\"  # noqa: E501

        :param isqualified: The isqualified of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: bool
        """

        self._isqualified = isqualified

    @property
    def listing_level_spb(self):
        """Gets the listing_level_spb of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"LIST\" - \"description_rus\": \"Уровень листинга на “Бирже СПБ”\"  # noqa: E501

        :return: The listing_level_spb of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._listing_level_spb

    @listing_level_spb.setter
    def listing_level_spb(self, listing_level_spb):
        """Sets the listing_level_spb of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"PARAM\" - \"field_subgroup\": \"LIST\" - \"description_rus\": \"Уровень листинга на “Бирже СПБ”\"  # noqa: E501

        :param listing_level_spb: The listing_level_spb of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._listing_level_spb = listing_level_spb

    @property
    def have_mm_moex(self):
        """Gets the have_mm_moex of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"PARAM\" - \"description_rus\": \"Бумага имеет маркетмейкеров на Московской бирже\"  # noqa: E501

        :return: The have_mm_moex of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: bool
        """
        return self._have_mm_moex

    @have_mm_moex.setter
    def have_mm_moex(self, have_mm_moex):
        """Sets the have_mm_moex of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"PARAM\" - \"description_rus\": \"Бумага имеет маркетмейкеров на Московской бирже\"  # noqa: E501

        :param have_mm_moex: The have_mm_moex of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: bool
        """

        self._have_mm_moex = have_mm_moex

    @property
    def have_mm_spb(self):
        """Gets the have_mm_spb of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"PARAM\" - \"description_rus\": \"Бумага имеет маркетмейкеров на Бирже СПБ\"  # noqa: E501

        :return: The have_mm_spb of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: bool
        """
        return self._have_mm_spb

    @have_mm_spb.setter
    def have_mm_spb(self, have_mm_spb):
        """Sets the have_mm_spb of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"PARAM\" - \"description_rus\": \"Бумага имеет маркетмейкеров на Бирже СПБ\"  # noqa: E501

        :param have_mm_spb: The have_mm_spb of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: bool
        """

        self._have_mm_spb = have_mm_spb

    @property
    def beg_book_date(self):
        """Gets the beg_book_date of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Дата открытия книги заявок\"  # noqa: E501

        :return: The beg_book_date of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: datetime
        """
        return self._beg_book_date

    @beg_book_date.setter
    def beg_book_date(self, beg_book_date):
        """Sets the beg_book_date of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"DIST&MTY\" - \"field_subgroup\": \"PLACEMT\" - \"description_rus\": \"Дата открытия книги заявок\"  # noqa: E501

        :param beg_book_date: The beg_book_date of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: datetime
        """

        self._beg_book_date = beg_book_date

    @property
    def seniority(self):
        """Gets the seniority of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Старшинство выплат при банкротстве эмитента\"  # noqa: E501

        :return: The seniority of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._seniority

    @seniority.setter
    def seniority(self, seniority):
        """Sets the seniority of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TYPE\" - \"field_subgroup\": \"BOND\" - \"description_rus\": \"Старшинство выплат при банкротстве эмитента\"  # noqa: E501

        :param seniority: The seniority of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._seniority = seniority

    @property
    def tradesite(self):
        """Gets the tradesite of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"EOD\" - \"description_rus\": \"Идентификатор основной торговой площадки, см. поле id в /Info/ExchangeTree\"  # noqa: E501

        :return: The tradesite of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._tradesite

    @tradesite.setter
    def tradesite(self, tradesite):
        """Sets the tradesite of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        - \"field_group\": \"TRADING\" - \"field_subgroup\": \"EOD\" - \"description_rus\": \"Идентификатор основной торговой площадки, см. поле id в /Info/ExchangeTree\"  # noqa: E501

        :param tradesite: The tradesite of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._tradesite = tradesite

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        Общее количество записей в выборке  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        Общее количество записей в выборке  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    @property
    def rn(self):
        """Gets the rn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501

        Номер записи в выборке  # noqa: E501

        :return: The rn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :rtype: int
        """
        return self._rn

    @rn.setter
    def rn(self, rn):
        """Sets the rn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.

        Номер записи в выборке  # noqa: E501

        :param rn: The rn of this EfirDataHubModelsModelsInfoFintoolReferenceDataFields.  # noqa: E501
        :type: int
        """

        self._rn = rn

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsInfoFintoolReferenceDataFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsInfoFintoolReferenceDataFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
