# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsInfoCurrencyCodesFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'fintoolid': 'int',
        'id_code': 'int',
        'code': 'str',
        'from_date': 'datetime',
        'up_to_date': 'datetime'
    }

    attribute_map = {
        'id': 'id',
        'fintoolid': 'fintoolid',
        'id_code': 'id_code',
        'code': 'code',
        'from_date': 'from_date',
        'up_to_date': 'up_to_date'
    }

    def __init__(self, id=None, fintoolid=None, id_code=None, code=None, from_date=None, up_to_date=None):  # noqa: E501
        """EfirDataHubModelsModelsInfoCurrencyCodesFields - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._fintoolid = None
        self._id_code = None
        self._code = None
        self._from_date = None
        self._up_to_date = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if fintoolid is not None:
            self.fintoolid = fintoolid
        if id_code is not None:
            self.id_code = id_code
        if code is not None:
            self.code = code
        if from_date is not None:
            self.from_date = from_date
        if up_to_date is not None:
            self.up_to_date = up_to_date

    @property
    def id(self):
        """Gets the id of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501

        Идентификатор записи в базе Интерфакс  # noqa: E501

        :return: The id of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EfirDataHubModelsModelsInfoCurrencyCodesFields.

        Идентификатор записи в базе Интерфакс  # noqa: E501

        :param id: The id of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def fintoolid(self):
        """Gets the fintoolid of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501

        Идентификатор валюты как инструмента в базе Интерфакс  # noqa: E501

        :return: The fintoolid of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501
        :rtype: int
        """
        return self._fintoolid

    @fintoolid.setter
    def fintoolid(self, fintoolid):
        """Sets the fintoolid of this EfirDataHubModelsModelsInfoCurrencyCodesFields.

        Идентификатор валюты как инструмента в базе Интерфакс  # noqa: E501

        :param fintoolid: The fintoolid of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501
        :type: int
        """

        self._fintoolid = fintoolid

    @property
    def id_code(self):
        """Gets the id_code of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501

        Идентификатор классификатора (значение поля ID объекта Classificator из метода ClassificationCodes)  # noqa: E501

        :return: The id_code of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501
        :rtype: int
        """
        return self._id_code

    @id_code.setter
    def id_code(self, id_code):
        """Sets the id_code of this EfirDataHubModelsModelsInfoCurrencyCodesFields.

        Идентификатор классификатора (значение поля ID объекта Classificator из метода ClassificationCodes)  # noqa: E501

        :param id_code: The id_code of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501
        :type: int
        """

        self._id_code = id_code

    @property
    def code(self):
        """Gets the code of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501

        Значение классификатора  # noqa: E501

        :return: The code of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this EfirDataHubModelsModelsInfoCurrencyCodesFields.

        Значение классификатора  # noqa: E501

        :param code: The code of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501
        :type: str
        """

        self._code = code

    @property
    def from_date(self):
        """Gets the from_date of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501

        Дата начала действия значения классификатора  # noqa: E501

        :return: The from_date of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501
        :rtype: datetime
        """
        return self._from_date

    @from_date.setter
    def from_date(self, from_date):
        """Sets the from_date of this EfirDataHubModelsModelsInfoCurrencyCodesFields.

        Дата начала действия значения классификатора  # noqa: E501

        :param from_date: The from_date of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501
        :type: datetime
        """

        self._from_date = from_date

    @property
    def up_to_date(self):
        """Gets the up_to_date of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501

        Дата окончания действия значения классификатора  # noqa: E501

        :return: The up_to_date of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501
        :rtype: datetime
        """
        return self._up_to_date

    @up_to_date.setter
    def up_to_date(self, up_to_date):
        """Sets the up_to_date of this EfirDataHubModelsModelsInfoCurrencyCodesFields.

        Дата окончания действия значения классификатора  # noqa: E501

        :param up_to_date: The up_to_date of this EfirDataHubModelsModelsInfoCurrencyCodesFields.  # noqa: E501
        :type: datetime
        """

        self._up_to_date = up_to_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsInfoCurrencyCodesFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsInfoCurrencyCodesFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
