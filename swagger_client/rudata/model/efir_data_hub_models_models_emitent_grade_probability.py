# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsEmitentGradeProbability(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'gp01': 'float',
        'gp02': 'float',
        'gp03': 'float',
        'gp04': 'float',
        'gp05': 'float',
        'gp06': 'float',
        'gp07': 'float',
        'gp08': 'float',
        'gp09': 'float',
        'gp10': 'float',
        'gp11': 'float',
        'gp12': 'float',
        'gp13': 'float',
        'gp14': 'float',
        'gp15': 'float',
        'gp16': 'float',
        'gp17': 'float',
        'gp18': 'float',
        'gp19': 'float',
        'gp20': 'float',
        'gp21': 'float'
    }

    attribute_map = {
        'gp01': 'gp01',
        'gp02': 'gp02',
        'gp03': 'gp03',
        'gp04': 'gp04',
        'gp05': 'gp05',
        'gp06': 'gp06',
        'gp07': 'gp07',
        'gp08': 'gp08',
        'gp09': 'gp09',
        'gp10': 'gp10',
        'gp11': 'gp11',
        'gp12': 'gp12',
        'gp13': 'gp13',
        'gp14': 'gp14',
        'gp15': 'gp15',
        'gp16': 'gp16',
        'gp17': 'gp17',
        'gp18': 'gp18',
        'gp19': 'gp19',
        'gp20': 'gp20',
        'gp21': 'gp21'
    }

    def __init__(self, gp01=None, gp02=None, gp03=None, gp04=None, gp05=None, gp06=None, gp07=None, gp08=None, gp09=None, gp10=None, gp11=None, gp12=None, gp13=None, gp14=None, gp15=None, gp16=None, gp17=None, gp18=None, gp19=None, gp20=None, gp21=None):  # noqa: E501
        """EfirDataHubModelsModelsEmitentGradeProbability - a model defined in Swagger"""  # noqa: E501
        self._gp01 = None
        self._gp02 = None
        self._gp03 = None
        self._gp04 = None
        self._gp05 = None
        self._gp06 = None
        self._gp07 = None
        self._gp08 = None
        self._gp09 = None
        self._gp10 = None
        self._gp11 = None
        self._gp12 = None
        self._gp13 = None
        self._gp14 = None
        self._gp15 = None
        self._gp16 = None
        self._gp17 = None
        self._gp18 = None
        self._gp19 = None
        self._gp20 = None
        self._gp21 = None
        self.discriminator = None
        if gp01 is not None:
            self.gp01 = gp01
        if gp02 is not None:
            self.gp02 = gp02
        if gp03 is not None:
            self.gp03 = gp03
        if gp04 is not None:
            self.gp04 = gp04
        if gp05 is not None:
            self.gp05 = gp05
        if gp06 is not None:
            self.gp06 = gp06
        if gp07 is not None:
            self.gp07 = gp07
        if gp08 is not None:
            self.gp08 = gp08
        if gp09 is not None:
            self.gp09 = gp09
        if gp10 is not None:
            self.gp10 = gp10
        if gp11 is not None:
            self.gp11 = gp11
        if gp12 is not None:
            self.gp12 = gp12
        if gp13 is not None:
            self.gp13 = gp13
        if gp14 is not None:
            self.gp14 = gp14
        if gp15 is not None:
            self.gp15 = gp15
        if gp16 is not None:
            self.gp16 = gp16
        if gp17 is not None:
            self.gp17 = gp17
        if gp18 is not None:
            self.gp18 = gp18
        if gp19 is not None:
            self.gp19 = gp19
        if gp20 is not None:
            self.gp20 = gp20
        if gp21 is not None:
            self.gp21 = gp21

    @property
    def gp01(self):
        """Gets the gp01 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp01 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp01

    @gp01.setter
    def gp01(self, gp01):
        """Sets the gp01 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp01: The gp01 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp01 = gp01

    @property
    def gp02(self):
        """Gets the gp02 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp02 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp02

    @gp02.setter
    def gp02(self, gp02):
        """Sets the gp02 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp02: The gp02 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp02 = gp02

    @property
    def gp03(self):
        """Gets the gp03 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp03 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp03

    @gp03.setter
    def gp03(self, gp03):
        """Sets the gp03 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp03: The gp03 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp03 = gp03

    @property
    def gp04(self):
        """Gets the gp04 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp04 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp04

    @gp04.setter
    def gp04(self, gp04):
        """Sets the gp04 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp04: The gp04 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp04 = gp04

    @property
    def gp05(self):
        """Gets the gp05 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp05 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp05

    @gp05.setter
    def gp05(self, gp05):
        """Sets the gp05 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp05: The gp05 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp05 = gp05

    @property
    def gp06(self):
        """Gets the gp06 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp06 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp06

    @gp06.setter
    def gp06(self, gp06):
        """Sets the gp06 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp06: The gp06 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp06 = gp06

    @property
    def gp07(self):
        """Gets the gp07 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp07 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp07

    @gp07.setter
    def gp07(self, gp07):
        """Sets the gp07 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp07: The gp07 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp07 = gp07

    @property
    def gp08(self):
        """Gets the gp08 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp08 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp08

    @gp08.setter
    def gp08(self, gp08):
        """Sets the gp08 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp08: The gp08 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp08 = gp08

    @property
    def gp09(self):
        """Gets the gp09 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp09 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp09

    @gp09.setter
    def gp09(self, gp09):
        """Sets the gp09 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp09: The gp09 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp09 = gp09

    @property
    def gp10(self):
        """Gets the gp10 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp10 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp10

    @gp10.setter
    def gp10(self, gp10):
        """Sets the gp10 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp10: The gp10 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp10 = gp10

    @property
    def gp11(self):
        """Gets the gp11 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp11 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp11

    @gp11.setter
    def gp11(self, gp11):
        """Sets the gp11 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp11: The gp11 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp11 = gp11

    @property
    def gp12(self):
        """Gets the gp12 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp12 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp12

    @gp12.setter
    def gp12(self, gp12):
        """Sets the gp12 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp12: The gp12 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp12 = gp12

    @property
    def gp13(self):
        """Gets the gp13 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp13 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp13

    @gp13.setter
    def gp13(self, gp13):
        """Sets the gp13 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp13: The gp13 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp13 = gp13

    @property
    def gp14(self):
        """Gets the gp14 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp14 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp14

    @gp14.setter
    def gp14(self, gp14):
        """Sets the gp14 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp14: The gp14 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp14 = gp14

    @property
    def gp15(self):
        """Gets the gp15 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp15 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp15

    @gp15.setter
    def gp15(self, gp15):
        """Sets the gp15 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp15: The gp15 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp15 = gp15

    @property
    def gp16(self):
        """Gets the gp16 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp16 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp16

    @gp16.setter
    def gp16(self, gp16):
        """Sets the gp16 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp16: The gp16 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp16 = gp16

    @property
    def gp17(self):
        """Gets the gp17 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp17 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp17

    @gp17.setter
    def gp17(self, gp17):
        """Sets the gp17 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp17: The gp17 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp17 = gp17

    @property
    def gp18(self):
        """Gets the gp18 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp18 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp18

    @gp18.setter
    def gp18(self, gp18):
        """Sets the gp18 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp18: The gp18 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp18 = gp18

    @property
    def gp19(self):
        """Gets the gp19 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp19 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp19

    @gp19.setter
    def gp19(self, gp19):
        """Sets the gp19 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp19: The gp19 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp19 = gp19

    @property
    def gp20(self):
        """Gets the gp20 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp20 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp20

    @gp20.setter
    def gp20(self, gp20):
        """Sets the gp20 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp20: The gp20 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp20 = gp20

    @property
    def gp21(self):
        """Gets the gp21 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp21 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :rtype: float
        """
        return self._gp21

    @gp21.setter
    def gp21(self, gp21):
        """Sets the gp21 of this EfirDataHubModelsModelsEmitentGradeProbability.

        Вероятности попадания в грейд  # noqa: E501

        :param gp21: The gp21 of this EfirDataHubModelsModelsEmitentGradeProbability.  # noqa: E501
        :type: float
        """

        self._gp21 = gp21

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsEmitentGradeProbability, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsEmitentGradeProbability):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
