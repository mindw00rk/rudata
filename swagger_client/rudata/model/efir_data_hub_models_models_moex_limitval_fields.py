# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsMoexLimitvalFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'dt': 'datetime',
        'fintool_id': 'int',
        'fininst_id': 'int',
        'source_id': 'int',
        'fix_date': 'datetime',
        'assetid2': 'str',
        'im1': 'float',
        'im2': 'float',
        'im3': 'float',
        'limit1': 'float',
        'limit2': 'float',
        'counter': 'int',
        'rn': 'int'
    }

    attribute_map = {
        'dt': 'dt',
        'fintool_id': 'fintoolId',
        'fininst_id': 'fininstId',
        'source_id': 'sourceId',
        'fix_date': 'fix_date',
        'assetid2': 'assetid2',
        'im1': 'im1',
        'im2': 'im2',
        'im3': 'im3',
        'limit1': 'limit1',
        'limit2': 'limit2',
        'counter': 'counter',
        'rn': 'rn'
    }

    def __init__(self, dt=None, fintool_id=None, fininst_id=None, source_id=None, fix_date=None, assetid2=None, im1=None, im2=None, im3=None, limit1=None, limit2=None, counter=None, rn=None):  # noqa: E501
        """EfirDataHubModelsModelsMoexLimitvalFields - a model defined in Swagger"""  # noqa: E501
        self._dt = None
        self._fintool_id = None
        self._fininst_id = None
        self._source_id = None
        self._fix_date = None
        self._assetid2 = None
        self._im1 = None
        self._im2 = None
        self._im3 = None
        self._limit1 = None
        self._limit2 = None
        self._counter = None
        self._rn = None
        self.discriminator = None
        if dt is not None:
            self.dt = dt
        if fintool_id is not None:
            self.fintool_id = fintool_id
        if fininst_id is not None:
            self.fininst_id = fininst_id
        if source_id is not None:
            self.source_id = source_id
        if fix_date is not None:
            self.fix_date = fix_date
        if assetid2 is not None:
            self.assetid2 = assetid2
        if im1 is not None:
            self.im1 = im1
        if im2 is not None:
            self.im2 = im2
        if im3 is not None:
            self.im3 = im3
        if limit1 is not None:
            self.limit1 = limit1
        if limit2 is not None:
            self.limit2 = limit2
        if counter is not None:
            self.counter = counter
        if rn is not None:
            self.rn = rn

    @property
    def dt(self):
        """Gets the dt of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501

        Дата, на которую рассчитаны риск-параметры.  # noqa: E501

        :return: The dt of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :rtype: datetime
        """
        return self._dt

    @dt.setter
    def dt(self, dt):
        """Sets the dt of this EfirDataHubModelsModelsMoexLimitvalFields.

        Дата, на которую рассчитаны риск-параметры.  # noqa: E501

        :param dt: The dt of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :type: datetime
        """

        self._dt = dt

    @property
    def fintool_id(self):
        """Gets the fintool_id of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501

        Идентификатор инструмента.  # noqa: E501

        :return: The fintool_id of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :rtype: int
        """
        return self._fintool_id

    @fintool_id.setter
    def fintool_id(self, fintool_id):
        """Sets the fintool_id of this EfirDataHubModelsModelsMoexLimitvalFields.

        Идентификатор инструмента.  # noqa: E501

        :param fintool_id: The fintool_id of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :type: int
        """

        self._fintool_id = fintool_id

    @property
    def fininst_id(self):
        """Gets the fininst_id of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501

        ID эмитента (Финмаркет).  # noqa: E501

        :return: The fininst_id of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :rtype: int
        """
        return self._fininst_id

    @fininst_id.setter
    def fininst_id(self, fininst_id):
        """Sets the fininst_id of this EfirDataHubModelsModelsMoexLimitvalFields.

        ID эмитента (Финмаркет).  # noqa: E501

        :param fininst_id: The fininst_id of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :type: int
        """

        self._fininst_id = fininst_id

    @property
    def source_id(self):
        """Gets the source_id of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501

        ID источника.  # noqa: E501

        :return: The source_id of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :rtype: int
        """
        return self._source_id

    @source_id.setter
    def source_id(self, source_id):
        """Sets the source_id of this EfirDataHubModelsModelsMoexLimitvalFields.

        ID источника.  # noqa: E501

        :param source_id: The source_id of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :type: int
        """

        self._source_id = source_id

    @property
    def fix_date(self):
        """Gets the fix_date of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501

        Дата и время фиксации/изменения параметров.  # noqa: E501

        :return: The fix_date of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :rtype: datetime
        """
        return self._fix_date

    @fix_date.setter
    def fix_date(self, fix_date):
        """Sets the fix_date of this EfirDataHubModelsModelsMoexLimitvalFields.

        Дата и время фиксации/изменения параметров.  # noqa: E501

        :param fix_date: The fix_date of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :type: datetime
        """

        self._fix_date = fix_date

    @property
    def assetid2(self):
        """Gets the assetid2 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501

        Валюта расчета.  # noqa: E501

        :return: The assetid2 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :rtype: str
        """
        return self._assetid2

    @assetid2.setter
    def assetid2(self, assetid2):
        """Sets the assetid2 of this EfirDataHubModelsModelsMoexLimitvalFields.

        Валюта расчета.  # noqa: E501

        :param assetid2: The assetid2 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :type: str
        """

        self._assetid2 = assetid2

    @property
    def im1(self):
        """Gets the im1 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501

        Ставка рыночного риска 1-го уровня, %.  # noqa: E501

        :return: The im1 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :rtype: float
        """
        return self._im1

    @im1.setter
    def im1(self, im1):
        """Sets the im1 of this EfirDataHubModelsModelsMoexLimitvalFields.

        Ставка рыночного риска 1-го уровня, %.  # noqa: E501

        :param im1: The im1 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :type: float
        """

        self._im1 = im1

    @property
    def im2(self):
        """Gets the im2 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501

        Ставка рыночного риска 2-го уровня, %.  # noqa: E501

        :return: The im2 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :rtype: float
        """
        return self._im2

    @im2.setter
    def im2(self, im2):
        """Sets the im2 of this EfirDataHubModelsModelsMoexLimitvalFields.

        Ставка рыночного риска 2-го уровня, %.  # noqa: E501

        :param im2: The im2 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :type: float
        """

        self._im2 = im2

    @property
    def im3(self):
        """Gets the im3 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501

        Ставка рыночного риска 3-го уровня, %.  # noqa: E501

        :return: The im3 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :rtype: float
        """
        return self._im3

    @im3.setter
    def im3(self, im3):
        """Sets the im3 of this EfirDataHubModelsModelsMoexLimitvalFields.

        Ставка рыночного риска 3-го уровня, %.  # noqa: E501

        :param im3: The im3 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :type: float
        """

        self._im3 = im3

    @property
    def limit1(self):
        """Gets the limit1 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501

        Лимит концентрации 1-го уровня.  # noqa: E501

        :return: The limit1 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :rtype: float
        """
        return self._limit1

    @limit1.setter
    def limit1(self, limit1):
        """Sets the limit1 of this EfirDataHubModelsModelsMoexLimitvalFields.

        Лимит концентрации 1-го уровня.  # noqa: E501

        :param limit1: The limit1 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :type: float
        """

        self._limit1 = limit1

    @property
    def limit2(self):
        """Gets the limit2 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501

        Лимит концентрации 2-го уровня.  # noqa: E501

        :return: The limit2 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :rtype: float
        """
        return self._limit2

    @limit2.setter
    def limit2(self, limit2):
        """Sets the limit2 of this EfirDataHubModelsModelsMoexLimitvalFields.

        Лимит концентрации 2-го уровня.  # noqa: E501

        :param limit2: The limit2 of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :type: float
        """

        self._limit2 = limit2

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501

        Общее количество записей в выборке.  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsMoexLimitvalFields.

        Общее количество записей в выборке.  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    @property
    def rn(self):
        """Gets the rn of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501

        Номер записи в выборке.  # noqa: E501

        :return: The rn of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :rtype: int
        """
        return self._rn

    @rn.setter
    def rn(self, rn):
        """Sets the rn of this EfirDataHubModelsModelsMoexLimitvalFields.

        Номер записи в выборке.  # noqa: E501

        :param rn: The rn of this EfirDataHubModelsModelsMoexLimitvalFields.  # noqa: E501
        :type: int
        """

        self._rn = rn

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsMoexLimitvalFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsMoexLimitvalFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
