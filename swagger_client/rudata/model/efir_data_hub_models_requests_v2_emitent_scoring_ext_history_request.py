# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fininst_ids': 'list[int]',
        'codes': 'list[str]',
        'actual_on_date': 'datetime',
        'source': 'AllOfEfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequestSource',
        'is_filtered': 'bool'
    }

    attribute_map = {
        'fininst_ids': 'fininstIds',
        'codes': 'codes',
        'actual_on_date': 'actualOnDate',
        'source': 'source',
        'is_filtered': 'isFiltered'
    }

    def __init__(self, fininst_ids=None, codes=None, actual_on_date=None, source=None, is_filtered=None):  # noqa: E501
        """EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest - a model defined in Swagger"""  # noqa: E501
        self._fininst_ids = None
        self._codes = None
        self._actual_on_date = None
        self._source = None
        self._is_filtered = None
        self.discriminator = None
        if fininst_ids is not None:
            self.fininst_ids = fininst_ids
        if codes is not None:
            self.codes = codes
        if actual_on_date is not None:
            self.actual_on_date = actual_on_date
        if source is not None:
            self.source = source
        if is_filtered is not None:
            self.is_filtered = is_filtered

    @property
    def fininst_ids(self):
        """Gets the fininst_ids of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501

        Идентификаторы компаний в базе Интерфакс (не более 20)  # noqa: E501

        :return: The fininst_ids of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501
        :rtype: list[int]
        """
        return self._fininst_ids

    @fininst_ids.setter
    def fininst_ids(self, fininst_ids):
        """Sets the fininst_ids of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.

        Идентификаторы компаний в базе Интерфакс (не более 20)  # noqa: E501

        :param fininst_ids: The fininst_ids of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501
        :type: list[int]
        """

        self._fininst_ids = fininst_ids

    @property
    def codes(self):
        """Gets the codes of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501

        Коды компаний -ИНН или ОГРН, не более 20 кодов. Указать, если не указаны FinistIds  # noqa: E501

        :return: The codes of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._codes

    @codes.setter
    def codes(self, codes):
        """Sets the codes of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.

        Коды компаний -ИНН или ОГРН, не более 20 кодов. Указать, если не указаны FinistIds  # noqa: E501

        :param codes: The codes of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501
        :type: list[str]
        """

        self._codes = codes

    @property
    def actual_on_date(self):
        """Gets the actual_on_date of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501

        Дата, на которую актуальны скоринги. По умолчаню - текущая дата  # noqa: E501

        :return: The actual_on_date of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501
        :rtype: datetime
        """
        return self._actual_on_date

    @actual_on_date.setter
    def actual_on_date(self, actual_on_date):
        """Sets the actual_on_date of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.

        Дата, на которую актуальны скоринги. По умолчаню - текущая дата  # noqa: E501

        :param actual_on_date: The actual_on_date of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501
        :type: datetime
        """

        self._actual_on_date = actual_on_date

    @property
    def source(self):
        """Gets the source of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501

        Тип отчетности: 0 - РСБУ, 1 – МСФО  0 = RSBU  1 = IFRS  # noqa: E501

        :return: The source of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501
        :rtype: AllOfEfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequestSource
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.

        Тип отчетности: 0 - РСБУ, 1 – МСФО  0 = RSBU  1 = IFRS  # noqa: E501

        :param source: The source of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501
        :type: AllOfEfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequestSource
        """

        self._source = source

    @property
    def is_filtered(self):
        """Gets the is_filtered of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501

        Признак фильтрации значений балансов и коэффициентов на момент окончания отчетности  # noqa: E501

        :return: The is_filtered of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501
        :rtype: bool
        """
        return self._is_filtered

    @is_filtered.setter
    def is_filtered(self, is_filtered):
        """Sets the is_filtered of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.

        Признак фильтрации значений балансов и коэффициентов на момент окончания отчетности  # noqa: E501

        :param is_filtered: The is_filtered of this EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest.  # noqa: E501
        :type: bool
        """

        self._is_filtered = is_filtered

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsRequestsV2EmitentScoringExtHistoryRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
