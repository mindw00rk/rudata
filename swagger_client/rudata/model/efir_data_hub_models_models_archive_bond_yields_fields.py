# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsArchiveBondYieldsFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'circulation': 'int',
        'circulation_12m': 'int',
        'circulation_1m': 'int',
        'circulation_2m': 'int',
        'circulation_2w': 'int',
        'circulation_3m': 'int',
        'circulation_6m': 'int',
        'convexity': 'float',
        'dt': 'datetime',
        'duration': 'int',
        'duration_12m': 'int',
        'duration_1m': 'int',
        'duration_2m': 'int',
        'duration_2w': 'int',
        'duration_3m': 'int',
        'duration_6m': 'int',
        'duration_n': 'float',
        'duration_n_12m': 'float',
        'duration_n_1m': 'float',
        'duration_n_2m': 'float',
        'duration_n_2w': 'float',
        'duration_n_3m': 'float',
        'duration_n_6m': 'float',
        'id_iss': 'int',
        'id_offer': 'int',
        'pvbp': 'float',
        'type': 'int',
        'yield_12m': 'float',
        'yield_1m': 'float',
        'yield_2m': 'float',
        'yield_2w': 'float',
        'yield_3m': 'float',
        'yield_6m': 'float',
        'yield_agg': 'float',
        'yield_agg_12m': 'float',
        'yield_agg_1m': 'float',
        'yield_agg_2m': 'float',
        'yield_agg_2w': 'float',
        'yield_agg_3m': 'float',
        'yield_agg_6m': 'float',
        'yield_ask': 'float',
        'yield_bid': 'float',
        'yield_clast': 'float',
        'yield_cwa': 'float',
        'yield_high': 'float',
        'yield_last': 'float',
        'yield_low': 'float',
        'yield_mq': 'float',
        'yield_open': 'float',
        'yield_slast': 'float',
        'yield_swa': 'float',
        'yield_wa': 'float'
    }

    attribute_map = {
        'circulation': 'circulation',
        'circulation_12m': 'circulation_12m',
        'circulation_1m': 'circulation_1m',
        'circulation_2m': 'circulation_2m',
        'circulation_2w': 'circulation_2w',
        'circulation_3m': 'circulation_3m',
        'circulation_6m': 'circulation_6m',
        'convexity': 'convexity',
        'dt': 'dt',
        'duration': 'duration',
        'duration_12m': 'duration_12m',
        'duration_1m': 'duration_1m',
        'duration_2m': 'duration_2m',
        'duration_2w': 'duration_2w',
        'duration_3m': 'duration_3m',
        'duration_6m': 'duration_6m',
        'duration_n': 'duration_n',
        'duration_n_12m': 'duration_n_12m',
        'duration_n_1m': 'duration_n_1m',
        'duration_n_2m': 'duration_n_2m',
        'duration_n_2w': 'duration_n_2w',
        'duration_n_3m': 'duration_n_3m',
        'duration_n_6m': 'duration_n_6m',
        'id_iss': 'id_iss',
        'id_offer': 'id_offer',
        'pvbp': 'pvbp',
        'type': 'type',
        'yield_12m': 'yield_12m',
        'yield_1m': 'yield_1m',
        'yield_2m': 'yield_2m',
        'yield_2w': 'yield_2w',
        'yield_3m': 'yield_3m',
        'yield_6m': 'yield_6m',
        'yield_agg': 'yield_agg',
        'yield_agg_12m': 'yield_agg_12m',
        'yield_agg_1m': 'yield_agg_1m',
        'yield_agg_2m': 'yield_agg_2m',
        'yield_agg_2w': 'yield_agg_2w',
        'yield_agg_3m': 'yield_agg_3m',
        'yield_agg_6m': 'yield_agg_6m',
        'yield_ask': 'yield_ask',
        'yield_bid': 'yield_bid',
        'yield_clast': 'yield_clast',
        'yield_cwa': 'yield_cwa',
        'yield_high': 'yield_high',
        'yield_last': 'yield_last',
        'yield_low': 'yield_low',
        'yield_mq': 'yield_mq',
        'yield_open': 'yield_open',
        'yield_slast': 'yield_slast',
        'yield_swa': 'yield_swa',
        'yield_wa': 'yield_wa'
    }

    def __init__(self, circulation=None, circulation_12m=None, circulation_1m=None, circulation_2m=None, circulation_2w=None, circulation_3m=None, circulation_6m=None, convexity=None, dt=None, duration=None, duration_12m=None, duration_1m=None, duration_2m=None, duration_2w=None, duration_3m=None, duration_6m=None, duration_n=None, duration_n_12m=None, duration_n_1m=None, duration_n_2m=None, duration_n_2w=None, duration_n_3m=None, duration_n_6m=None, id_iss=None, id_offer=None, pvbp=None, type=None, yield_12m=None, yield_1m=None, yield_2m=None, yield_2w=None, yield_3m=None, yield_6m=None, yield_agg=None, yield_agg_12m=None, yield_agg_1m=None, yield_agg_2m=None, yield_agg_2w=None, yield_agg_3m=None, yield_agg_6m=None, yield_ask=None, yield_bid=None, yield_clast=None, yield_cwa=None, yield_high=None, yield_last=None, yield_low=None, yield_mq=None, yield_open=None, yield_slast=None, yield_swa=None, yield_wa=None):  # noqa: E501
        """EfirDataHubModelsModelsArchiveBondYieldsFields - a model defined in Swagger"""  # noqa: E501
        self._circulation = None
        self._circulation_12m = None
        self._circulation_1m = None
        self._circulation_2m = None
        self._circulation_2w = None
        self._circulation_3m = None
        self._circulation_6m = None
        self._convexity = None
        self._dt = None
        self._duration = None
        self._duration_12m = None
        self._duration_1m = None
        self._duration_2m = None
        self._duration_2w = None
        self._duration_3m = None
        self._duration_6m = None
        self._duration_n = None
        self._duration_n_12m = None
        self._duration_n_1m = None
        self._duration_n_2m = None
        self._duration_n_2w = None
        self._duration_n_3m = None
        self._duration_n_6m = None
        self._id_iss = None
        self._id_offer = None
        self._pvbp = None
        self._type = None
        self._yield_12m = None
        self._yield_1m = None
        self._yield_2m = None
        self._yield_2w = None
        self._yield_3m = None
        self._yield_6m = None
        self._yield_agg = None
        self._yield_agg_12m = None
        self._yield_agg_1m = None
        self._yield_agg_2m = None
        self._yield_agg_2w = None
        self._yield_agg_3m = None
        self._yield_agg_6m = None
        self._yield_ask = None
        self._yield_bid = None
        self._yield_clast = None
        self._yield_cwa = None
        self._yield_high = None
        self._yield_last = None
        self._yield_low = None
        self._yield_mq = None
        self._yield_open = None
        self._yield_slast = None
        self._yield_swa = None
        self._yield_wa = None
        self.discriminator = None
        if circulation is not None:
            self.circulation = circulation
        if circulation_12m is not None:
            self.circulation_12m = circulation_12m
        if circulation_1m is not None:
            self.circulation_1m = circulation_1m
        if circulation_2m is not None:
            self.circulation_2m = circulation_2m
        if circulation_2w is not None:
            self.circulation_2w = circulation_2w
        if circulation_3m is not None:
            self.circulation_3m = circulation_3m
        if circulation_6m is not None:
            self.circulation_6m = circulation_6m
        if convexity is not None:
            self.convexity = convexity
        if dt is not None:
            self.dt = dt
        if duration is not None:
            self.duration = duration
        if duration_12m is not None:
            self.duration_12m = duration_12m
        if duration_1m is not None:
            self.duration_1m = duration_1m
        if duration_2m is not None:
            self.duration_2m = duration_2m
        if duration_2w is not None:
            self.duration_2w = duration_2w
        if duration_3m is not None:
            self.duration_3m = duration_3m
        if duration_6m is not None:
            self.duration_6m = duration_6m
        if duration_n is not None:
            self.duration_n = duration_n
        if duration_n_12m is not None:
            self.duration_n_12m = duration_n_12m
        if duration_n_1m is not None:
            self.duration_n_1m = duration_n_1m
        if duration_n_2m is not None:
            self.duration_n_2m = duration_n_2m
        if duration_n_2w is not None:
            self.duration_n_2w = duration_n_2w
        if duration_n_3m is not None:
            self.duration_n_3m = duration_n_3m
        if duration_n_6m is not None:
            self.duration_n_6m = duration_n_6m
        if id_iss is not None:
            self.id_iss = id_iss
        if id_offer is not None:
            self.id_offer = id_offer
        if pvbp is not None:
            self.pvbp = pvbp
        if type is not None:
            self.type = type
        if yield_12m is not None:
            self.yield_12m = yield_12m
        if yield_1m is not None:
            self.yield_1m = yield_1m
        if yield_2m is not None:
            self.yield_2m = yield_2m
        if yield_2w is not None:
            self.yield_2w = yield_2w
        if yield_3m is not None:
            self.yield_3m = yield_3m
        if yield_6m is not None:
            self.yield_6m = yield_6m
        if yield_agg is not None:
            self.yield_agg = yield_agg
        if yield_agg_12m is not None:
            self.yield_agg_12m = yield_agg_12m
        if yield_agg_1m is not None:
            self.yield_agg_1m = yield_agg_1m
        if yield_agg_2m is not None:
            self.yield_agg_2m = yield_agg_2m
        if yield_agg_2w is not None:
            self.yield_agg_2w = yield_agg_2w
        if yield_agg_3m is not None:
            self.yield_agg_3m = yield_agg_3m
        if yield_agg_6m is not None:
            self.yield_agg_6m = yield_agg_6m
        if yield_ask is not None:
            self.yield_ask = yield_ask
        if yield_bid is not None:
            self.yield_bid = yield_bid
        if yield_clast is not None:
            self.yield_clast = yield_clast
        if yield_cwa is not None:
            self.yield_cwa = yield_cwa
        if yield_high is not None:
            self.yield_high = yield_high
        if yield_last is not None:
            self.yield_last = yield_last
        if yield_low is not None:
            self.yield_low = yield_low
        if yield_mq is not None:
            self.yield_mq = yield_mq
        if yield_open is not None:
            self.yield_open = yield_open
        if yield_slast is not None:
            self.yield_slast = yield_slast
        if yield_swa is not None:
            self.yield_swa = yield_swa
        if yield_wa is not None:
            self.yield_wa = yield_wa

    @property
    def circulation(self):
        """Gets the circulation of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Период обращения  # noqa: E501

        :return: The circulation of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._circulation

    @circulation.setter
    def circulation(self, circulation):
        """Sets the circulation of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Период обращения  # noqa: E501

        :param circulation: The circulation of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._circulation = circulation

    @property
    def circulation_12m(self):
        """Gets the circulation_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Период обращения за 12 месяцев  # noqa: E501

        :return: The circulation_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._circulation_12m

    @circulation_12m.setter
    def circulation_12m(self, circulation_12m):
        """Sets the circulation_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Период обращения за 12 месяцев  # noqa: E501

        :param circulation_12m: The circulation_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._circulation_12m = circulation_12m

    @property
    def circulation_1m(self):
        """Gets the circulation_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Период обращения средний за 1 месяц  # noqa: E501

        :return: The circulation_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._circulation_1m

    @circulation_1m.setter
    def circulation_1m(self, circulation_1m):
        """Sets the circulation_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Период обращения средний за 1 месяц  # noqa: E501

        :param circulation_1m: The circulation_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._circulation_1m = circulation_1m

    @property
    def circulation_2m(self):
        """Gets the circulation_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Период обращения средний за 2 месяца  # noqa: E501

        :return: The circulation_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._circulation_2m

    @circulation_2m.setter
    def circulation_2m(self, circulation_2m):
        """Sets the circulation_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Период обращения средний за 2 месяца  # noqa: E501

        :param circulation_2m: The circulation_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._circulation_2m = circulation_2m

    @property
    def circulation_2w(self):
        """Gets the circulation_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Период обращения средний за 2 недели  # noqa: E501

        :return: The circulation_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._circulation_2w

    @circulation_2w.setter
    def circulation_2w(self, circulation_2w):
        """Sets the circulation_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Период обращения средний за 2 недели  # noqa: E501

        :param circulation_2w: The circulation_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._circulation_2w = circulation_2w

    @property
    def circulation_3m(self):
        """Gets the circulation_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Период обращения за 3 месяца  # noqa: E501

        :return: The circulation_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._circulation_3m

    @circulation_3m.setter
    def circulation_3m(self, circulation_3m):
        """Sets the circulation_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Период обращения за 3 месяца  # noqa: E501

        :param circulation_3m: The circulation_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._circulation_3m = circulation_3m

    @property
    def circulation_6m(self):
        """Gets the circulation_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Период обращения за 6 месяцев  # noqa: E501

        :return: The circulation_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._circulation_6m

    @circulation_6m.setter
    def circulation_6m(self, circulation_6m):
        """Sets the circulation_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Период обращения за 6 месяцев  # noqa: E501

        :param circulation_6m: The circulation_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._circulation_6m = circulation_6m

    @property
    def convexity(self):
        """Gets the convexity of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Выпуклость  # noqa: E501

        :return: The convexity of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._convexity

    @convexity.setter
    def convexity(self, convexity):
        """Sets the convexity of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Выпуклость  # noqa: E501

        :param convexity: The convexity of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._convexity = convexity

    @property
    def dt(self):
        """Gets the dt of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дата  # noqa: E501

        :return: The dt of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: datetime
        """
        return self._dt

    @dt.setter
    def dt(self, dt):
        """Sets the dt of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дата  # noqa: E501

        :param dt: The dt of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: datetime
        """

        self._dt = dt

    @property
    def duration(self):
        """Gets the duration of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею  # noqa: E501

        :return: The duration of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею  # noqa: E501

        :param duration: The duration of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._duration = duration

    @property
    def duration_12m(self):
        """Gets the duration_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею средняя за 12 месяцев  # noqa: E501

        :return: The duration_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._duration_12m

    @duration_12m.setter
    def duration_12m(self, duration_12m):
        """Sets the duration_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею средняя за 12 месяцев  # noqa: E501

        :param duration_12m: The duration_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._duration_12m = duration_12m

    @property
    def duration_1m(self):
        """Gets the duration_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею средняя за 1 месяц  # noqa: E501

        :return: The duration_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._duration_1m

    @duration_1m.setter
    def duration_1m(self, duration_1m):
        """Sets the duration_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею средняя за 1 месяц  # noqa: E501

        :param duration_1m: The duration_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._duration_1m = duration_1m

    @property
    def duration_2m(self):
        """Gets the duration_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею средняя за 2 месяца  # noqa: E501

        :return: The duration_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._duration_2m

    @duration_2m.setter
    def duration_2m(self, duration_2m):
        """Sets the duration_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею средняя за 2 месяца  # noqa: E501

        :param duration_2m: The duration_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._duration_2m = duration_2m

    @property
    def duration_2w(self):
        """Gets the duration_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею средняя за 2 недели  # noqa: E501

        :return: The duration_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._duration_2w

    @duration_2w.setter
    def duration_2w(self, duration_2w):
        """Sets the duration_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею средняя за 2 недели  # noqa: E501

        :param duration_2w: The duration_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._duration_2w = duration_2w

    @property
    def duration_3m(self):
        """Gets the duration_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею средняя за 3 месяца  # noqa: E501

        :return: The duration_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._duration_3m

    @duration_3m.setter
    def duration_3m(self, duration_3m):
        """Sets the duration_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею средняя за 3 месяца  # noqa: E501

        :param duration_3m: The duration_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._duration_3m = duration_3m

    @property
    def duration_6m(self):
        """Gets the duration_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею средняя за 6 месяцев  # noqa: E501

        :return: The duration_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._duration_6m

    @duration_6m.setter
    def duration_6m(self, duration_6m):
        """Sets the duration_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею средняя за 6 месяцев  # noqa: E501

        :param duration_6m: The duration_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._duration_6m = duration_6m

    @property
    def duration_n(self):
        """Gets the duration_n of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею приведенная  # noqa: E501

        :return: The duration_n of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._duration_n

    @duration_n.setter
    def duration_n(self, duration_n):
        """Sets the duration_n of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею приведенная  # noqa: E501

        :param duration_n: The duration_n of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._duration_n = duration_n

    @property
    def duration_n_12m(self):
        """Gets the duration_n_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею приведенная средняя за 12 месяцев  # noqa: E501

        :return: The duration_n_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._duration_n_12m

    @duration_n_12m.setter
    def duration_n_12m(self, duration_n_12m):
        """Sets the duration_n_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею приведенная средняя за 12 месяцев  # noqa: E501

        :param duration_n_12m: The duration_n_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._duration_n_12m = duration_n_12m

    @property
    def duration_n_1m(self):
        """Gets the duration_n_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею приведенная средняя за 1 месяц  # noqa: E501

        :return: The duration_n_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._duration_n_1m

    @duration_n_1m.setter
    def duration_n_1m(self, duration_n_1m):
        """Sets the duration_n_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею приведенная средняя за 1 месяц  # noqa: E501

        :param duration_n_1m: The duration_n_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._duration_n_1m = duration_n_1m

    @property
    def duration_n_2m(self):
        """Gets the duration_n_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею приведенная средняя за 2 месяца  # noqa: E501

        :return: The duration_n_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._duration_n_2m

    @duration_n_2m.setter
    def duration_n_2m(self, duration_n_2m):
        """Sets the duration_n_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею приведенная средняя за 2 месяца  # noqa: E501

        :param duration_n_2m: The duration_n_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._duration_n_2m = duration_n_2m

    @property
    def duration_n_2w(self):
        """Gets the duration_n_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею приведенная средняя за 2 недели  # noqa: E501

        :return: The duration_n_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._duration_n_2w

    @duration_n_2w.setter
    def duration_n_2w(self, duration_n_2w):
        """Sets the duration_n_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею приведенная средняя за 2 недели  # noqa: E501

        :param duration_n_2w: The duration_n_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._duration_n_2w = duration_n_2w

    @property
    def duration_n_3m(self):
        """Gets the duration_n_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею приведенная средняя за 3 месяца  # noqa: E501

        :return: The duration_n_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._duration_n_3m

    @duration_n_3m.setter
    def duration_n_3m(self, duration_n_3m):
        """Sets the duration_n_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею приведенная средняя за 3 месяца  # noqa: E501

        :param duration_n_3m: The duration_n_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._duration_n_3m = duration_n_3m

    @property
    def duration_n_6m(self):
        """Gets the duration_n_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Дюрация по Маколею приведенная средняя за 6 месяцев  # noqa: E501

        :return: The duration_n_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._duration_n_6m

    @duration_n_6m.setter
    def duration_n_6m(self, duration_n_6m):
        """Sets the duration_n_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Дюрация по Маколею приведенная средняя за 6 месяцев  # noqa: E501

        :param duration_n_6m: The duration_n_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._duration_n_6m = duration_n_6m

    @property
    def id_iss(self):
        """Gets the id_iss of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Идентификатор инструмента  # noqa: E501

        :return: The id_iss of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._id_iss

    @id_iss.setter
    def id_iss(self, id_iss):
        """Sets the id_iss of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Идентификатор инструмента  # noqa: E501

        :param id_iss: The id_iss of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._id_iss = id_iss

    @property
    def id_offer(self):
        """Gets the id_offer of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Номер оферты  # noqa: E501

        :return: The id_offer of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._id_offer

    @id_offer.setter
    def id_offer(self, id_offer):
        """Sets the id_offer of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Номер оферты  # noqa: E501

        :param id_offer: The id_offer of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._id_offer = id_offer

    @property
    def pvbp(self):
        """Gets the pvbp of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Изменение цены при изменении доходности на 1 базисный пункт, руб.  # noqa: E501

        :return: The pvbp of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._pvbp

    @pvbp.setter
    def pvbp(self, pvbp):
        """Sets the pvbp of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Изменение цены при изменении доходности на 1 базисный пункт, руб.  # noqa: E501

        :param pvbp: The pvbp of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._pvbp = pvbp

    @property
    def type(self):
        """Gets the type of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Тип возвращаемых данных:  0 – к погашению  1 – к оферте  2 – сводные  # noqa: E501

        :return: The type of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Тип возвращаемых данных:  0 – к погашению  1 – к оферте  2 – сводные  # noqa: E501

        :param type: The type of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: int
        """

        self._type = type

    @property
    def yield_12m(self):
        """Gets the yield_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность средняя за 12 месяцев  # noqa: E501

        :return: The yield_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_12m

    @yield_12m.setter
    def yield_12m(self, yield_12m):
        """Sets the yield_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность средняя за 12 месяцев  # noqa: E501

        :param yield_12m: The yield_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_12m = yield_12m

    @property
    def yield_1m(self):
        """Gets the yield_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность средняя за 1 месяц  # noqa: E501

        :return: The yield_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_1m

    @yield_1m.setter
    def yield_1m(self, yield_1m):
        """Sets the yield_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность средняя за 1 месяц  # noqa: E501

        :param yield_1m: The yield_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_1m = yield_1m

    @property
    def yield_2m(self):
        """Gets the yield_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность средняя за 2 месяца  # noqa: E501

        :return: The yield_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_2m

    @yield_2m.setter
    def yield_2m(self, yield_2m):
        """Sets the yield_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность средняя за 2 месяца  # noqa: E501

        :param yield_2m: The yield_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_2m = yield_2m

    @property
    def yield_2w(self):
        """Gets the yield_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность средняя за 3 месяца  # noqa: E501

        :return: The yield_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_2w

    @yield_2w.setter
    def yield_2w(self, yield_2w):
        """Sets the yield_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность средняя за 3 месяца  # noqa: E501

        :param yield_2w: The yield_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_2w = yield_2w

    @property
    def yield_3m(self):
        """Gets the yield_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность средняя за 6 месяцев  # noqa: E501

        :return: The yield_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_3m

    @yield_3m.setter
    def yield_3m(self, yield_3m):
        """Sets the yield_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность средняя за 6 месяцев  # noqa: E501

        :param yield_3m: The yield_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_3m = yield_3m

    @property
    def yield_6m(self):
        """Gets the yield_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность средняя за 6 месяцев  # noqa: E501

        :return: The yield_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_6m

    @yield_6m.setter
    def yield_6m(self, yield_6m):
        """Sets the yield_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность средняя за 6 месяцев  # noqa: E501

        :param yield_6m: The yield_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_6m = yield_6m

    @property
    def yield_agg(self):
        """Gets the yield_agg of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность агрегатная  # noqa: E501

        :return: The yield_agg of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_agg

    @yield_agg.setter
    def yield_agg(self, yield_agg):
        """Sets the yield_agg of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность агрегатная  # noqa: E501

        :param yield_agg: The yield_agg of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_agg = yield_agg

    @property
    def yield_agg_12m(self):
        """Gets the yield_agg_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность агрегатная средняя за 12 месяцев  # noqa: E501

        :return: The yield_agg_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_agg_12m

    @yield_agg_12m.setter
    def yield_agg_12m(self, yield_agg_12m):
        """Sets the yield_agg_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность агрегатная средняя за 12 месяцев  # noqa: E501

        :param yield_agg_12m: The yield_agg_12m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_agg_12m = yield_agg_12m

    @property
    def yield_agg_1m(self):
        """Gets the yield_agg_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность агрегатная средняя за 1 месяц  # noqa: E501

        :return: The yield_agg_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_agg_1m

    @yield_agg_1m.setter
    def yield_agg_1m(self, yield_agg_1m):
        """Sets the yield_agg_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность агрегатная средняя за 1 месяц  # noqa: E501

        :param yield_agg_1m: The yield_agg_1m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_agg_1m = yield_agg_1m

    @property
    def yield_agg_2m(self):
        """Gets the yield_agg_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность агрегатная средняя за 2 месяца  # noqa: E501

        :return: The yield_agg_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_agg_2m

    @yield_agg_2m.setter
    def yield_agg_2m(self, yield_agg_2m):
        """Sets the yield_agg_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность агрегатная средняя за 2 месяца  # noqa: E501

        :param yield_agg_2m: The yield_agg_2m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_agg_2m = yield_agg_2m

    @property
    def yield_agg_2w(self):
        """Gets the yield_agg_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность агрегатная средняя за 2 недели  # noqa: E501

        :return: The yield_agg_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_agg_2w

    @yield_agg_2w.setter
    def yield_agg_2w(self, yield_agg_2w):
        """Sets the yield_agg_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность агрегатная средняя за 2 недели  # noqa: E501

        :param yield_agg_2w: The yield_agg_2w of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_agg_2w = yield_agg_2w

    @property
    def yield_agg_3m(self):
        """Gets the yield_agg_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность агрегатная средняя за 3 месяца  # noqa: E501

        :return: The yield_agg_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_agg_3m

    @yield_agg_3m.setter
    def yield_agg_3m(self, yield_agg_3m):
        """Sets the yield_agg_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность агрегатная средняя за 3 месяца  # noqa: E501

        :param yield_agg_3m: The yield_agg_3m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_agg_3m = yield_agg_3m

    @property
    def yield_agg_6m(self):
        """Gets the yield_agg_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность агрегатная средняя за 6 месяцев  # noqa: E501

        :return: The yield_agg_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_agg_6m

    @yield_agg_6m.setter
    def yield_agg_6m(self, yield_agg_6m):
        """Sets the yield_agg_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность агрегатная средняя за 6 месяцев  # noqa: E501

        :param yield_agg_6m: The yield_agg_6m of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_agg_6m = yield_agg_6m

    @property
    def yield_ask(self):
        """Gets the yield_ask of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность по цене продажи  # noqa: E501

        :return: The yield_ask of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_ask

    @yield_ask.setter
    def yield_ask(self, yield_ask):
        """Sets the yield_ask of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность по цене продажи  # noqa: E501

        :param yield_ask: The yield_ask of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_ask = yield_ask

    @property
    def yield_bid(self):
        """Gets the yield_bid of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность по цене покупки  # noqa: E501

        :return: The yield_bid of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_bid

    @yield_bid.setter
    def yield_bid(self, yield_bid):
        """Sets the yield_bid of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность по цене покупки  # noqa: E501

        :param yield_bid: The yield_bid of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_bid = yield_bid

    @property
    def yield_clast(self):
        """Gets the yield_clast of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность по цене последней сделки  # noqa: E501

        :return: The yield_clast of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_clast

    @yield_clast.setter
    def yield_clast(self, yield_clast):
        """Sets the yield_clast of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность по цене последней сделки  # noqa: E501

        :param yield_clast: The yield_clast of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_clast = yield_clast

    @property
    def yield_cwa(self):
        """Gets the yield_cwa of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность текущая по средневзвешенной цене  # noqa: E501

        :return: The yield_cwa of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_cwa

    @yield_cwa.setter
    def yield_cwa(self, yield_cwa):
        """Sets the yield_cwa of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность текущая по средневзвешенной цене  # noqa: E501

        :param yield_cwa: The yield_cwa of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_cwa = yield_cwa

    @property
    def yield_high(self):
        """Gets the yield_high of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность по максимальной цене  # noqa: E501

        :return: The yield_high of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_high

    @yield_high.setter
    def yield_high(self, yield_high):
        """Sets the yield_high of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность по максимальной цене  # noqa: E501

        :param yield_high: The yield_high of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_high = yield_high

    @property
    def yield_last(self):
        """Gets the yield_last of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность по цене последней сделки  # noqa: E501

        :return: The yield_last of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_last

    @yield_last.setter
    def yield_last(self, yield_last):
        """Sets the yield_last of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность по цене последней сделки  # noqa: E501

        :param yield_last: The yield_last of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_last = yield_last

    @property
    def yield_low(self):
        """Gets the yield_low of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность по минимальной цене  # noqa: E501

        :return: The yield_low of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_low

    @yield_low.setter
    def yield_low(self, yield_low):
        """Sets the yield_low of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность по минимальной цене  # noqa: E501

        :param yield_low: The yield_low of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_low = yield_low

    @property
    def yield_mq(self):
        """Gets the yield_mq of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность по средней котировке  # noqa: E501

        :return: The yield_mq of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_mq

    @yield_mq.setter
    def yield_mq(self, yield_mq):
        """Sets the yield_mq of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность по средней котировке  # noqa: E501

        :param yield_mq: The yield_mq of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_mq = yield_mq

    @property
    def yield_open(self):
        """Gets the yield_open of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность по цене открытия  # noqa: E501

        :return: The yield_open of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_open

    @yield_open.setter
    def yield_open(self, yield_open):
        """Sets the yield_open of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность по цене открытия  # noqa: E501

        :param yield_open: The yield_open of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_open = yield_open

    @property
    def yield_slast(self):
        """Gets the yield_slast of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность простая по цене последней сделки  # noqa: E501

        :return: The yield_slast of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_slast

    @yield_slast.setter
    def yield_slast(self, yield_slast):
        """Sets the yield_slast of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность простая по цене последней сделки  # noqa: E501

        :param yield_slast: The yield_slast of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_slast = yield_slast

    @property
    def yield_swa(self):
        """Gets the yield_swa of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность простая по средневзвешенной цене  # noqa: E501

        :return: The yield_swa of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_swa

    @yield_swa.setter
    def yield_swa(self, yield_swa):
        """Sets the yield_swa of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность простая по средневзвешенной цене  # noqa: E501

        :param yield_swa: The yield_swa of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_swa = yield_swa

    @property
    def yield_wa(self):
        """Gets the yield_wa of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501

        Доходность по средневзвешенной цене  # noqa: E501

        :return: The yield_wa of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :rtype: float
        """
        return self._yield_wa

    @yield_wa.setter
    def yield_wa(self, yield_wa):
        """Sets the yield_wa of this EfirDataHubModelsModelsArchiveBondYieldsFields.

        Доходность по средневзвешенной цене  # noqa: E501

        :param yield_wa: The yield_wa of this EfirDataHubModelsModelsArchiveBondYieldsFields.  # noqa: E501
        :type: float
        """

        self._yield_wa = yield_wa

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsArchiveBondYieldsFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsArchiveBondYieldsFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
