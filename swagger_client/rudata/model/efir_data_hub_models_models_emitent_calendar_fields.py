# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsEmitentCalendarFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fininst_id': 'int',
        'name_rus': 'str',
        'fullname_rus': 'str',
        'inn': 'str',
        'ogrn': 'str',
        'okpo': 'str',
        'emitent_calendar_link': 'str',
        'event_date': 'datetime',
        'event_descr': 'str',
        'event_descr_link': 'str',
        'event_descr_type': 'str',
        'update_date': 'datetime',
        'emitent_rusbonds_type': 'str',
        'counter': 'int',
        'rn': 'int'
    }

    attribute_map = {
        'fininst_id': 'fininstId',
        'name_rus': 'name_rus',
        'fullname_rus': 'fullname_rus',
        'inn': 'inn',
        'ogrn': 'ogrn',
        'okpo': 'okpo',
        'emitent_calendar_link': 'emitent_calendar_link',
        'event_date': 'event_date',
        'event_descr': 'event_descr',
        'event_descr_link': 'event_descr_link',
        'event_descr_type': 'event_descr_type',
        'update_date': 'update_date',
        'emitent_rusbonds_type': 'emitent_rusbonds_type',
        'counter': 'counter',
        'rn': 'rn'
    }

    def __init__(self, fininst_id=None, name_rus=None, fullname_rus=None, inn=None, ogrn=None, okpo=None, emitent_calendar_link=None, event_date=None, event_descr=None, event_descr_link=None, event_descr_type=None, update_date=None, emitent_rusbonds_type=None, counter=None, rn=None):  # noqa: E501
        """EfirDataHubModelsModelsEmitentCalendarFields - a model defined in Swagger"""  # noqa: E501
        self._fininst_id = None
        self._name_rus = None
        self._fullname_rus = None
        self._inn = None
        self._ogrn = None
        self._okpo = None
        self._emitent_calendar_link = None
        self._event_date = None
        self._event_descr = None
        self._event_descr_link = None
        self._event_descr_type = None
        self._update_date = None
        self._emitent_rusbonds_type = None
        self._counter = None
        self._rn = None
        self.discriminator = None
        if fininst_id is not None:
            self.fininst_id = fininst_id
        if name_rus is not None:
            self.name_rus = name_rus
        if fullname_rus is not None:
            self.fullname_rus = fullname_rus
        if inn is not None:
            self.inn = inn
        if ogrn is not None:
            self.ogrn = ogrn
        if okpo is not None:
            self.okpo = okpo
        if emitent_calendar_link is not None:
            self.emitent_calendar_link = emitent_calendar_link
        if event_date is not None:
            self.event_date = event_date
        if event_descr is not None:
            self.event_descr = event_descr
        if event_descr_link is not None:
            self.event_descr_link = event_descr_link
        if event_descr_type is not None:
            self.event_descr_type = event_descr_type
        if update_date is not None:
            self.update_date = update_date
        if emitent_rusbonds_type is not None:
            self.emitent_rusbonds_type = emitent_rusbonds_type
        if counter is not None:
            self.counter = counter
        if rn is not None:
            self.rn = rn

    @property
    def fininst_id(self):
        """Gets the fininst_id of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        Идентификатор компании в БД Интерфакс  # noqa: E501

        :return: The fininst_id of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: int
        """
        return self._fininst_id

    @fininst_id.setter
    def fininst_id(self, fininst_id):
        """Sets the fininst_id of this EfirDataHubModelsModelsEmitentCalendarFields.

        Идентификатор компании в БД Интерфакс  # noqa: E501

        :param fininst_id: The fininst_id of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: int
        """

        self._fininst_id = fininst_id

    @property
    def name_rus(self):
        """Gets the name_rus of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        Краткое наименование компании  # noqa: E501

        :return: The name_rus of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: str
        """
        return self._name_rus

    @name_rus.setter
    def name_rus(self, name_rus):
        """Sets the name_rus of this EfirDataHubModelsModelsEmitentCalendarFields.

        Краткое наименование компании  # noqa: E501

        :param name_rus: The name_rus of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: str
        """

        self._name_rus = name_rus

    @property
    def fullname_rus(self):
        """Gets the fullname_rus of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        Полное наименование компании  # noqa: E501

        :return: The fullname_rus of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_rus

    @fullname_rus.setter
    def fullname_rus(self, fullname_rus):
        """Sets the fullname_rus of this EfirDataHubModelsModelsEmitentCalendarFields.

        Полное наименование компании  # noqa: E501

        :param fullname_rus: The fullname_rus of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: str
        """

        self._fullname_rus = fullname_rus

    @property
    def inn(self):
        """Gets the inn of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        ИНН  # noqa: E501

        :return: The inn of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: str
        """
        return self._inn

    @inn.setter
    def inn(self, inn):
        """Sets the inn of this EfirDataHubModelsModelsEmitentCalendarFields.

        ИНН  # noqa: E501

        :param inn: The inn of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: str
        """

        self._inn = inn

    @property
    def ogrn(self):
        """Gets the ogrn of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        ОГРН  # noqa: E501

        :return: The ogrn of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: str
        """
        return self._ogrn

    @ogrn.setter
    def ogrn(self, ogrn):
        """Sets the ogrn of this EfirDataHubModelsModelsEmitentCalendarFields.

        ОГРН  # noqa: E501

        :param ogrn: The ogrn of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: str
        """

        self._ogrn = ogrn

    @property
    def okpo(self):
        """Gets the okpo of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        ОКПО  # noqa: E501

        :return: The okpo of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: str
        """
        return self._okpo

    @okpo.setter
    def okpo(self, okpo):
        """Sets the okpo of this EfirDataHubModelsModelsEmitentCalendarFields.

        ОКПО  # noqa: E501

        :param okpo: The okpo of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: str
        """

        self._okpo = okpo

    @property
    def emitent_calendar_link(self):
        """Gets the emitent_calendar_link of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        Ссылка на календарь эмитента  # noqa: E501

        :return: The emitent_calendar_link of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: str
        """
        return self._emitent_calendar_link

    @emitent_calendar_link.setter
    def emitent_calendar_link(self, emitent_calendar_link):
        """Sets the emitent_calendar_link of this EfirDataHubModelsModelsEmitentCalendarFields.

        Ссылка на календарь эмитента  # noqa: E501

        :param emitent_calendar_link: The emitent_calendar_link of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: str
        """

        self._emitent_calendar_link = emitent_calendar_link

    @property
    def event_date(self):
        """Gets the event_date of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        Дата события  # noqa: E501

        :return: The event_date of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: datetime
        """
        return self._event_date

    @event_date.setter
    def event_date(self, event_date):
        """Sets the event_date of this EfirDataHubModelsModelsEmitentCalendarFields.

        Дата события  # noqa: E501

        :param event_date: The event_date of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: datetime
        """

        self._event_date = event_date

    @property
    def event_descr(self):
        """Gets the event_descr of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        Описание события  # noqa: E501

        :return: The event_descr of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: str
        """
        return self._event_descr

    @event_descr.setter
    def event_descr(self, event_descr):
        """Sets the event_descr of this EfirDataHubModelsModelsEmitentCalendarFields.

        Описание события  # noqa: E501

        :param event_descr: The event_descr of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: str
        """

        self._event_descr = event_descr

    @property
    def event_descr_link(self):
        """Gets the event_descr_link of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        Ссылка на описание события  # noqa: E501

        :return: The event_descr_link of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: str
        """
        return self._event_descr_link

    @event_descr_link.setter
    def event_descr_link(self, event_descr_link):
        """Sets the event_descr_link of this EfirDataHubModelsModelsEmitentCalendarFields.

        Ссылка на описание события  # noqa: E501

        :param event_descr_link: The event_descr_link of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: str
        """

        self._event_descr_link = event_descr_link

    @property
    def event_descr_type(self):
        """Gets the event_descr_type of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        Тип описания  # noqa: E501

        :return: The event_descr_type of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: str
        """
        return self._event_descr_type

    @event_descr_type.setter
    def event_descr_type(self, event_descr_type):
        """Sets the event_descr_type of this EfirDataHubModelsModelsEmitentCalendarFields.

        Тип описания  # noqa: E501

        :param event_descr_type: The event_descr_type of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: str
        """

        self._event_descr_type = event_descr_type

    @property
    def update_date(self):
        """Gets the update_date of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        Дата обновления  # noqa: E501

        :return: The update_date of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: datetime
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this EfirDataHubModelsModelsEmitentCalendarFields.

        Дата обновления  # noqa: E501

        :param update_date: The update_date of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: datetime
        """

        self._update_date = update_date

    @property
    def emitent_rusbonds_type(self):
        """Gets the emitent_rusbonds_type of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        Классификация компании по RusBonds:  - ‘C’ - Корпоративные;  - ‘G’ - Государственные;  - ‘M’ - МСП и Сектор роста.  # noqa: E501

        :return: The emitent_rusbonds_type of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: str
        """
        return self._emitent_rusbonds_type

    @emitent_rusbonds_type.setter
    def emitent_rusbonds_type(self, emitent_rusbonds_type):
        """Sets the emitent_rusbonds_type of this EfirDataHubModelsModelsEmitentCalendarFields.

        Классификация компании по RusBonds:  - ‘C’ - Корпоративные;  - ‘G’ - Государственные;  - ‘M’ - МСП и Сектор роста.  # noqa: E501

        :param emitent_rusbonds_type: The emitent_rusbonds_type of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: str
        """

        self._emitent_rusbonds_type = emitent_rusbonds_type

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        Общее количество записей в выборке  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsEmitentCalendarFields.

        Общее количество записей в выборке  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    @property
    def rn(self):
        """Gets the rn of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501

        Номер записи в выборке  # noqa: E501

        :return: The rn of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :rtype: int
        """
        return self._rn

    @rn.setter
    def rn(self, rn):
        """Sets the rn of this EfirDataHubModelsModelsEmitentCalendarFields.

        Номер записи в выборке  # noqa: E501

        :param rn: The rn of this EfirDataHubModelsModelsEmitentCalendarFields.  # noqa: E501
        :type: int
        """

        self._rn = rn

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsEmitentCalendarFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsEmitentCalendarFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
