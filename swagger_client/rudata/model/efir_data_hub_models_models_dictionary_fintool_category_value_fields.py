# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fintoolid': 'int',
        'isincode': 'str',
        'regcode': 'str',
        'nrdcode': 'str',
        'categories': 'list[EfirDataHubModelsModelsDictionaryCategoryToolFields]',
        'counter': 'int'
    }

    attribute_map = {
        'fintoolid': 'fintoolid',
        'isincode': 'isincode',
        'regcode': 'regcode',
        'nrdcode': 'nrdcode',
        'categories': 'categories',
        'counter': 'counter'
    }

    def __init__(self, fintoolid=None, isincode=None, regcode=None, nrdcode=None, categories=None, counter=None):  # noqa: E501
        """EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields - a model defined in Swagger"""  # noqa: E501
        self._fintoolid = None
        self._isincode = None
        self._regcode = None
        self._nrdcode = None
        self._categories = None
        self._counter = None
        self.discriminator = None
        if fintoolid is not None:
            self.fintoolid = fintoolid
        if isincode is not None:
            self.isincode = isincode
        if regcode is not None:
            self.regcode = regcode
        if nrdcode is not None:
            self.nrdcode = nrdcode
        if categories is not None:
            self.categories = categories
        if counter is not None:
            self.counter = counter

    @property
    def fintoolid(self):
        """Gets the fintoolid of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501

        Идентификатор эмитента в базе Интерфакс  # noqa: E501

        :return: The fintoolid of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501
        :rtype: int
        """
        return self._fintoolid

    @fintoolid.setter
    def fintoolid(self, fintoolid):
        """Sets the fintoolid of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.

        Идентификатор эмитента в базе Интерфакс  # noqa: E501

        :param fintoolid: The fintoolid of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501
        :type: int
        """

        self._fintoolid = fintoolid

    @property
    def isincode(self):
        """Gets the isincode of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501

        ISIN  # noqa: E501

        :return: The isincode of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501
        :rtype: str
        """
        return self._isincode

    @isincode.setter
    def isincode(self, isincode):
        """Sets the isincode of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.

        ISIN  # noqa: E501

        :param isincode: The isincode of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501
        :type: str
        """

        self._isincode = isincode

    @property
    def regcode(self):
        """Gets the regcode of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501

        Регистрационный номер инструмента  # noqa: E501

        :return: The regcode of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501
        :rtype: str
        """
        return self._regcode

    @regcode.setter
    def regcode(self, regcode):
        """Sets the regcode of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.

        Регистрационный номер инструмента  # noqa: E501

        :param regcode: The regcode of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501
        :type: str
        """

        self._regcode = regcode

    @property
    def nrdcode(self):
        """Gets the nrdcode of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501

        Код НРД финансового инструмента  # noqa: E501

        :return: The nrdcode of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501
        :rtype: str
        """
        return self._nrdcode

    @nrdcode.setter
    def nrdcode(self, nrdcode):
        """Sets the nrdcode of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.

        Код НРД финансового инструмента  # noqa: E501

        :param nrdcode: The nrdcode of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501
        :type: str
        """

        self._nrdcode = nrdcode

    @property
    def categories(self):
        """Gets the categories of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501

        Массив категорий компании  # noqa: E501

        :return: The categories of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501
        :rtype: list[EfirDataHubModelsModelsDictionaryCategoryToolFields]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.

        Массив категорий компании  # noqa: E501

        :param categories: The categories of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501
        :type: list[EfirDataHubModelsModelsDictionaryCategoryToolFields]
        """

        self._categories = categories

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501

        Общее количество записей в выборке  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.

        Общее количество записей в выборке  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsDictionaryFintoolCategoryValueFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
