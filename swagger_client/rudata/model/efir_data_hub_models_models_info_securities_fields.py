# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsInfoSecuritiesFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id_fintool': 'int',
        'quatro_id': 'str',
        'shortname_rus': 'str',
        'fullname_rus': 'str',
        'isin': 'str',
        'cfi': 'str',
        'reg_code': 'str',
        'on_quatro': 'int',
        'facevalue': 'float',
        'facevalue_currency': 'str',
        'issue_vol': 'int',
        'coupon_rate': 'str',
        'endmty_date': 'datetime',
        'id_emitent': 'int',
        'fintoolid': 'int',
        'fininstid': 'int',
        'emitent_shortname_rus': 'str',
        'okpo': 'str',
        'inn': 'str',
        'ogrn': 'str',
        'sector': 'str',
        'update_date': 'datetime',
        'fintooltype': 'str',
        'securitytype': 'str',
        'securitykind': 'str',
        'status_name': 'str',
        'coupons_per_year': 'int',
        'borroweruid': 'int',
        'borrowername': 'str',
        'borrowerinn': 'str',
        'borrowersector': 'str',
        'nsd_service': 'str',
        'nrdcode': 'str',
        'id_iss': 'int',
        'listing_level': 'int',
        'reg_date': 'datetime',
        'counter': 'int'
    }

    attribute_map = {
        'id_fintool': 'id_fintool',
        'quatro_id': 'quatro_id',
        'shortname_rus': 'shortname_rus',
        'fullname_rus': 'fullname_rus',
        'isin': 'isin',
        'cfi': 'cfi',
        'reg_code': 'reg_code',
        'on_quatro': 'on_quatro',
        'facevalue': 'facevalue',
        'facevalue_currency': 'facevalue_currency',
        'issue_vol': 'issue_vol',
        'coupon_rate': 'coupon_rate',
        'endmty_date': 'endmty_date',
        'id_emitent': 'id_emitent',
        'fintoolid': 'fintoolid',
        'fininstid': 'fininstid',
        'emitent_shortname_rus': 'emitent_shortname_rus',
        'okpo': 'okpo',
        'inn': 'inn',
        'ogrn': 'ogrn',
        'sector': 'sector',
        'update_date': 'update_date',
        'fintooltype': 'fintooltype',
        'securitytype': 'securitytype',
        'securitykind': 'securitykind',
        'status_name': 'status_name',
        'coupons_per_year': 'coupons_per_year',
        'borroweruid': 'borroweruid',
        'borrowername': 'borrowername',
        'borrowerinn': 'borrowerinn',
        'borrowersector': 'borrowersector',
        'nsd_service': 'nsd_service',
        'nrdcode': 'nrdcode',
        'id_iss': 'id_iss',
        'listing_level': 'listing_level',
        'reg_date': 'reg_date',
        'counter': 'counter'
    }

    def __init__(self, id_fintool=None, quatro_id=None, shortname_rus=None, fullname_rus=None, isin=None, cfi=None, reg_code=None, on_quatro=None, facevalue=None, facevalue_currency=None, issue_vol=None, coupon_rate=None, endmty_date=None, id_emitent=None, fintoolid=None, fininstid=None, emitent_shortname_rus=None, okpo=None, inn=None, ogrn=None, sector=None, update_date=None, fintooltype=None, securitytype=None, securitykind=None, status_name=None, coupons_per_year=None, borroweruid=None, borrowername=None, borrowerinn=None, borrowersector=None, nsd_service=None, nrdcode=None, id_iss=None, listing_level=None, reg_date=None, counter=None):  # noqa: E501
        """EfirDataHubModelsModelsInfoSecuritiesFields - a model defined in Swagger"""  # noqa: E501
        self._id_fintool = None
        self._quatro_id = None
        self._shortname_rus = None
        self._fullname_rus = None
        self._isin = None
        self._cfi = None
        self._reg_code = None
        self._on_quatro = None
        self._facevalue = None
        self._facevalue_currency = None
        self._issue_vol = None
        self._coupon_rate = None
        self._endmty_date = None
        self._id_emitent = None
        self._fintoolid = None
        self._fininstid = None
        self._emitent_shortname_rus = None
        self._okpo = None
        self._inn = None
        self._ogrn = None
        self._sector = None
        self._update_date = None
        self._fintooltype = None
        self._securitytype = None
        self._securitykind = None
        self._status_name = None
        self._coupons_per_year = None
        self._borroweruid = None
        self._borrowername = None
        self._borrowerinn = None
        self._borrowersector = None
        self._nsd_service = None
        self._nrdcode = None
        self._id_iss = None
        self._listing_level = None
        self._reg_date = None
        self._counter = None
        self.discriminator = None
        if id_fintool is not None:
            self.id_fintool = id_fintool
        if quatro_id is not None:
            self.quatro_id = quatro_id
        if shortname_rus is not None:
            self.shortname_rus = shortname_rus
        if fullname_rus is not None:
            self.fullname_rus = fullname_rus
        if isin is not None:
            self.isin = isin
        if cfi is not None:
            self.cfi = cfi
        if reg_code is not None:
            self.reg_code = reg_code
        if on_quatro is not None:
            self.on_quatro = on_quatro
        if facevalue is not None:
            self.facevalue = facevalue
        if facevalue_currency is not None:
            self.facevalue_currency = facevalue_currency
        if issue_vol is not None:
            self.issue_vol = issue_vol
        if coupon_rate is not None:
            self.coupon_rate = coupon_rate
        if endmty_date is not None:
            self.endmty_date = endmty_date
        if id_emitent is not None:
            self.id_emitent = id_emitent
        if fintoolid is not None:
            self.fintoolid = fintoolid
        if fininstid is not None:
            self.fininstid = fininstid
        if emitent_shortname_rus is not None:
            self.emitent_shortname_rus = emitent_shortname_rus
        if okpo is not None:
            self.okpo = okpo
        if inn is not None:
            self.inn = inn
        if ogrn is not None:
            self.ogrn = ogrn
        if sector is not None:
            self.sector = sector
        if update_date is not None:
            self.update_date = update_date
        if fintooltype is not None:
            self.fintooltype = fintooltype
        if securitytype is not None:
            self.securitytype = securitytype
        if securitykind is not None:
            self.securitykind = securitykind
        if status_name is not None:
            self.status_name = status_name
        if coupons_per_year is not None:
            self.coupons_per_year = coupons_per_year
        if borroweruid is not None:
            self.borroweruid = borroweruid
        if borrowername is not None:
            self.borrowername = borrowername
        if borrowerinn is not None:
            self.borrowerinn = borrowerinn
        if borrowersector is not None:
            self.borrowersector = borrowersector
        if nsd_service is not None:
            self.nsd_service = nsd_service
        if nrdcode is not None:
            self.nrdcode = nrdcode
        if id_iss is not None:
            self.id_iss = id_iss
        if listing_level is not None:
            self.listing_level = listing_level
        if reg_date is not None:
            self.reg_date = reg_date
        if counter is not None:
            self.counter = counter

    @property
    def id_fintool(self):
        """Gets the id_fintool of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Идентификатор инструмента, старое имя, рекомендуется использовать fintoolid.  # noqa: E501

        :return: The id_fintool of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: int
        """
        return self._id_fintool

    @id_fintool.setter
    def id_fintool(self, id_fintool):
        """Sets the id_fintool of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Идентификатор инструмента, старое имя, рекомендуется использовать fintoolid.  # noqa: E501

        :param id_fintool: The id_fintool of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: int
        """

        self._id_fintool = id_fintool

    @property
    def quatro_id(self):
        """Gets the quatro_id of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Идентификатор инструмента в системе Quatro  # noqa: E501

        :return: The quatro_id of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._quatro_id

    @quatro_id.setter
    def quatro_id(self, quatro_id):
        """Sets the quatro_id of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Идентификатор инструмента в системе Quatro  # noqa: E501

        :param quatro_id: The quatro_id of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._quatro_id = quatro_id

    @property
    def shortname_rus(self):
        """Gets the shortname_rus of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Краткое наименование инструмента  # noqa: E501

        :return: The shortname_rus of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._shortname_rus

    @shortname_rus.setter
    def shortname_rus(self, shortname_rus):
        """Sets the shortname_rus of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Краткое наименование инструмента  # noqa: E501

        :param shortname_rus: The shortname_rus of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._shortname_rus = shortname_rus

    @property
    def fullname_rus(self):
        """Gets the fullname_rus of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Полное наименование инструмента  # noqa: E501

        :return: The fullname_rus of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_rus

    @fullname_rus.setter
    def fullname_rus(self, fullname_rus):
        """Sets the fullname_rus of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Полное наименование инструмента  # noqa: E501

        :param fullname_rus: The fullname_rus of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._fullname_rus = fullname_rus

    @property
    def isin(self):
        """Gets the isin of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Код ISIN  # noqa: E501

        :return: The isin of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._isin

    @isin.setter
    def isin(self, isin):
        """Sets the isin of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Код ISIN  # noqa: E501

        :param isin: The isin of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._isin = isin

    @property
    def cfi(self):
        """Gets the cfi of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Код CFI  # noqa: E501

        :return: The cfi of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._cfi

    @cfi.setter
    def cfi(self, cfi):
        """Sets the cfi of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Код CFI  # noqa: E501

        :param cfi: The cfi of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._cfi = cfi

    @property
    def reg_code(self):
        """Gets the reg_code of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Регистрационный номер инструмента  # noqa: E501

        :return: The reg_code of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._reg_code

    @reg_code.setter
    def reg_code(self, reg_code):
        """Sets the reg_code of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Регистрационный номер инструмента  # noqa: E501

        :param reg_code: The reg_code of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._reg_code = reg_code

    @property
    def on_quatro(self):
        """Gets the on_quatro of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Торгуется ли в системе Quatro (0/1)  # noqa: E501

        :return: The on_quatro of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: int
        """
        return self._on_quatro

    @on_quatro.setter
    def on_quatro(self, on_quatro):
        """Sets the on_quatro of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Торгуется ли в системе Quatro (0/1)  # noqa: E501

        :param on_quatro: The on_quatro of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: int
        """

        self._on_quatro = on_quatro

    @property
    def facevalue(self):
        """Gets the facevalue of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Номинал  # noqa: E501

        :return: The facevalue of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: float
        """
        return self._facevalue

    @facevalue.setter
    def facevalue(self, facevalue):
        """Sets the facevalue of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Номинал  # noqa: E501

        :param facevalue: The facevalue of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: float
        """

        self._facevalue = facevalue

    @property
    def facevalue_currency(self):
        """Gets the facevalue_currency of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Валюта номинала  # noqa: E501

        :return: The facevalue_currency of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._facevalue_currency

    @facevalue_currency.setter
    def facevalue_currency(self, facevalue_currency):
        """Sets the facevalue_currency of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Валюта номинала  # noqa: E501

        :param facevalue_currency: The facevalue_currency of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._facevalue_currency = facevalue_currency

    @property
    def issue_vol(self):
        """Gets the issue_vol of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Объем выпуска (в штуках)  # noqa: E501

        :return: The issue_vol of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: int
        """
        return self._issue_vol

    @issue_vol.setter
    def issue_vol(self, issue_vol):
        """Sets the issue_vol of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Объем выпуска (в штуках)  # noqa: E501

        :param issue_vol: The issue_vol of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: int
        """

        self._issue_vol = issue_vol

    @property
    def coupon_rate(self):
        """Gets the coupon_rate of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Ставка текущего купона  # noqa: E501

        :return: The coupon_rate of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._coupon_rate

    @coupon_rate.setter
    def coupon_rate(self, coupon_rate):
        """Sets the coupon_rate of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Ставка текущего купона  # noqa: E501

        :param coupon_rate: The coupon_rate of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._coupon_rate = coupon_rate

    @property
    def endmty_date(self):
        """Gets the endmty_date of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Дата погашения выпуска  # noqa: E501

        :return: The endmty_date of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: datetime
        """
        return self._endmty_date

    @endmty_date.setter
    def endmty_date(self, endmty_date):
        """Sets the endmty_date of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Дата погашения выпуска  # noqa: E501

        :param endmty_date: The endmty_date of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: datetime
        """

        self._endmty_date = endmty_date

    @property
    def id_emitent(self):
        """Gets the id_emitent of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Идентификатор эмитента  # noqa: E501

        :return: The id_emitent of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: int
        """
        return self._id_emitent

    @id_emitent.setter
    def id_emitent(self, id_emitent):
        """Sets the id_emitent of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Идентификатор эмитента  # noqa: E501

        :param id_emitent: The id_emitent of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: int
        """

        self._id_emitent = id_emitent

    @property
    def fintoolid(self):
        """Gets the fintoolid of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Идентификатор инструмента  # noqa: E501

        :return: The fintoolid of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: int
        """
        return self._fintoolid

    @fintoolid.setter
    def fintoolid(self, fintoolid):
        """Sets the fintoolid of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Идентификатор инструмента  # noqa: E501

        :param fintoolid: The fintoolid of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: int
        """

        self._fintoolid = fintoolid

    @property
    def fininstid(self):
        """Gets the fininstid of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Идентификатор эмитента выпуска для ценных бумаг либо идентификатор управляющей компании для фондов в базе Интерфакс  # noqa: E501

        :return: The fininstid of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: int
        """
        return self._fininstid

    @fininstid.setter
    def fininstid(self, fininstid):
        """Sets the fininstid of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Идентификатор эмитента выпуска для ценных бумаг либо идентификатор управляющей компании для фондов в базе Интерфакс  # noqa: E501

        :param fininstid: The fininstid of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: int
        """

        self._fininstid = fininstid

    @property
    def emitent_shortname_rus(self):
        """Gets the emitent_shortname_rus of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Наименование эмитента  # noqa: E501

        :return: The emitent_shortname_rus of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._emitent_shortname_rus

    @emitent_shortname_rus.setter
    def emitent_shortname_rus(self, emitent_shortname_rus):
        """Sets the emitent_shortname_rus of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Наименование эмитента  # noqa: E501

        :param emitent_shortname_rus: The emitent_shortname_rus of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._emitent_shortname_rus = emitent_shortname_rus

    @property
    def okpo(self):
        """Gets the okpo of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        ОКПО эмитента  # noqa: E501

        :return: The okpo of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._okpo

    @okpo.setter
    def okpo(self, okpo):
        """Sets the okpo of this EfirDataHubModelsModelsInfoSecuritiesFields.

        ОКПО эмитента  # noqa: E501

        :param okpo: The okpo of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._okpo = okpo

    @property
    def inn(self):
        """Gets the inn of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        ИНН эмитента  # noqa: E501

        :return: The inn of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._inn

    @inn.setter
    def inn(self, inn):
        """Sets the inn of this EfirDataHubModelsModelsInfoSecuritiesFields.

        ИНН эмитента  # noqa: E501

        :param inn: The inn of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._inn = inn

    @property
    def ogrn(self):
        """Gets the ogrn of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        ОГРН эмитента  # noqa: E501

        :return: The ogrn of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._ogrn

    @ogrn.setter
    def ogrn(self, ogrn):
        """Sets the ogrn of this EfirDataHubModelsModelsInfoSecuritiesFields.

        ОГРН эмитента  # noqa: E501

        :param ogrn: The ogrn of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._ogrn = ogrn

    @property
    def sector(self):
        """Gets the sector of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Отрасль эмитента. Список возможных значений возвращает метод EnumValues(‘securities’, ‘sector’).  # noqa: E501

        :return: The sector of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._sector

    @sector.setter
    def sector(self, sector):
        """Sets the sector of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Отрасль эмитента. Список возможных значений возвращает метод EnumValues(‘securities’, ‘sector’).  # noqa: E501

        :param sector: The sector of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._sector = sector

    @property
    def update_date(self):
        """Gets the update_date of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Дата последних изменений информации по инструменту  # noqa: E501

        :return: The update_date of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: datetime
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Дата последних изменений информации по инструменту  # noqa: E501

        :param update_date: The update_date of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: datetime
        """

        self._update_date = update_date

    @property
    def fintooltype(self):
        """Gets the fintooltype of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Тип финансового инструмента (наименование). Список возможных значений возвращает метод EnumValues(‘securities’, ‘fintooltype’).  # noqa: E501

        :return: The fintooltype of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._fintooltype

    @fintooltype.setter
    def fintooltype(self, fintooltype):
        """Sets the fintooltype of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Тип финансового инструмента (наименование). Список возможных значений возвращает метод EnumValues(‘securities’, ‘fintooltype’).  # noqa: E501

        :param fintooltype: The fintooltype of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._fintooltype = fintooltype

    @property
    def securitytype(self):
        """Gets the securitytype of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Тип выпуска/расписки/фонда. Список возможных значений возвращает метод EnumValues(‘securities’, ‘SecurityType’).  # noqa: E501

        :return: The securitytype of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._securitytype

    @securitytype.setter
    def securitytype(self, securitytype):
        """Sets the securitytype of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Тип выпуска/расписки/фонда. Список возможных значений возвращает метод EnumValues(‘securities’, ‘SecurityType’).  # noqa: E501

        :param securitytype: The securitytype of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._securitytype = securitytype

    @property
    def securitykind(self):
        """Gets the securitykind of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Вид выпуска/спонсируемость/тип инвестиций. Список возможных значений возвращает метод EnumValues(‘securities’, ‘SecurityKind’).  # noqa: E501

        :return: The securitykind of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._securitykind

    @securitykind.setter
    def securitykind(self, securitykind):
        """Sets the securitykind of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Вид выпуска/спонсируемость/тип инвестиций. Список возможных значений возвращает метод EnumValues(‘securities’, ‘SecurityKind’).  # noqa: E501

        :param securitykind: The securitykind of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._securitykind = securitykind

    @property
    def status_name(self):
        """Gets the status_name of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Наименование статуса финансового инструмента («В обращении», «Погашен» и т.п.). Список возможных значений возвращает метод EnumValues(‘securities’, ‘Status_name’).  # noqa: E501

        :return: The status_name of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._status_name

    @status_name.setter
    def status_name(self, status_name):
        """Sets the status_name of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Наименование статуса финансового инструмента («В обращении», «Погашен» и т.п.). Список возможных значений возвращает метод EnumValues(‘securities’, ‘Status_name’).  # noqa: E501

        :param status_name: The status_name of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._status_name = status_name

    @property
    def coupons_per_year(self):
        """Gets the coupons_per_year of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Количество купонов в год  # noqa: E501

        :return: The coupons_per_year of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: int
        """
        return self._coupons_per_year

    @coupons_per_year.setter
    def coupons_per_year(self, coupons_per_year):
        """Sets the coupons_per_year of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Количество купонов в год  # noqa: E501

        :param coupons_per_year: The coupons_per_year of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: int
        """

        self._coupons_per_year = coupons_per_year

    @property
    def borroweruid(self):
        """Gets the borroweruid of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        УИН реального заемщика в БД Интерфакс(fininstid); для депо-расписок УИН эмитента представлямой(базовой) ценной бумаги  # noqa: E501

        :return: The borroweruid of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: int
        """
        return self._borroweruid

    @borroweruid.setter
    def borroweruid(self, borroweruid):
        """Sets the borroweruid of this EfirDataHubModelsModelsInfoSecuritiesFields.

        УИН реального заемщика в БД Интерфакс(fininstid); для депо-расписок УИН эмитента представлямой(базовой) ценной бумаги  # noqa: E501

        :param borroweruid: The borroweruid of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: int
        """

        self._borroweruid = borroweruid

    @property
    def borrowername(self):
        """Gets the borrowername of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Название реального заемщика облигаций; для депо-расписок название эмитента представлямой (базовой) ценной бумаги  # noqa: E501

        :return: The borrowername of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._borrowername

    @borrowername.setter
    def borrowername(self, borrowername):
        """Sets the borrowername of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Название реального заемщика облигаций; для депо-расписок название эмитента представлямой (базовой) ценной бумаги  # noqa: E501

        :param borrowername: The borrowername of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._borrowername = borrowername

    @property
    def borrowerinn(self):
        """Gets the borrowerinn of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        ИНН реального заемщика облигаций; для депо-расписок ИНН эмитента представлямой(базовой) ценной бумаги  # noqa: E501

        :return: The borrowerinn of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._borrowerinn

    @borrowerinn.setter
    def borrowerinn(self, borrowerinn):
        """Sets the borrowerinn of this EfirDataHubModelsModelsInfoSecuritiesFields.

        ИНН реального заемщика облигаций; для депо-расписок ИНН эмитента представлямой(базовой) ценной бумаги  # noqa: E501

        :param borrowerinn: The borrowerinn of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._borrowerinn = borrowerinn

    @property
    def borrowersector(self):
        """Gets the borrowersector of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Сектор реального заемщика облигаций; для депо-расписок сектор эмитента представлямой (базовой) ценной бумаги  # noqa: E501

        :return: The borrowersector of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._borrowersector

    @borrowersector.setter
    def borrowersector(self, borrowersector):
        """Sets the borrowersector of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Сектор реального заемщика облигаций; для депо-расписок сектор эмитента представлямой (базовой) ценной бумаги  # noqa: E501

        :param borrowersector: The borrowersector of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._borrowersector = borrowersector

    @property
    def nsd_service(self):
        """Gets the nsd_service of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Обслуживание в НРД. («На обслуживании» и т.п.). Список возможных значений возвращает метод EnumValues(‘securities’, ‘nsd_service’)  # noqa: E501

        :return: The nsd_service of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._nsd_service

    @nsd_service.setter
    def nsd_service(self, nsd_service):
        """Sets the nsd_service of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Обслуживание в НРД. («На обслуживании» и т.п.). Список возможных значений возвращает метод EnumValues(‘securities’, ‘nsd_service’)  # noqa: E501

        :param nsd_service: The nsd_service of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._nsd_service = nsd_service

    @property
    def nrdcode(self):
        """Gets the nrdcode of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Код НРД  # noqa: E501

        :return: The nrdcode of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: str
        """
        return self._nrdcode

    @nrdcode.setter
    def nrdcode(self, nrdcode):
        """Sets the nrdcode of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Код НРД  # noqa: E501

        :param nrdcode: The nrdcode of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: str
        """

        self._nrdcode = nrdcode

    @property
    def id_iss(self):
        """Gets the id_iss of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        ID торгового инструмента в БД Интерфакс  # noqa: E501

        :return: The id_iss of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: int
        """
        return self._id_iss

    @id_iss.setter
    def id_iss(self, id_iss):
        """Sets the id_iss of this EfirDataHubModelsModelsInfoSecuritiesFields.

        ID торгового инструмента в БД Интерфакс  # noqa: E501

        :param id_iss: The id_iss of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: int
        """

        self._id_iss = id_iss

    @property
    def listing_level(self):
        """Gets the listing_level of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Уровень листинга Мосбиржи  # noqa: E501

        :return: The listing_level of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: int
        """
        return self._listing_level

    @listing_level.setter
    def listing_level(self, listing_level):
        """Sets the listing_level of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Уровень листинга Мосбиржи  # noqa: E501

        :param listing_level: The listing_level of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: int
        """

        self._listing_level = listing_level

    @property
    def reg_date(self):
        """Gets the reg_date of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Дата государственной регистрации  # noqa: E501

        :return: The reg_date of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: datetime
        """
        return self._reg_date

    @reg_date.setter
    def reg_date(self, reg_date):
        """Sets the reg_date of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Дата государственной регистрации  # noqa: E501

        :param reg_date: The reg_date of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: datetime
        """

        self._reg_date = reg_date

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501

        Общее количество записей в выборке  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsInfoSecuritiesFields.

        Общее количество записей в выборке  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsInfoSecuritiesFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsInfoSecuritiesFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsInfoSecuritiesFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
