# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsRequestsV2RiskVarDataRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        '_date': 'datetime',
        'alpha': 'float',
        't_var': 'int',
        'fields': 'list[str]',
        'model_id': 'int',
        'cur_risk': 'int',
        'last_known_data': 'bool'
    }

    attribute_map = {
        'id': 'id',
        '_date': 'date',
        'alpha': 'alpha',
        't_var': 't_var',
        'fields': 'fields',
        'model_id': 'modelId',
        'cur_risk': 'curRisk',
        'last_known_data': 'lastKnownData'
    }

    def __init__(self, id=None, _date=None, alpha=None, t_var=None, fields=None, model_id=None, cur_risk=None, last_known_data=None):  # noqa: E501
        """EfirDataHubModelsRequestsV2RiskVarDataRequest - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self.__date = None
        self._alpha = None
        self._t_var = None
        self._fields = None
        self._model_id = None
        self._cur_risk = None
        self._last_known_data = None
        self.discriminator = None
        self.id = id
        if _date is not None:
            self._date = _date
        if alpha is not None:
            self.alpha = alpha
        if t_var is not None:
            self.t_var = t_var
        if fields is not None:
            self.fields = fields
        if model_id is not None:
            self.model_id = model_id
        if cur_risk is not None:
            self.cur_risk = cur_risk
        if last_known_data is not None:
            self.last_known_data = last_known_data

    @property
    def id(self):
        """Gets the id of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501

        (обязательный) Идентификатор инструмента может принимать значения:   ISIN  CUR – трехбуквенный код валюты(ОКВ Alfa-3),   ID_ISS – внутренний идентификатор ЭФИР  # noqa: E501

        :return: The id of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EfirDataHubModelsRequestsV2RiskVarDataRequest.

        (обязательный) Идентификатор инструмента может принимать значения:   ISIN  CUR – трехбуквенный код валюты(ОКВ Alfa-3),   ID_ISS – внутренний идентификатор ЭФИР  # noqa: E501

        :param id: The id of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :type: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def _date(self):
        """Gets the _date of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501

        Дата расчета  # noqa: E501

        :return: The _date of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this EfirDataHubModelsRequestsV2RiskVarDataRequest.

        Дата расчета  # noqa: E501

        :param _date: The _date of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :type: datetime
        """

        self.__date = _date

    @property
    def alpha(self):
        """Gets the alpha of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501

        Доверительный уровень (confidence level) в %  # noqa: E501

        :return: The alpha of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :rtype: float
        """
        return self._alpha

    @alpha.setter
    def alpha(self, alpha):
        """Sets the alpha of this EfirDataHubModelsRequestsV2RiskVarDataRequest.

        Доверительный уровень (confidence level) в %  # noqa: E501

        :param alpha: The alpha of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :type: float
        """

        self._alpha = alpha

    @property
    def t_var(self):
        """Gets the t_var of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501

        Временной горизонт риска в днях. Обычно, 10 дней.  # noqa: E501

        :return: The t_var of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :rtype: int
        """
        return self._t_var

    @t_var.setter
    def t_var(self, t_var):
        """Sets the t_var of this EfirDataHubModelsRequestsV2RiskVarDataRequest.

        Временной горизонт риска в днях. Обычно, 10 дней.  # noqa: E501

        :param t_var: The t_var of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :type: int
        """

        self._t_var = t_var

    @property
    def fields(self):
        """Gets the fields of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501

        Названия и порядок значений (полей), возвращаемых функцией  # noqa: E501

        :return: The fields of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this EfirDataHubModelsRequestsV2RiskVarDataRequest.

        Названия и порядок значений (полей), возвращаемых функцией  # noqa: E501

        :param fields: The fields of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :type: list[str]
        """

        self._fields = fields

    @property
    def model_id(self):
        """Gets the model_id of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501

        Номер расчетной модели.  По-умолчанию, используется активная модель.  # noqa: E501

        :return: The model_id of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :rtype: int
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id):
        """Sets the model_id of this EfirDataHubModelsRequestsV2RiskVarDataRequest.

        Номер расчетной модели.  По-умолчанию, используется активная модель.  # noqa: E501

        :param model_id: The model_id of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :type: int
        """

        self._model_id = model_id

    @property
    def cur_risk(self):
        """Gets the cur_risk of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501

        Признак учета риска в ОВП. Значения 0 или 1.  # noqa: E501

        :return: The cur_risk of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :rtype: int
        """
        return self._cur_risk

    @cur_risk.setter
    def cur_risk(self, cur_risk):
        """Sets the cur_risk of this EfirDataHubModelsRequestsV2RiskVarDataRequest.

        Признак учета риска в ОВП. Значения 0 или 1.  # noqa: E501

        :param cur_risk: The cur_risk of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :type: int
        """

        self._cur_risk = cur_risk

    @property
    def last_known_data(self):
        """Gets the last_known_data of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501

        True - возвращает данные за последний расчитанный день  # noqa: E501

        :return: The last_known_data of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :rtype: bool
        """
        return self._last_known_data

    @last_known_data.setter
    def last_known_data(self, last_known_data):
        """Sets the last_known_data of this EfirDataHubModelsRequestsV2RiskVarDataRequest.

        True - возвращает данные за последний расчитанный день  # noqa: E501

        :param last_known_data: The last_known_data of this EfirDataHubModelsRequestsV2RiskVarDataRequest.  # noqa: E501
        :type: bool
        """

        self._last_known_data = last_known_data

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsRequestsV2RiskVarDataRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsRequestsV2RiskVarDataRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
