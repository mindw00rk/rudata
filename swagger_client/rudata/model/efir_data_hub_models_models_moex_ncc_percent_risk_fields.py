# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsMoexNccPercentRiskFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fintool_id': 'int',
        'dt': 'datetime',
        'range_id': 'int',
        'range_low': 'int',
        'range_high': 'int',
        'rollover_date': 'datetime',
        'low': 'float',
        'high': 'float',
        'calc_repo_rate': 'float',
        'low_percent': 'float',
        'high_percent': 'float',
        'calc_repo_rate_percent': 'float',
        'rate': 'float',
        'rate_disc': 'float',
        'fix_date': 'datetime',
        'assetid2': 'str',
        'discount': 'float',
        'rcl': 'float',
        'rch': 'float',
        'limit': 'float',
        'counter': 'int',
        'rn': 'int'
    }

    attribute_map = {
        'fintool_id': 'fintoolId',
        'dt': 'dt',
        'range_id': 'range_id',
        'range_low': 'range_low',
        'range_high': 'range_high',
        'rollover_date': 'rollover_date',
        'low': 'low',
        'high': 'high',
        'calc_repo_rate': 'calc_repo_rate',
        'low_percent': 'low_percent',
        'high_percent': 'high_percent',
        'calc_repo_rate_percent': 'calc_repo_rate_percent',
        'rate': 'rate',
        'rate_disc': 'rate_disc',
        'fix_date': 'fix_date',
        'assetid2': 'assetid2',
        'discount': 'discount',
        'rcl': 'rcl',
        'rch': 'rch',
        'limit': 'limit',
        'counter': 'counter',
        'rn': 'rn'
    }

    def __init__(self, fintool_id=None, dt=None, range_id=None, range_low=None, range_high=None, rollover_date=None, low=None, high=None, calc_repo_rate=None, low_percent=None, high_percent=None, calc_repo_rate_percent=None, rate=None, rate_disc=None, fix_date=None, assetid2=None, discount=None, rcl=None, rch=None, limit=None, counter=None, rn=None):  # noqa: E501
        """EfirDataHubModelsModelsMoexNccPercentRiskFields - a model defined in Swagger"""  # noqa: E501
        self._fintool_id = None
        self._dt = None
        self._range_id = None
        self._range_low = None
        self._range_high = None
        self._rollover_date = None
        self._low = None
        self._high = None
        self._calc_repo_rate = None
        self._low_percent = None
        self._high_percent = None
        self._calc_repo_rate_percent = None
        self._rate = None
        self._rate_disc = None
        self._fix_date = None
        self._assetid2 = None
        self._discount = None
        self._rcl = None
        self._rch = None
        self._limit = None
        self._counter = None
        self._rn = None
        self.discriminator = None
        if fintool_id is not None:
            self.fintool_id = fintool_id
        if dt is not None:
            self.dt = dt
        if range_id is not None:
            self.range_id = range_id
        if range_low is not None:
            self.range_low = range_low
        if range_high is not None:
            self.range_high = range_high
        if rollover_date is not None:
            self.rollover_date = rollover_date
        if low is not None:
            self.low = low
        if high is not None:
            self.high = high
        if calc_repo_rate is not None:
            self.calc_repo_rate = calc_repo_rate
        if low_percent is not None:
            self.low_percent = low_percent
        if high_percent is not None:
            self.high_percent = high_percent
        if calc_repo_rate_percent is not None:
            self.calc_repo_rate_percent = calc_repo_rate_percent
        if rate is not None:
            self.rate = rate
        if rate_disc is not None:
            self.rate_disc = rate_disc
        if fix_date is not None:
            self.fix_date = fix_date
        if assetid2 is not None:
            self.assetid2 = assetid2
        if discount is not None:
            self.discount = discount
        if rcl is not None:
            self.rcl = rcl
        if rch is not None:
            self.rch = rch
        if limit is not None:
            self.limit = limit
        if counter is not None:
            self.counter = counter
        if rn is not None:
            self.rn = rn

    @property
    def fintool_id(self):
        """Gets the fintool_id of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Идентификатор инструмента  # noqa: E501

        :return: The fintool_id of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: int
        """
        return self._fintool_id

    @fintool_id.setter
    def fintool_id(self, fintool_id):
        """Sets the fintool_id of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Идентификатор инструмента  # noqa: E501

        :param fintool_id: The fintool_id of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: int
        """

        self._fintool_id = fintool_id

    @property
    def dt(self):
        """Gets the dt of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Дата риска  # noqa: E501

        :return: The dt of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: datetime
        """
        return self._dt

    @dt.setter
    def dt(self, dt):
        """Sets the dt of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Дата риска  # noqa: E501

        :param dt: The dt of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: datetime
        """

        self._dt = dt

    @property
    def range_id(self):
        """Gets the range_id of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Номер диапазона  # noqa: E501

        :return: The range_id of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: int
        """
        return self._range_id

    @range_id.setter
    def range_id(self, range_id):
        """Sets the range_id of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Номер диапазона  # noqa: E501

        :param range_id: The range_id of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: int
        """

        self._range_id = range_id

    @property
    def range_low(self):
        """Gets the range_low of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Начало диапазона, шт.  # noqa: E501

        :return: The range_low of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: int
        """
        return self._range_low

    @range_low.setter
    def range_low(self, range_low):
        """Sets the range_low of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Начало диапазона, шт.  # noqa: E501

        :param range_low: The range_low of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: int
        """

        self._range_low = range_low

    @property
    def range_high(self):
        """Gets the range_high of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Конец диапазона, шт.  # noqa: E501

        :return: The range_high of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: int
        """
        return self._range_high

    @range_high.setter
    def range_high(self, range_high):
        """Sets the range_high of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Конец диапазона, шт.  # noqa: E501

        :param range_high: The range_high of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: int
        """

        self._range_high = range_high

    @property
    def rollover_date(self):
        """Gets the rollover_date of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Дата расчетов  # noqa: E501

        :return: The rollover_date of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: datetime
        """
        return self._rollover_date

    @rollover_date.setter
    def rollover_date(self, rollover_date):
        """Sets the rollover_date of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Дата расчетов  # noqa: E501

        :param rollover_date: The rollover_date of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: datetime
        """

        self._rollover_date = rollover_date

    @property
    def low(self):
        """Gets the low of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Нижняя граница, руб.  # noqa: E501

        :return: The low of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: float
        """
        return self._low

    @low.setter
    def low(self, low):
        """Sets the low of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Нижняя граница, руб.  # noqa: E501

        :param low: The low of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: float
        """

        self._low = low

    @property
    def high(self):
        """Gets the high of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Верхняя граница, руб.  # noqa: E501

        :return: The high of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: float
        """
        return self._high

    @high.setter
    def high(self, high):
        """Sets the high of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Верхняя граница, руб.  # noqa: E501

        :param high: The high of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: float
        """

        self._high = high

    @property
    def calc_repo_rate(self):
        """Gets the calc_repo_rate of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Расчетная ставка РЕПО, руб.  # noqa: E501

        :return: The calc_repo_rate of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: float
        """
        return self._calc_repo_rate

    @calc_repo_rate.setter
    def calc_repo_rate(self, calc_repo_rate):
        """Sets the calc_repo_rate of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Расчетная ставка РЕПО, руб.  # noqa: E501

        :param calc_repo_rate: The calc_repo_rate of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: float
        """

        self._calc_repo_rate = calc_repo_rate

    @property
    def low_percent(self):
        """Gets the low_percent of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Нижняя граница, %  # noqa: E501

        :return: The low_percent of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: float
        """
        return self._low_percent

    @low_percent.setter
    def low_percent(self, low_percent):
        """Sets the low_percent of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Нижняя граница, %  # noqa: E501

        :param low_percent: The low_percent of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: float
        """

        self._low_percent = low_percent

    @property
    def high_percent(self):
        """Gets the high_percent of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Верхняя граница, %  # noqa: E501

        :return: The high_percent of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: float
        """
        return self._high_percent

    @high_percent.setter
    def high_percent(self, high_percent):
        """Sets the high_percent of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Верхняя граница, %  # noqa: E501

        :param high_percent: The high_percent of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: float
        """

        self._high_percent = high_percent

    @property
    def calc_repo_rate_percent(self):
        """Gets the calc_repo_rate_percent of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Расчетная ставка РЕПО, %  # noqa: E501

        :return: The calc_repo_rate_percent of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: float
        """
        return self._calc_repo_rate_percent

    @calc_repo_rate_percent.setter
    def calc_repo_rate_percent(self, calc_repo_rate_percent):
        """Sets the calc_repo_rate_percent of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Расчетная ставка РЕПО, %  # noqa: E501

        :param calc_repo_rate_percent: The calc_repo_rate_percent of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: float
        """

        self._calc_repo_rate_percent = calc_repo_rate_percent

    @property
    def rate(self):
        """Gets the rate of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Расчетная цена (с НКД), руб.  # noqa: E501

        :return: The rate of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: float
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Расчетная цена (с НКД), руб.  # noqa: E501

        :param rate: The rate of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: float
        """

        self._rate = rate

    @property
    def rate_disc(self):
        """Gets the rate_disc of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Расчетная цена с учётом дисконта, руб.  # noqa: E501

        :return: The rate_disc of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: float
        """
        return self._rate_disc

    @rate_disc.setter
    def rate_disc(self, rate_disc):
        """Sets the rate_disc of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Расчетная цена с учётом дисконта, руб.  # noqa: E501

        :param rate_disc: The rate_disc of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: float
        """

        self._rate_disc = rate_disc

    @property
    def fix_date(self):
        """Gets the fix_date of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Дата и время фиксации/изменения параметров  # noqa: E501

        :return: The fix_date of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: datetime
        """
        return self._fix_date

    @fix_date.setter
    def fix_date(self, fix_date):
        """Sets the fix_date of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Дата и время фиксации/изменения параметров  # noqa: E501

        :param fix_date: The fix_date of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: datetime
        """

        self._fix_date = fix_date

    @property
    def assetid2(self):
        """Gets the assetid2 of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Актив 2  # noqa: E501

        :return: The assetid2 of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: str
        """
        return self._assetid2

    @assetid2.setter
    def assetid2(self, assetid2):
        """Sets the assetid2 of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Актив 2  # noqa: E501

        :param assetid2: The assetid2 of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: str
        """

        self._assetid2 = assetid2

    @property
    def discount(self):
        """Gets the discount of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Начальное значение ставки процентного риска  # noqa: E501

        :return: The discount of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: float
        """
        return self._discount

    @discount.setter
    def discount(self, discount):
        """Sets the discount of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Начальное значение ставки процентного риска  # noqa: E501

        :param discount: The discount of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: float
        """

        self._discount = discount

    @property
    def rcl(self):
        """Gets the rcl of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Нижняя граница ценового коридора ценной бумаги  # noqa: E501

        :return: The rcl of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: float
        """
        return self._rcl

    @rcl.setter
    def rcl(self, rcl):
        """Sets the rcl of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Нижняя граница ценового коридора ценной бумаги  # noqa: E501

        :param rcl: The rcl of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: float
        """

        self._rcl = rcl

    @property
    def rch(self):
        """Gets the rch of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Верхняя граница ценового коридора ценной бумаги  # noqa: E501

        :return: The rch of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: float
        """
        return self._rch

    @rch.setter
    def rch(self, rch):
        """Sets the rch of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Верхняя граница ценового коридора ценной бумаги  # noqa: E501

        :param rch: The rch of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: float
        """

        self._rch = rch

    @property
    def limit(self):
        """Gets the limit of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Лимит ликвидности нетто-позиции.  # noqa: E501

        :return: The limit of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: float
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Лимит ликвидности нетто-позиции.  # noqa: E501

        :param limit: The limit of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: float
        """

        self._limit = limit

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Общее количество записей в выборке  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Общее количество записей в выборке  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    @property
    def rn(self):
        """Gets the rn of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501

        Номер записи в выборке  # noqa: E501

        :return: The rn of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :rtype: int
        """
        return self._rn

    @rn.setter
    def rn(self, rn):
        """Sets the rn of this EfirDataHubModelsModelsMoexNccPercentRiskFields.

        Номер записи в выборке  # noqa: E501

        :param rn: The rn of this EfirDataHubModelsModelsMoexNccPercentRiskFields.  # noqa: E501
        :type: int
        """

        self._rn = rn

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsMoexNccPercentRiskFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsMoexNccPercentRiskFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
