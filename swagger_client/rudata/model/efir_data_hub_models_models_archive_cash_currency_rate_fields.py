# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsArchiveCashCurrencyRateFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'rates_date': 'datetime',
        'fininstid': 'int',
        'contactid': 'int',
        'bid': 'float',
        'ask': 'float',
        'currency_from': 'str',
        'multiplier_from': 'int',
        'currency_to': 'str'
    }

    attribute_map = {
        'rates_date': 'rates_date',
        'fininstid': 'fininstid',
        'contactid': 'contactid',
        'bid': 'bid',
        'ask': 'ask',
        'currency_from': 'currency_from',
        'multiplier_from': 'multiplier_from',
        'currency_to': 'currency_to'
    }

    def __init__(self, rates_date=None, fininstid=None, contactid=None, bid=None, ask=None, currency_from=None, multiplier_from=None, currency_to=None):  # noqa: E501
        """EfirDataHubModelsModelsArchiveCashCurrencyRateFields - a model defined in Swagger"""  # noqa: E501
        self._rates_date = None
        self._fininstid = None
        self._contactid = None
        self._bid = None
        self._ask = None
        self._currency_from = None
        self._multiplier_from = None
        self._currency_to = None
        self.discriminator = None
        if rates_date is not None:
            self.rates_date = rates_date
        if fininstid is not None:
            self.fininstid = fininstid
        if contactid is not None:
            self.contactid = contactid
        if bid is not None:
            self.bid = bid
        if ask is not None:
            self.ask = ask
        if currency_from is not None:
            self.currency_from = currency_from
        if multiplier_from is not None:
            self.multiplier_from = multiplier_from
        if currency_to is not None:
            self.currency_to = currency_to

    @property
    def rates_date(self):
        """Gets the rates_date of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501

        Дата курса  # noqa: E501

        :return: The rates_date of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :rtype: datetime
        """
        return self._rates_date

    @rates_date.setter
    def rates_date(self, rates_date):
        """Sets the rates_date of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.

        Дата курса  # noqa: E501

        :param rates_date: The rates_date of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :type: datetime
        """

        self._rates_date = rates_date

    @property
    def fininstid(self):
        """Gets the fininstid of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501

        Идентификатор компании (банка) в базе Интерфакс  # noqa: E501

        :return: The fininstid of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :rtype: int
        """
        return self._fininstid

    @fininstid.setter
    def fininstid(self, fininstid):
        """Sets the fininstid of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.

        Идентификатор компании (банка) в базе Интерфакс  # noqa: E501

        :param fininstid: The fininstid of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :type: int
        """

        self._fininstid = fininstid

    @property
    def contactid(self):
        """Gets the contactid of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501

        Идентификатор группы в рамках банка  # noqa: E501

        :return: The contactid of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :rtype: int
        """
        return self._contactid

    @contactid.setter
    def contactid(self, contactid):
        """Sets the contactid of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.

        Идентификатор группы в рамках банка  # noqa: E501

        :param contactid: The contactid of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :type: int
        """

        self._contactid = contactid

    @property
    def bid(self):
        """Gets the bid of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501

        Покупка  # noqa: E501

        :return: The bid of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :rtype: float
        """
        return self._bid

    @bid.setter
    def bid(self, bid):
        """Sets the bid of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.

        Покупка  # noqa: E501

        :param bid: The bid of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :type: float
        """

        self._bid = bid

    @property
    def ask(self):
        """Gets the ask of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501

        Продажа  # noqa: E501

        :return: The ask of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :rtype: float
        """
        return self._ask

    @ask.setter
    def ask(self, ask):
        """Sets the ask of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.

        Продажа  # noqa: E501

        :param ask: The ask of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :type: float
        """

        self._ask = ask

    @property
    def currency_from(self):
        """Gets the currency_from of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501

        Котируемая валюта  # noqa: E501

        :return: The currency_from of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :rtype: str
        """
        return self._currency_from

    @currency_from.setter
    def currency_from(self, currency_from):
        """Sets the currency_from of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.

        Котируемая валюта  # noqa: E501

        :param currency_from: The currency_from of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :type: str
        """

        self._currency_from = currency_from

    @property
    def multiplier_from(self):
        """Gets the multiplier_from of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501

        Лот  # noqa: E501

        :return: The multiplier_from of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :rtype: int
        """
        return self._multiplier_from

    @multiplier_from.setter
    def multiplier_from(self, multiplier_from):
        """Sets the multiplier_from of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.

        Лот  # noqa: E501

        :param multiplier_from: The multiplier_from of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :type: int
        """

        self._multiplier_from = multiplier_from

    @property
    def currency_to(self):
        """Gets the currency_to of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501

        Базовая валюта  # noqa: E501

        :return: The currency_to of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :rtype: str
        """
        return self._currency_to

    @currency_to.setter
    def currency_to(self, currency_to):
        """Sets the currency_to of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.

        Базовая валюта  # noqa: E501

        :param currency_to: The currency_to of this EfirDataHubModelsModelsArchiveCashCurrencyRateFields.  # noqa: E501
        :type: str
        """

        self._currency_to = currency_to

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsArchiveCashCurrencyRateFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsArchiveCashCurrencyRateFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
