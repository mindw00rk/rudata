# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsBondDateOptionsFieldsFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fintool_type': 'str',
        'field_group': 'str',
        'codename': 'str',
        'shortname_rus': 'str',
        'shortname_eng': 'str',
        'fullname_rus': 'str',
        'fullname_eng': 'str'
    }

    attribute_map = {
        'fintool_type': 'fintool_type',
        'field_group': 'field_group',
        'codename': 'codename',
        'shortname_rus': 'shortname_rus',
        'shortname_eng': 'shortname_eng',
        'fullname_rus': 'fullname_rus',
        'fullname_eng': 'fullname_eng'
    }

    def __init__(self, fintool_type=None, field_group=None, codename=None, shortname_rus=None, shortname_eng=None, fullname_rus=None, fullname_eng=None):  # noqa: E501
        """EfirDataHubModelsModelsBondDateOptionsFieldsFields - a model defined in Swagger"""  # noqa: E501
        self._fintool_type = None
        self._field_group = None
        self._codename = None
        self._shortname_rus = None
        self._shortname_eng = None
        self._fullname_rus = None
        self._fullname_eng = None
        self.discriminator = None
        if fintool_type is not None:
            self.fintool_type = fintool_type
        if field_group is not None:
            self.field_group = field_group
        if codename is not None:
            self.codename = codename
        if shortname_rus is not None:
            self.shortname_rus = shortname_rus
        if shortname_eng is not None:
            self.shortname_eng = shortname_eng
        if fullname_rus is not None:
            self.fullname_rus = fullname_rus
        if fullname_eng is not None:
            self.fullname_eng = fullname_eng

    @property
    def fintool_type(self):
        """Gets the fintool_type of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501

        Тип инструмента, к которому относится поле. Значение ‘BOND’.  # noqa: E501

        :return: The fintool_type of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._fintool_type

    @fintool_type.setter
    def fintool_type(self, fintool_type):
        """Sets the fintool_type of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.

        Тип инструмента, к которому относится поле. Значение ‘BOND’.  # noqa: E501

        :param fintool_type: The fintool_type of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :type: str
        """

        self._fintool_type = fintool_type

    @property
    def field_group(self):
        """Gets the field_group of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501

        Идентификатор группы полей  # noqa: E501

        :return: The field_group of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._field_group

    @field_group.setter
    def field_group(self, field_group):
        """Sets the field_group of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.

        Идентификатор группы полей  # noqa: E501

        :param field_group: The field_group of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :type: str
        """

        self._field_group = field_group

    @property
    def codename(self):
        """Gets the codename of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501

        Кодовое наименование поля  # noqa: E501

        :return: The codename of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._codename

    @codename.setter
    def codename(self, codename):
        """Sets the codename of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.

        Кодовое наименование поля  # noqa: E501

        :param codename: The codename of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :type: str
        """

        self._codename = codename

    @property
    def shortname_rus(self):
        """Gets the shortname_rus of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501

        Краткое наименование поля(рус.)  # noqa: E501

        :return: The shortname_rus of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._shortname_rus

    @shortname_rus.setter
    def shortname_rus(self, shortname_rus):
        """Sets the shortname_rus of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.

        Краткое наименование поля(рус.)  # noqa: E501

        :param shortname_rus: The shortname_rus of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :type: str
        """

        self._shortname_rus = shortname_rus

    @property
    def shortname_eng(self):
        """Gets the shortname_eng of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501

        Краткое наименование поля(англ.)  # noqa: E501

        :return: The shortname_eng of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._shortname_eng

    @shortname_eng.setter
    def shortname_eng(self, shortname_eng):
        """Sets the shortname_eng of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.

        Краткое наименование поля(англ.)  # noqa: E501

        :param shortname_eng: The shortname_eng of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :type: str
        """

        self._shortname_eng = shortname_eng

    @property
    def fullname_rus(self):
        """Gets the fullname_rus of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501

        Полное наименование поля(рус.)  # noqa: E501

        :return: The fullname_rus of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_rus

    @fullname_rus.setter
    def fullname_rus(self, fullname_rus):
        """Sets the fullname_rus of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.

        Полное наименование поля(рус.)  # noqa: E501

        :param fullname_rus: The fullname_rus of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :type: str
        """

        self._fullname_rus = fullname_rus

    @property
    def fullname_eng(self):
        """Gets the fullname_eng of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501

        Полное наименование поля(англ.)  # noqa: E501

        :return: The fullname_eng of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_eng

    @fullname_eng.setter
    def fullname_eng(self, fullname_eng):
        """Sets the fullname_eng of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.

        Полное наименование поля(англ.)  # noqa: E501

        :param fullname_eng: The fullname_eng of this EfirDataHubModelsModelsBondDateOptionsFieldsFields.  # noqa: E501
        :type: str
        """

        self._fullname_eng = fullname_eng

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsBondDateOptionsFieldsFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsBondDateOptionsFieldsFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
