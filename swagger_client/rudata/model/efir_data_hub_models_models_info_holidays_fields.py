# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsInfoHolidaysFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'shortname_rus': 'str',
        'fullname_rus': 'str',
        'shortname_eng': 'str',
        'fullname_eng': 'str',
        'date_state_shortname_rus': 'str',
        'date_state_fullname_rus': 'str',
        'id_calendar_type': 'AllOfEfirDataHubModelsModelsInfoHolidaysFieldsIdCalendarType',
        'event_date': 'datetime',
        'country_id': 'int',
        'fininstid': 'int',
        'id_event_type': 'int',
        'update_date': 'datetime'
    }

    attribute_map = {
        'shortname_rus': 'shortname_rus',
        'fullname_rus': 'fullname_rus',
        'shortname_eng': 'shortname_eng',
        'fullname_eng': 'fullname_eng',
        'date_state_shortname_rus': 'date_state_shortname_rus',
        'date_state_fullname_rus': 'date_state_fullname_rus',
        'id_calendar_type': 'id_calendar_type',
        'event_date': 'event_date',
        'country_id': 'country_id',
        'fininstid': 'fininstid',
        'id_event_type': 'id_event_type',
        'update_date': 'update_date'
    }

    def __init__(self, shortname_rus=None, fullname_rus=None, shortname_eng=None, fullname_eng=None, date_state_shortname_rus=None, date_state_fullname_rus=None, id_calendar_type=None, event_date=None, country_id=None, fininstid=None, id_event_type=None, update_date=None):  # noqa: E501
        """EfirDataHubModelsModelsInfoHolidaysFields - a model defined in Swagger"""  # noqa: E501
        self._shortname_rus = None
        self._fullname_rus = None
        self._shortname_eng = None
        self._fullname_eng = None
        self._date_state_shortname_rus = None
        self._date_state_fullname_rus = None
        self._id_calendar_type = None
        self._event_date = None
        self._country_id = None
        self._fininstid = None
        self._id_event_type = None
        self._update_date = None
        self.discriminator = None
        if shortname_rus is not None:
            self.shortname_rus = shortname_rus
        if fullname_rus is not None:
            self.fullname_rus = fullname_rus
        if shortname_eng is not None:
            self.shortname_eng = shortname_eng
        if fullname_eng is not None:
            self.fullname_eng = fullname_eng
        if date_state_shortname_rus is not None:
            self.date_state_shortname_rus = date_state_shortname_rus
        if date_state_fullname_rus is not None:
            self.date_state_fullname_rus = date_state_fullname_rus
        if id_calendar_type is not None:
            self.id_calendar_type = id_calendar_type
        if event_date is not None:
            self.event_date = event_date
        if country_id is not None:
            self.country_id = country_id
        if fininstid is not None:
            self.fininstid = fininstid
        if id_event_type is not None:
            self.id_event_type = id_event_type
        if update_date is not None:
            self.update_date = update_date

    @property
    def shortname_rus(self):
        """Gets the shortname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501

        Краткое наименование события (рус)  # noqa: E501

        :return: The shortname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :rtype: str
        """
        return self._shortname_rus

    @shortname_rus.setter
    def shortname_rus(self, shortname_rus):
        """Sets the shortname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.

        Краткое наименование события (рус)  # noqa: E501

        :param shortname_rus: The shortname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :type: str
        """

        self._shortname_rus = shortname_rus

    @property
    def fullname_rus(self):
        """Gets the fullname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501

        Полное наименование события (рус)  # noqa: E501

        :return: The fullname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_rus

    @fullname_rus.setter
    def fullname_rus(self, fullname_rus):
        """Sets the fullname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.

        Полное наименование события (рус)  # noqa: E501

        :param fullname_rus: The fullname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :type: str
        """

        self._fullname_rus = fullname_rus

    @property
    def shortname_eng(self):
        """Gets the shortname_eng of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501

        Краткое наименование события (англ)  # noqa: E501

        :return: The shortname_eng of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :rtype: str
        """
        return self._shortname_eng

    @shortname_eng.setter
    def shortname_eng(self, shortname_eng):
        """Sets the shortname_eng of this EfirDataHubModelsModelsInfoHolidaysFields.

        Краткое наименование события (англ)  # noqa: E501

        :param shortname_eng: The shortname_eng of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :type: str
        """

        self._shortname_eng = shortname_eng

    @property
    def fullname_eng(self):
        """Gets the fullname_eng of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501

        Полное наименование события (англ)  # noqa: E501

        :return: The fullname_eng of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_eng

    @fullname_eng.setter
    def fullname_eng(self, fullname_eng):
        """Sets the fullname_eng of this EfirDataHubModelsModelsInfoHolidaysFields.

        Полное наименование события (англ)  # noqa: E501

        :param fullname_eng: The fullname_eng of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :type: str
        """

        self._fullname_eng = fullname_eng

    @property
    def date_state_shortname_rus(self):
        """Gets the date_state_shortname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501

        Состояние даты события – краткое наименование (рус)  # noqa: E501

        :return: The date_state_shortname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :rtype: str
        """
        return self._date_state_shortname_rus

    @date_state_shortname_rus.setter
    def date_state_shortname_rus(self, date_state_shortname_rus):
        """Sets the date_state_shortname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.

        Состояние даты события – краткое наименование (рус)  # noqa: E501

        :param date_state_shortname_rus: The date_state_shortname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :type: str
        """

        self._date_state_shortname_rus = date_state_shortname_rus

    @property
    def date_state_fullname_rus(self):
        """Gets the date_state_fullname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501

        Состояние даты события – полное наименование (рус)  # noqa: E501

        :return: The date_state_fullname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :rtype: str
        """
        return self._date_state_fullname_rus

    @date_state_fullname_rus.setter
    def date_state_fullname_rus(self, date_state_fullname_rus):
        """Sets the date_state_fullname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.

        Состояние даты события – полное наименование (рус)  # noqa: E501

        :param date_state_fullname_rus: The date_state_fullname_rus of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :type: str
        """

        self._date_state_fullname_rus = date_state_fullname_rus

    @property
    def id_calendar_type(self):
        """Gets the id_calendar_type of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501

        Идентификатор типа календаря, для которого определена дата события(2-Страновой, 3-Корпоративный)  0 = Unknown  2 = Country  3 = Corporative  # noqa: E501

        :return: The id_calendar_type of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :rtype: AllOfEfirDataHubModelsModelsInfoHolidaysFieldsIdCalendarType
        """
        return self._id_calendar_type

    @id_calendar_type.setter
    def id_calendar_type(self, id_calendar_type):
        """Sets the id_calendar_type of this EfirDataHubModelsModelsInfoHolidaysFields.

        Идентификатор типа календаря, для которого определена дата события(2-Страновой, 3-Корпоративный)  0 = Unknown  2 = Country  3 = Corporative  # noqa: E501

        :param id_calendar_type: The id_calendar_type of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :type: AllOfEfirDataHubModelsModelsInfoHolidaysFieldsIdCalendarType
        """

        self._id_calendar_type = id_calendar_type

    @property
    def event_date(self):
        """Gets the event_date of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501

        Дата события  # noqa: E501

        :return: The event_date of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :rtype: datetime
        """
        return self._event_date

    @event_date.setter
    def event_date(self, event_date):
        """Sets the event_date of this EfirDataHubModelsModelsInfoHolidaysFields.

        Дата события  # noqa: E501

        :param event_date: The event_date of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :type: datetime
        """

        self._event_date = event_date

    @property
    def country_id(self):
        """Gets the country_id of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501

        Идентификатор страны, для которой определено событие  # noqa: E501

        :return: The country_id of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :rtype: int
        """
        return self._country_id

    @country_id.setter
    def country_id(self, country_id):
        """Sets the country_id of this EfirDataHubModelsModelsInfoHolidaysFields.

        Идентификатор страны, для которой определено событие  # noqa: E501

        :param country_id: The country_id of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :type: int
        """

        self._country_id = country_id

    @property
    def fininstid(self):
        """Gets the fininstid of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501

        Идентификатор организации, для которой определено событие  # noqa: E501

        :return: The fininstid of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :rtype: int
        """
        return self._fininstid

    @fininstid.setter
    def fininstid(self, fininstid):
        """Sets the fininstid of this EfirDataHubModelsModelsInfoHolidaysFields.

        Идентификатор организации, для которой определено событие  # noqa: E501

        :param fininstid: The fininstid of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :type: int
        """

        self._fininstid = fininstid

    @property
    def id_event_type(self):
        """Gets the id_event_type of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501

        Идентификатор неторгового дня по справочнику неторговых дней  # noqa: E501

        :return: The id_event_type of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :rtype: int
        """
        return self._id_event_type

    @id_event_type.setter
    def id_event_type(self, id_event_type):
        """Sets the id_event_type of this EfirDataHubModelsModelsInfoHolidaysFields.

        Идентификатор неторгового дня по справочнику неторговых дней  # noqa: E501

        :param id_event_type: The id_event_type of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :type: int
        """

        self._id_event_type = id_event_type

    @property
    def update_date(self):
        """Gets the update_date of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501

        Дата последних изменений информации о неторговом дне  # noqa: E501

        :return: The update_date of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :rtype: datetime
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this EfirDataHubModelsModelsInfoHolidaysFields.

        Дата последних изменений информации о неторговом дне  # noqa: E501

        :param update_date: The update_date of this EfirDataHubModelsModelsInfoHolidaysFields.  # noqa: E501
        :type: datetime
        """

        self._update_date = update_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsInfoHolidaysFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsInfoHolidaysFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
