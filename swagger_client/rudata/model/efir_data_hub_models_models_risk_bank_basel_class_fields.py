# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsRiskBankBaselClassFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fininstid': 'int',
        'dt': 'str',
        'bank_class': 'str',
        'h1_0': 'float',
        'h1_0_min180': 'float',
        'h1_1': 'float',
        'h1_1_min180': 'float',
        'h1_2': 'float',
        'h1_2_min180': 'float',
        'h1_3': 'float',
        'h1_3_min180': 'float',
        'h1_4': 'float',
        'h1_4_min180': 'float',
        'h10_1': 'float',
        'h12': 'float',
        'h15': 'float',
        'h15_1': 'float',
        'h16': 'float',
        'h16_1': 'float',
        'h16_2': 'float',
        'h18': 'float',
        'h2': 'float',
        'h3': 'float',
        'h4': 'float',
        'h6': 'float',
        'h25': 'float',
        'h7': 'float',
        'h1_ck': 'float',
        'h2_ck': 'float',
        'h1_ck_min180': 'float',
        'h2_ck_min180': 'float',
        'h26_27': 'float',
        'h28_29': 'float',
        'h20_0': 'float',
        'h20_1': 'float',
        'h20_2': 'float',
        'h20_4': 'float',
        'h21': 'float',
        'h22': 'float',
        'h23': 'float',
        'type_license': 'int',
        'valid_license': 'int',
        'buffer': 'float',
        'norm_complies': 'bool',
        'norm_complies_buffer': 'bool',
        'norm_complies_180': 'bool',
        'norm_complies_buffer_180': 'bool',
        'reorganization': 'bool',
        'reorganization_cb': 'bool',
        'sys_important': 'bool',
        'update_date': 'datetime',
        'bank_class_no_h6_h25': 'str',
        'norm_complies_180_no_h6_h25': 'bool',
        'continuity_guarantee': 'bool',
        'h3_ck': 'float',
        'h3_ck_min180': 'float',
        'h4_ck': 'float',
        'h4_ck_min180': 'float',
        'h5_ck': 'float',
        'h5_ck_min180': 'float',
        'counter': 'int',
        'rn': 'int'
    }

    attribute_map = {
        'fininstid': 'fininstid',
        'dt': 'dt',
        'bank_class': 'bank_class',
        'h1_0': 'h1_0',
        'h1_0_min180': 'h1_0_min180',
        'h1_1': 'h1_1',
        'h1_1_min180': 'h1_1_min180',
        'h1_2': 'h1_2',
        'h1_2_min180': 'h1_2_min180',
        'h1_3': 'h1_3',
        'h1_3_min180': 'h1_3_min180',
        'h1_4': 'h1_4',
        'h1_4_min180': 'h1_4_min180',
        'h10_1': 'h10_1',
        'h12': 'h12',
        'h15': 'h15',
        'h15_1': 'h15_1',
        'h16': 'h16',
        'h16_1': 'h16_1',
        'h16_2': 'h16_2',
        'h18': 'h18',
        'h2': 'h2',
        'h3': 'h3',
        'h4': 'h4',
        'h6': 'h6',
        'h25': 'h25',
        'h7': 'h7',
        'h1_ck': 'h1_ck',
        'h2_ck': 'h2_ck',
        'h1_ck_min180': 'h1_ck_min180',
        'h2_ck_min180': 'h2_ck_min180',
        'h26_27': 'h26_27',
        'h28_29': 'h28_29',
        'h20_0': 'h20_0',
        'h20_1': 'h20_1',
        'h20_2': 'h20_2',
        'h20_4': 'h20_4',
        'h21': 'h21',
        'h22': 'h22',
        'h23': 'h23',
        'type_license': 'type_license',
        'valid_license': 'valid_license',
        'buffer': 'buffer',
        'norm_complies': 'norm_complies',
        'norm_complies_buffer': 'norm_complies_buffer',
        'norm_complies_180': 'norm_complies_180',
        'norm_complies_buffer_180': 'norm_complies_buffer_180',
        'reorganization': 'reorganization',
        'reorganization_cb': 'reorganization_cb',
        'sys_important': 'sys_important',
        'update_date': 'update_date',
        'bank_class_no_h6_h25': 'bank_class_no_h6_h25',
        'norm_complies_180_no_h6_h25': 'norm_complies_180_no_h6_h25',
        'continuity_guarantee': 'continuity_guarantee',
        'h3_ck': 'h3_ck',
        'h3_ck_min180': 'h3_ck_min180',
        'h4_ck': 'h4_ck',
        'h4_ck_min180': 'h4_ck_min180',
        'h5_ck': 'h5_ck',
        'h5_ck_min180': 'h5_ck_min180',
        'counter': 'counter',
        'rn': 'rn'
    }

    def __init__(self, fininstid=None, dt=None, bank_class=None, h1_0=None, h1_0_min180=None, h1_1=None, h1_1_min180=None, h1_2=None, h1_2_min180=None, h1_3=None, h1_3_min180=None, h1_4=None, h1_4_min180=None, h10_1=None, h12=None, h15=None, h15_1=None, h16=None, h16_1=None, h16_2=None, h18=None, h2=None, h3=None, h4=None, h6=None, h25=None, h7=None, h1_ck=None, h2_ck=None, h1_ck_min180=None, h2_ck_min180=None, h26_27=None, h28_29=None, h20_0=None, h20_1=None, h20_2=None, h20_4=None, h21=None, h22=None, h23=None, type_license=None, valid_license=None, buffer=None, norm_complies=None, norm_complies_buffer=None, norm_complies_180=None, norm_complies_buffer_180=None, reorganization=None, reorganization_cb=None, sys_important=None, update_date=None, bank_class_no_h6_h25=None, norm_complies_180_no_h6_h25=None, continuity_guarantee=None, h3_ck=None, h3_ck_min180=None, h4_ck=None, h4_ck_min180=None, h5_ck=None, h5_ck_min180=None, counter=None, rn=None):  # noqa: E501
        """EfirDataHubModelsModelsRiskBankBaselClassFields - a model defined in Swagger"""  # noqa: E501
        self._fininstid = None
        self._dt = None
        self._bank_class = None
        self._h1_0 = None
        self._h1_0_min180 = None
        self._h1_1 = None
        self._h1_1_min180 = None
        self._h1_2 = None
        self._h1_2_min180 = None
        self._h1_3 = None
        self._h1_3_min180 = None
        self._h1_4 = None
        self._h1_4_min180 = None
        self._h10_1 = None
        self._h12 = None
        self._h15 = None
        self._h15_1 = None
        self._h16 = None
        self._h16_1 = None
        self._h16_2 = None
        self._h18 = None
        self._h2 = None
        self._h3 = None
        self._h4 = None
        self._h6 = None
        self._h25 = None
        self._h7 = None
        self._h1_ck = None
        self._h2_ck = None
        self._h1_ck_min180 = None
        self._h2_ck_min180 = None
        self._h26_27 = None
        self._h28_29 = None
        self._h20_0 = None
        self._h20_1 = None
        self._h20_2 = None
        self._h20_4 = None
        self._h21 = None
        self._h22 = None
        self._h23 = None
        self._type_license = None
        self._valid_license = None
        self._buffer = None
        self._norm_complies = None
        self._norm_complies_buffer = None
        self._norm_complies_180 = None
        self._norm_complies_buffer_180 = None
        self._reorganization = None
        self._reorganization_cb = None
        self._sys_important = None
        self._update_date = None
        self._bank_class_no_h6_h25 = None
        self._norm_complies_180_no_h6_h25 = None
        self._continuity_guarantee = None
        self._h3_ck = None
        self._h3_ck_min180 = None
        self._h4_ck = None
        self._h4_ck_min180 = None
        self._h5_ck = None
        self._h5_ck_min180 = None
        self._counter = None
        self._rn = None
        self.discriminator = None
        if fininstid is not None:
            self.fininstid = fininstid
        if dt is not None:
            self.dt = dt
        if bank_class is not None:
            self.bank_class = bank_class
        if h1_0 is not None:
            self.h1_0 = h1_0
        if h1_0_min180 is not None:
            self.h1_0_min180 = h1_0_min180
        if h1_1 is not None:
            self.h1_1 = h1_1
        if h1_1_min180 is not None:
            self.h1_1_min180 = h1_1_min180
        if h1_2 is not None:
            self.h1_2 = h1_2
        if h1_2_min180 is not None:
            self.h1_2_min180 = h1_2_min180
        if h1_3 is not None:
            self.h1_3 = h1_3
        if h1_3_min180 is not None:
            self.h1_3_min180 = h1_3_min180
        if h1_4 is not None:
            self.h1_4 = h1_4
        if h1_4_min180 is not None:
            self.h1_4_min180 = h1_4_min180
        if h10_1 is not None:
            self.h10_1 = h10_1
        if h12 is not None:
            self.h12 = h12
        if h15 is not None:
            self.h15 = h15
        if h15_1 is not None:
            self.h15_1 = h15_1
        if h16 is not None:
            self.h16 = h16
        if h16_1 is not None:
            self.h16_1 = h16_1
        if h16_2 is not None:
            self.h16_2 = h16_2
        if h18 is not None:
            self.h18 = h18
        if h2 is not None:
            self.h2 = h2
        if h3 is not None:
            self.h3 = h3
        if h4 is not None:
            self.h4 = h4
        if h6 is not None:
            self.h6 = h6
        if h25 is not None:
            self.h25 = h25
        if h7 is not None:
            self.h7 = h7
        if h1_ck is not None:
            self.h1_ck = h1_ck
        if h2_ck is not None:
            self.h2_ck = h2_ck
        if h1_ck_min180 is not None:
            self.h1_ck_min180 = h1_ck_min180
        if h2_ck_min180 is not None:
            self.h2_ck_min180 = h2_ck_min180
        if h26_27 is not None:
            self.h26_27 = h26_27
        if h28_29 is not None:
            self.h28_29 = h28_29
        if h20_0 is not None:
            self.h20_0 = h20_0
        if h20_1 is not None:
            self.h20_1 = h20_1
        if h20_2 is not None:
            self.h20_2 = h20_2
        if h20_4 is not None:
            self.h20_4 = h20_4
        if h21 is not None:
            self.h21 = h21
        if h22 is not None:
            self.h22 = h22
        if h23 is not None:
            self.h23 = h23
        if type_license is not None:
            self.type_license = type_license
        if valid_license is not None:
            self.valid_license = valid_license
        if buffer is not None:
            self.buffer = buffer
        if norm_complies is not None:
            self.norm_complies = norm_complies
        if norm_complies_buffer is not None:
            self.norm_complies_buffer = norm_complies_buffer
        if norm_complies_180 is not None:
            self.norm_complies_180 = norm_complies_180
        if norm_complies_buffer_180 is not None:
            self.norm_complies_buffer_180 = norm_complies_buffer_180
        if reorganization is not None:
            self.reorganization = reorganization
        if reorganization_cb is not None:
            self.reorganization_cb = reorganization_cb
        if sys_important is not None:
            self.sys_important = sys_important
        if update_date is not None:
            self.update_date = update_date
        if bank_class_no_h6_h25 is not None:
            self.bank_class_no_h6_h25 = bank_class_no_h6_h25
        if norm_complies_180_no_h6_h25 is not None:
            self.norm_complies_180_no_h6_h25 = norm_complies_180_no_h6_h25
        if continuity_guarantee is not None:
            self.continuity_guarantee = continuity_guarantee
        if h3_ck is not None:
            self.h3_ck = h3_ck
        if h3_ck_min180 is not None:
            self.h3_ck_min180 = h3_ck_min180
        if h4_ck is not None:
            self.h4_ck = h4_ck
        if h4_ck_min180 is not None:
            self.h4_ck_min180 = h4_ck_min180
        if h5_ck is not None:
            self.h5_ck = h5_ck
        if h5_ck_min180 is not None:
            self.h5_ck_min180 = h5_ck_min180
        if counter is not None:
            self.counter = counter
        if rn is not None:
            self.rn = rn

    @property
    def fininstid(self):
        """Gets the fininstid of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Идентификатор компании (банка) в базе Интерфакс  # noqa: E501

        :return: The fininstid of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: int
        """
        return self._fininstid

    @fininstid.setter
    def fininstid(self, fininstid):
        """Sets the fininstid of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Идентификатор компании (банка) в базе Интерфакс  # noqa: E501

        :param fininstid: The fininstid of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: int
        """

        self._fininstid = fininstid

    @property
    def dt(self):
        """Gets the dt of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Дата актуальности расчета (фактически первое число каждого месяца)  # noqa: E501

        :return: The dt of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: str
        """
        return self._dt

    @dt.setter
    def dt(self, dt):
        """Sets the dt of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Дата актуальности расчета (фактически первое число каждого месяца)  # noqa: E501

        :param dt: The dt of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: str
        """

        self._dt = dt

    @property
    def bank_class(self):
        """Gets the bank_class of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Классификатор по \"Базель 3\". Возможные значения: A*,A,B,C  # noqa: E501

        :return: The bank_class of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: str
        """
        return self._bank_class

    @bank_class.setter
    def bank_class(self, bank_class):
        """Sets the bank_class of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Классификатор по \"Базель 3\". Возможные значения: A*,A,B,C  # noqa: E501

        :param bank_class: The bank_class of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: str
        """

        self._bank_class = bank_class

    @property
    def h1_0(self):
        """Gets the h1_0 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н1.0 (форма 135, раздел 3)  # noqa: E501

        :return: The h1_0 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h1_0

    @h1_0.setter
    def h1_0(self, h1_0):
        """Sets the h1_0 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н1.0 (форма 135, раздел 3)  # noqa: E501

        :param h1_0: The h1_0 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h1_0 = h1_0

    @property
    def h1_0_min180(self):
        """Gets the h1_0_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Минимальное значение норматива Н1.0 для данного FININSTID за отчетные даты, попадающие в 180  календарных дней от последней отчетной даты (включая ее), предшествующей DТ  # noqa: E501

        :return: The h1_0_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h1_0_min180

    @h1_0_min180.setter
    def h1_0_min180(self, h1_0_min180):
        """Sets the h1_0_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Минимальное значение норматива Н1.0 для данного FININSTID за отчетные даты, попадающие в 180  календарных дней от последней отчетной даты (включая ее), предшествующей DТ  # noqa: E501

        :param h1_0_min180: The h1_0_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h1_0_min180 = h1_0_min180

    @property
    def h1_1(self):
        """Gets the h1_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н1.1 (форма 135, раздел 3)  # noqa: E501

        :return: The h1_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h1_1

    @h1_1.setter
    def h1_1(self, h1_1):
        """Sets the h1_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н1.1 (форма 135, раздел 3)  # noqa: E501

        :param h1_1: The h1_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h1_1 = h1_1

    @property
    def h1_1_min180(self):
        """Gets the h1_1_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Минимальное значение норматива Н1.1 для данного FININSTID за отчетные даты, попадающие в 180  календарных дней от последней отчетной даты (включая ее), предшествующей DТ  # noqa: E501

        :return: The h1_1_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h1_1_min180

    @h1_1_min180.setter
    def h1_1_min180(self, h1_1_min180):
        """Sets the h1_1_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Минимальное значение норматива Н1.1 для данного FININSTID за отчетные даты, попадающие в 180  календарных дней от последней отчетной даты (включая ее), предшествующей DТ  # noqa: E501

        :param h1_1_min180: The h1_1_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h1_1_min180 = h1_1_min180

    @property
    def h1_2(self):
        """Gets the h1_2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н1.2 (форма 135, раздел 3)  # noqa: E501

        :return: The h1_2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h1_2

    @h1_2.setter
    def h1_2(self, h1_2):
        """Sets the h1_2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н1.2 (форма 135, раздел 3)  # noqa: E501

        :param h1_2: The h1_2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h1_2 = h1_2

    @property
    def h1_2_min180(self):
        """Gets the h1_2_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Минимальное значение норматива Н1.2 для данного FININSTID за отчетные даты, попадающие в 180  календарных дней от последней отчетной даты (включая ее), предшествующей DТ  # noqa: E501

        :return: The h1_2_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h1_2_min180

    @h1_2_min180.setter
    def h1_2_min180(self, h1_2_min180):
        """Sets the h1_2_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Минимальное значение норматива Н1.2 для данного FININSTID за отчетные даты, попадающие в 180  календарных дней от последней отчетной даты (включая ее), предшествующей DТ  # noqa: E501

        :param h1_2_min180: The h1_2_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h1_2_min180 = h1_2_min180

    @property
    def h1_3(self):
        """Gets the h1_3 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н1.3 (форма 135, раздел 3)  # noqa: E501

        :return: The h1_3 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h1_3

    @h1_3.setter
    def h1_3(self, h1_3):
        """Sets the h1_3 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н1.3 (форма 135, раздел 3)  # noqa: E501

        :param h1_3: The h1_3 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h1_3 = h1_3

    @property
    def h1_3_min180(self):
        """Gets the h1_3_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Минимальное значение норматива Н1.3 для данного FININSTID за отчетные даты, попадающие в 180  календарных дней от последней отчетной даты (включая ее), предшествующей DТ  # noqa: E501

        :return: The h1_3_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h1_3_min180

    @h1_3_min180.setter
    def h1_3_min180(self, h1_3_min180):
        """Sets the h1_3_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Минимальное значение норматива Н1.3 для данного FININSTID за отчетные даты, попадающие в 180  календарных дней от последней отчетной даты (включая ее), предшествующей DТ  # noqa: E501

        :param h1_3_min180: The h1_3_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h1_3_min180 = h1_3_min180

    @property
    def h1_4(self):
        """Gets the h1_4 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н1.4 (форма 135, раздел 3)  # noqa: E501

        :return: The h1_4 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h1_4

    @h1_4.setter
    def h1_4(self, h1_4):
        """Sets the h1_4 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н1.4 (форма 135, раздел 3)  # noqa: E501

        :param h1_4: The h1_4 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h1_4 = h1_4

    @property
    def h1_4_min180(self):
        """Gets the h1_4_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Минимальное значение норматива Н1.4 для данного FININSTID за отчетные даты, попадающие в 180  календарных дней от последней отчетной даты (включая ее), предшествующей DТ  # noqa: E501

        :return: The h1_4_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h1_4_min180

    @h1_4_min180.setter
    def h1_4_min180(self, h1_4_min180):
        """Sets the h1_4_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Минимальное значение норматива Н1.4 для данного FININSTID за отчетные даты, попадающие в 180  календарных дней от последней отчетной даты (включая ее), предшествующей DТ  # noqa: E501

        :param h1_4_min180: The h1_4_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h1_4_min180 = h1_4_min180

    @property
    def h10_1(self):
        """Gets the h10_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н10.1 (форма 135, раздел 3)  # noqa: E501

        :return: The h10_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h10_1

    @h10_1.setter
    def h10_1(self, h10_1):
        """Sets the h10_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н10.1 (форма 135, раздел 3)  # noqa: E501

        :param h10_1: The h10_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h10_1 = h10_1

    @property
    def h12(self):
        """Gets the h12 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н12 (форма 135, раздел 3)  # noqa: E501

        :return: The h12 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h12

    @h12.setter
    def h12(self, h12):
        """Sets the h12 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н12 (форма 135, раздел 3)  # noqa: E501

        :param h12: The h12 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h12 = h12

    @property
    def h15(self):
        """Gets the h15 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н15 (форма 135, раздел 3)  # noqa: E501

        :return: The h15 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h15

    @h15.setter
    def h15(self, h15):
        """Sets the h15 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н15 (форма 135, раздел 3)  # noqa: E501

        :param h15: The h15 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h15 = h15

    @property
    def h15_1(self):
        """Gets the h15_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н15.1 (форма 135, раздел 3)  # noqa: E501

        :return: The h15_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h15_1

    @h15_1.setter
    def h15_1(self, h15_1):
        """Sets the h15_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н15.1 (форма 135, раздел 3)  # noqa: E501

        :param h15_1: The h15_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h15_1 = h15_1

    @property
    def h16(self):
        """Gets the h16 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н16 (форма 135, раздел 3)  # noqa: E501

        :return: The h16 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h16

    @h16.setter
    def h16(self, h16):
        """Sets the h16 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н16 (форма 135, раздел 3)  # noqa: E501

        :param h16: The h16 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h16 = h16

    @property
    def h16_1(self):
        """Gets the h16_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н16.1 (форма 135, раздел 3)  # noqa: E501

        :return: The h16_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h16_1

    @h16_1.setter
    def h16_1(self, h16_1):
        """Sets the h16_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н16.1 (форма 135, раздел 3)  # noqa: E501

        :param h16_1: The h16_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h16_1 = h16_1

    @property
    def h16_2(self):
        """Gets the h16_2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н16.2 (форма 135, раздел 3)  # noqa: E501

        :return: The h16_2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h16_2

    @h16_2.setter
    def h16_2(self, h16_2):
        """Sets the h16_2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н16.2 (форма 135, раздел 3)  # noqa: E501

        :param h16_2: The h16_2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h16_2 = h16_2

    @property
    def h18(self):
        """Gets the h18 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н18 (форма 135, раздел 3)  # noqa: E501

        :return: The h18 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h18

    @h18.setter
    def h18(self, h18):
        """Sets the h18 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н18 (форма 135, раздел 3)  # noqa: E501

        :param h18: The h18 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h18 = h18

    @property
    def h2(self):
        """Gets the h2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н2 (форма 135, раздел 3)  # noqa: E501

        :return: The h2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h2

    @h2.setter
    def h2(self, h2):
        """Sets the h2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н2 (форма 135, раздел 3)  # noqa: E501

        :param h2: The h2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h2 = h2

    @property
    def h3(self):
        """Gets the h3 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н3 (форма 135, раздел 3)  # noqa: E501

        :return: The h3 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h3

    @h3.setter
    def h3(self, h3):
        """Sets the h3 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н3 (форма 135, раздел 3)  # noqa: E501

        :param h3: The h3 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h3 = h3

    @property
    def h4(self):
        """Gets the h4 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н4 (форма 135, раздел 3)  # noqa: E501

        :return: The h4 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h4

    @h4.setter
    def h4(self, h4):
        """Sets the h4 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н4 (форма 135, раздел 3)  # noqa: E501

        :param h4: The h4 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h4 = h4

    @property
    def h6(self):
        """Gets the h6 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н6  # noqa: E501

        :return: The h6 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h6

    @h6.setter
    def h6(self, h6):
        """Sets the h6 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н6  # noqa: E501

        :param h6: The h6 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h6 = h6

    @property
    def h25(self):
        """Gets the h25 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н25  # noqa: E501

        :return: The h25 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h25

    @h25.setter
    def h25(self, h25):
        """Sets the h25 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н25  # noqa: E501

        :param h25: The h25 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h25 = h25

    @property
    def h7(self):
        """Gets the h7 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н7 (форма 135, раздел 3)  # noqa: E501

        :return: The h7 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h7

    @h7.setter
    def h7(self, h7):
        """Sets the h7 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н7 (форма 135, раздел 3)  # noqa: E501

        :param h7: The h7 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h7 = h7

    @property
    def h1_ck(self):
        """Gets the h1_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н1 для центрального контрагента (форма 135, раздел 3)  # noqa: E501

        :return: The h1_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h1_ck

    @h1_ck.setter
    def h1_ck(self, h1_ck):
        """Sets the h1_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н1 для центрального контрагента (форма 135, раздел 3)  # noqa: E501

        :param h1_ck: The h1_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h1_ck = h1_ck

    @property
    def h2_ck(self):
        """Gets the h2_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н2 для центрального контрагента (форма 135, раздел 3)  # noqa: E501

        :return: The h2_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h2_ck

    @h2_ck.setter
    def h2_ck(self, h2_ck):
        """Sets the h2_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н2 для центрального контрагента (форма 135, раздел 3)  # noqa: E501

        :param h2_ck: The h2_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h2_ck = h2_ck

    @property
    def h1_ck_min180(self):
        """Gets the h1_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Минимальное значение норматива Н1 для центрального контрагента за 180 календарных дней, предшествующих DT  # noqa: E501

        :return: The h1_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h1_ck_min180

    @h1_ck_min180.setter
    def h1_ck_min180(self, h1_ck_min180):
        """Sets the h1_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Минимальное значение норматива Н1 для центрального контрагента за 180 календарных дней, предшествующих DT  # noqa: E501

        :param h1_ck_min180: The h1_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h1_ck_min180 = h1_ck_min180

    @property
    def h2_ck_min180(self):
        """Gets the h2_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Минимальное значение норматива Н2 для центрального контрагента за 180 календарных дней, предшествующих DT  # noqa: E501

        :return: The h2_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h2_ck_min180

    @h2_ck_min180.setter
    def h2_ck_min180(self, h2_ck_min180):
        """Sets the h2_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Минимальное значение норматива Н2 для центрального контрагента за 180 календарных дней, предшествующих DT  # noqa: E501

        :param h2_ck_min180: The h2_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h2_ck_min180 = h2_ck_min180

    @property
    def h26_27(self):
        """Gets the h26_27 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н26(27)  # noqa: E501

        :return: The h26_27 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h26_27

    @h26_27.setter
    def h26_27(self, h26_27):
        """Sets the h26_27 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н26(27)  # noqa: E501

        :param h26_27: The h26_27 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h26_27 = h26_27

    @property
    def h28_29(self):
        """Gets the h28_29 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н28(29)  # noqa: E501

        :return: The h28_29 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h28_29

    @h28_29.setter
    def h28_29(self, h28_29):
        """Sets the h28_29 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н28(29)  # noqa: E501

        :param h28_29: The h28_29 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h28_29 = h28_29

    @property
    def h20_0(self):
        """Gets the h20_0 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н20.0  # noqa: E501

        :return: The h20_0 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h20_0

    @h20_0.setter
    def h20_0(self, h20_0):
        """Sets the h20_0 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н20.0  # noqa: E501

        :param h20_0: The h20_0 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h20_0 = h20_0

    @property
    def h20_1(self):
        """Gets the h20_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н20.1  # noqa: E501

        :return: The h20_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h20_1

    @h20_1.setter
    def h20_1(self, h20_1):
        """Sets the h20_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н20.1  # noqa: E501

        :param h20_1: The h20_1 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h20_1 = h20_1

    @property
    def h20_2(self):
        """Gets the h20_2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н20.2  # noqa: E501

        :return: The h20_2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h20_2

    @h20_2.setter
    def h20_2(self, h20_2):
        """Sets the h20_2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н20.2  # noqa: E501

        :param h20_2: The h20_2 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h20_2 = h20_2

    @property
    def h20_4(self):
        """Gets the h20_4 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н20.4  # noqa: E501

        :return: The h20_4 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h20_4

    @h20_4.setter
    def h20_4(self, h20_4):
        """Sets the h20_4 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н20.4  # noqa: E501

        :param h20_4: The h20_4 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h20_4 = h20_4

    @property
    def h21(self):
        """Gets the h21 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н21  # noqa: E501

        :return: The h21 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h21

    @h21.setter
    def h21(self, h21):
        """Sets the h21 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н21  # noqa: E501

        :param h21: The h21 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h21 = h21

    @property
    def h22(self):
        """Gets the h22 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н22  # noqa: E501

        :return: The h22 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h22

    @h22.setter
    def h22(self, h22):
        """Sets the h22 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н22  # noqa: E501

        :param h22: The h22 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h22 = h22

    @property
    def h23(self):
        """Gets the h23 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н23  # noqa: E501

        :return: The h23 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h23

    @h23.setter
    def h23(self, h23):
        """Sets the h23 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н23  # noqa: E501

        :param h23: The h23 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h23 = h23

    @property
    def type_license(self):
        """Gets the type_license of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Тип лицензии :  - 152 - Банк с универсальной лицензией  - 153 - Банк с базовой лицензией  - 154 - Расчетная НКО  - 155 - Платежная НКО  - 156 - НКО ЦК  # noqa: E501

        :return: The type_license of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: int
        """
        return self._type_license

    @type_license.setter
    def type_license(self, type_license):
        """Sets the type_license of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Тип лицензии :  - 152 - Банк с универсальной лицензией  - 153 - Банк с базовой лицензией  - 154 - Расчетная НКО  - 155 - Платежная НКО  - 156 - НКО ЦК  # noqa: E501

        :param type_license: The type_license of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: int
        """

        self._type_license = type_license

    @property
    def valid_license(self):
        """Gets the valid_license of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Наличие действующей лицензии на дату DT  # noqa: E501

        :return: The valid_license of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: int
        """
        return self._valid_license

    @valid_license.setter
    def valid_license(self, valid_license):
        """Sets the valid_license of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Наличие действующей лицензии на дату DT  # noqa: E501

        :param valid_license: The valid_license of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: int
        """

        self._valid_license = valid_license

    @property
    def buffer(self):
        """Gets the buffer of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Значение \"Итого\" (форма 135, раздел 71) на предшествующую квартальную дату. Если значение отсутствует, то 0.  # noqa: E501

        :return: The buffer of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._buffer

    @buffer.setter
    def buffer(self, buffer):
        """Sets the buffer of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Значение \"Итого\" (форма 135, раздел 71) на предшествующую квартальную дату. Если значение отсутствует, то 0.  # noqa: E501

        :param buffer: The buffer of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._buffer = buffer

    @property
    def norm_complies(self):
        """Gets the norm_complies of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        True, если все нормативы удовлетворяют требованиям инструкции.  # noqa: E501

        :return: The norm_complies of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: bool
        """
        return self._norm_complies

    @norm_complies.setter
    def norm_complies(self, norm_complies):
        """Sets the norm_complies of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        True, если все нормативы удовлетворяют требованиям инструкции.  # noqa: E501

        :param norm_complies: The norm_complies of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: bool
        """

        self._norm_complies = norm_complies

    @property
    def norm_complies_buffer(self):
        """Gets the norm_complies_buffer of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        True, если NORM_COMPLIES=True и значения нормативов Н1.0, Н1.1, Н1.2, Н1.3 удовлетворяют требованиям инструкции.  # noqa: E501

        :return: The norm_complies_buffer of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: bool
        """
        return self._norm_complies_buffer

    @norm_complies_buffer.setter
    def norm_complies_buffer(self, norm_complies_buffer):
        """Sets the norm_complies_buffer of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        True, если NORM_COMPLIES=True и значения нормативов Н1.0, Н1.1, Н1.2, Н1.3 удовлетворяют требованиям инструкции.  # noqa: E501

        :param norm_complies_buffer: The norm_complies_buffer of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: bool
        """

        self._norm_complies_buffer = norm_complies_buffer

    @property
    def norm_complies_180(self):
        """Gets the norm_complies_180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        True, если NORM_COMPLIES=True на все отчетные даты, попадающие в 180 календарных дней от последней отчетной даты (включая ее), предшествующей DТ.  # noqa: E501

        :return: The norm_complies_180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: bool
        """
        return self._norm_complies_180

    @norm_complies_180.setter
    def norm_complies_180(self, norm_complies_180):
        """Sets the norm_complies_180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        True, если NORM_COMPLIES=True на все отчетные даты, попадающие в 180 календарных дней от последней отчетной даты (включая ее), предшествующей DТ.  # noqa: E501

        :param norm_complies_180: The norm_complies_180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: bool
        """

        self._norm_complies_180 = norm_complies_180

    @property
    def norm_complies_buffer_180(self):
        """Gets the norm_complies_buffer_180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        True, если NORM_COMPLIES_BUFFER=True на все отчетные даты, попадающие в 180 дней, предшествующих DT.  # noqa: E501

        :return: The norm_complies_buffer_180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: bool
        """
        return self._norm_complies_buffer_180

    @norm_complies_buffer_180.setter
    def norm_complies_buffer_180(self, norm_complies_buffer_180):
        """Sets the norm_complies_buffer_180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        True, если NORM_COMPLIES_BUFFER=True на все отчетные даты, попадающие в 180 дней, предшествующих DT.  # noqa: E501

        :param norm_complies_buffer_180: The norm_complies_buffer_180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: bool
        """

        self._norm_complies_buffer_180 = norm_complies_buffer_180

    @property
    def reorganization(self):
        """Gets the reorganization of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        True, если на дату DT организация находится в списке санируемых.  # noqa: E501

        :return: The reorganization of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: bool
        """
        return self._reorganization

    @reorganization.setter
    def reorganization(self, reorganization):
        """Sets the reorganization of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        True, если на дату DT организация находится в списке санируемых.  # noqa: E501

        :param reorganization: The reorganization of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: bool
        """

        self._reorganization = reorganization

    @property
    def reorganization_cb(self):
        """Gets the reorganization_cb of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        True, если на дату DT организация находится в списке санируемых с участием Банка России.  # noqa: E501

        :return: The reorganization_cb of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: bool
        """
        return self._reorganization_cb

    @reorganization_cb.setter
    def reorganization_cb(self, reorganization_cb):
        """Sets the reorganization_cb of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        True, если на дату DT организация находится в списке санируемых с участием Банка России.  # noqa: E501

        :param reorganization_cb: The reorganization_cb of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: bool
        """

        self._reorganization_cb = reorganization_cb

    @property
    def sys_important(self):
        """Gets the sys_important of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        True, если на дату DT организация находится в списке системно значимых кредитных организаций  # noqa: E501

        :return: The sys_important of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: bool
        """
        return self._sys_important

    @sys_important.setter
    def sys_important(self, sys_important):
        """Sets the sys_important of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        True, если на дату DT организация находится в списке системно значимых кредитных организаций  # noqa: E501

        :param sys_important: The sys_important of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: bool
        """

        self._sys_important = sys_important

    @property
    def update_date(self):
        """Gets the update_date of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Дата обновления данных  # noqa: E501

        :return: The update_date of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: datetime
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Дата обновления данных  # noqa: E501

        :param update_date: The update_date of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: datetime
        """

        self._update_date = update_date

    @property
    def bank_class_no_h6_h25(self):
        """Gets the bank_class_no_h6_h25 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Классификатор по \"Базель 3\" при условии невыполнения нормативов Н6 и Н25  # noqa: E501

        :return: The bank_class_no_h6_h25 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: str
        """
        return self._bank_class_no_h6_h25

    @bank_class_no_h6_h25.setter
    def bank_class_no_h6_h25(self, bank_class_no_h6_h25):
        """Sets the bank_class_no_h6_h25 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Классификатор по \"Базель 3\" при условии невыполнения нормативов Н6 и Н25  # noqa: E501

        :param bank_class_no_h6_h25: The bank_class_no_h6_h25 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: str
        """

        self._bank_class_no_h6_h25 = bank_class_no_h6_h25

    @property
    def norm_complies_180_no_h6_h25(self):
        """Gets the norm_complies_180_no_h6_h25 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Значение параметра norm_complies_180 при условии невыполнения нормативов Н6 и Н25  # noqa: E501

        :return: The norm_complies_180_no_h6_h25 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: bool
        """
        return self._norm_complies_180_no_h6_h25

    @norm_complies_180_no_h6_h25.setter
    def norm_complies_180_no_h6_h25(self, norm_complies_180_no_h6_h25):
        """Sets the norm_complies_180_no_h6_h25 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Значение параметра norm_complies_180 при условии невыполнения нормативов Н6 и Н25  # noqa: E501

        :param norm_complies_180_no_h6_h25: The norm_complies_180_no_h6_h25 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: bool
        """

        self._norm_complies_180_no_h6_h25 = norm_complies_180_no_h6_h25

    @property
    def continuity_guarantee(self):
        """Gets the continuity_guarantee of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        True, если на дату DT непрерывность деятельности банка гарантирована ЦБ  # noqa: E501

        :return: The continuity_guarantee of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: bool
        """
        return self._continuity_guarantee

    @continuity_guarantee.setter
    def continuity_guarantee(self, continuity_guarantee):
        """Sets the continuity_guarantee of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        True, если на дату DT непрерывность деятельности банка гарантирована ЦБ  # noqa: E501

        :param continuity_guarantee: The continuity_guarantee of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: bool
        """

        self._continuity_guarantee = continuity_guarantee

    @property
    def h3_ck(self):
        """Gets the h3_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н3 для центрального контрагента (форма 135, раздел 3)  # noqa: E501

        :return: The h3_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h3_ck

    @h3_ck.setter
    def h3_ck(self, h3_ck):
        """Sets the h3_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н3 для центрального контрагента (форма 135, раздел 3)  # noqa: E501

        :param h3_ck: The h3_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h3_ck = h3_ck

    @property
    def h3_ck_min180(self):
        """Gets the h3_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Минимальное значение норматива Н3 для центрального контрагента за 180 календарных дней, предшествующих DT  # noqa: E501

        :return: The h3_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h3_ck_min180

    @h3_ck_min180.setter
    def h3_ck_min180(self, h3_ck_min180):
        """Sets the h3_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Минимальное значение норматива Н3 для центрального контрагента за 180 календарных дней, предшествующих DT  # noqa: E501

        :param h3_ck_min180: The h3_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h3_ck_min180 = h3_ck_min180

    @property
    def h4_ck(self):
        """Gets the h4_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н4 для центрального контрагента (форма 135, раздел 3)  # noqa: E501

        :return: The h4_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h4_ck

    @h4_ck.setter
    def h4_ck(self, h4_ck):
        """Sets the h4_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н4 для центрального контрагента (форма 135, раздел 3)  # noqa: E501

        :param h4_ck: The h4_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h4_ck = h4_ck

    @property
    def h4_ck_min180(self):
        """Gets the h4_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Минимальное значение норматива Н4 для центрального контрагента за 180 календарных дней, предшествующих DT  # noqa: E501

        :return: The h4_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h4_ck_min180

    @h4_ck_min180.setter
    def h4_ck_min180(self, h4_ck_min180):
        """Sets the h4_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Минимальное значение норматива Н4 для центрального контрагента за 180 календарных дней, предшествующих DT  # noqa: E501

        :param h4_ck_min180: The h4_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h4_ck_min180 = h4_ck_min180

    @property
    def h5_ck(self):
        """Gets the h5_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Норматив Н5 для центрального контрагента (форма 135, раздел 3)  # noqa: E501

        :return: The h5_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h5_ck

    @h5_ck.setter
    def h5_ck(self, h5_ck):
        """Sets the h5_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Норматив Н5 для центрального контрагента (форма 135, раздел 3)  # noqa: E501

        :param h5_ck: The h5_ck of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h5_ck = h5_ck

    @property
    def h5_ck_min180(self):
        """Gets the h5_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Минимальное значение норматива Н5 для центрального контрагента за 180 календарных дней, предшествующих DT  # noqa: E501

        :return: The h5_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: float
        """
        return self._h5_ck_min180

    @h5_ck_min180.setter
    def h5_ck_min180(self, h5_ck_min180):
        """Sets the h5_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Минимальное значение норматива Н5 для центрального контрагента за 180 календарных дней, предшествующих DT  # noqa: E501

        :param h5_ck_min180: The h5_ck_min180 of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: float
        """

        self._h5_ck_min180 = h5_ck_min180

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Общее количество записей в выборке  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Общее количество записей в выборке  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    @property
    def rn(self):
        """Gets the rn of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501

        Номер записи в выборке  # noqa: E501

        :return: The rn of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :rtype: int
        """
        return self._rn

    @rn.setter
    def rn(self, rn):
        """Sets the rn of this EfirDataHubModelsModelsRiskBankBaselClassFields.

        Номер записи в выборке  # noqa: E501

        :param rn: The rn of this EfirDataHubModelsModelsRiskBankBaselClassFields.  # noqa: E501
        :type: int
        """

        self._rn = rn

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsRiskBankBaselClassFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsRiskBankBaselClassFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
