# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsRatingScaleValueFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'scale_id': 'int',
        'rating_value': 'str',
        'rating_level': 'int',
        'fullname_rus': 'str',
        'description': 'str',
        'aggregation_type': 'str',
        'aggregation_level': 'int'
    }

    attribute_map = {
        'id': 'id',
        'scale_id': 'scale_id',
        'rating_value': 'rating_value',
        'rating_level': 'rating_level',
        'fullname_rus': 'fullname_rus',
        'description': 'description',
        'aggregation_type': 'aggregation_type',
        'aggregation_level': 'aggregation_level'
    }

    def __init__(self, id=None, scale_id=None, rating_value=None, rating_level=None, fullname_rus=None, description=None, aggregation_type=None, aggregation_level=None):  # noqa: E501
        """EfirDataHubModelsModelsRatingScaleValueFields - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._scale_id = None
        self._rating_value = None
        self._rating_level = None
        self._fullname_rus = None
        self._description = None
        self._aggregation_type = None
        self._aggregation_level = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if scale_id is not None:
            self.scale_id = scale_id
        if rating_value is not None:
            self.rating_value = rating_value
        if rating_level is not None:
            self.rating_level = rating_level
        if fullname_rus is not None:
            self.fullname_rus = fullname_rus
        if description is not None:
            self.description = description
        if aggregation_type is not None:
            self.aggregation_type = aggregation_type
        if aggregation_level is not None:
            self.aggregation_level = aggregation_level

    @property
    def id(self):
        """Gets the id of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501

        Идентификатор значения  # noqa: E501

        :return: The id of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EfirDataHubModelsModelsRatingScaleValueFields.

        Идентификатор значения  # noqa: E501

        :param id: The id of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def scale_id(self):
        """Gets the scale_id of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501

        Идентификатор шкалы  # noqa: E501

        :return: The scale_id of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :rtype: int
        """
        return self._scale_id

    @scale_id.setter
    def scale_id(self, scale_id):
        """Sets the scale_id of this EfirDataHubModelsModelsRatingScaleValueFields.

        Идентификатор шкалы  # noqa: E501

        :param scale_id: The scale_id of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :type: int
        """

        self._scale_id = scale_id

    @property
    def rating_value(self):
        """Gets the rating_value of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501

        Значение рейтинга  # noqa: E501

        :return: The rating_value of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :rtype: str
        """
        return self._rating_value

    @rating_value.setter
    def rating_value(self, rating_value):
        """Sets the rating_value of this EfirDataHubModelsModelsRatingScaleValueFields.

        Значение рейтинга  # noqa: E501

        :param rating_value: The rating_value of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :type: str
        """

        self._rating_value = rating_value

    @property
    def rating_level(self):
        """Gets the rating_level of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501

        Уровень значения  # noqa: E501

        :return: The rating_level of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :rtype: int
        """
        return self._rating_level

    @rating_level.setter
    def rating_level(self, rating_level):
        """Sets the rating_level of this EfirDataHubModelsModelsRatingScaleValueFields.

        Уровень значения  # noqa: E501

        :param rating_level: The rating_level of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :type: int
        """

        self._rating_level = rating_level

    @property
    def fullname_rus(self):
        """Gets the fullname_rus of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501

        Наименование на русском  # noqa: E501

        :return: The fullname_rus of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_rus

    @fullname_rus.setter
    def fullname_rus(self, fullname_rus):
        """Sets the fullname_rus of this EfirDataHubModelsModelsRatingScaleValueFields.

        Наименование на русском  # noqa: E501

        :param fullname_rus: The fullname_rus of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :type: str
        """

        self._fullname_rus = fullname_rus

    @property
    def description(self):
        """Gets the description of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501

        Описание значения рейтинга  # noqa: E501

        :return: The description of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this EfirDataHubModelsModelsRatingScaleValueFields.

        Описание значения рейтинга  # noqa: E501

        :param description: The description of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def aggregation_type(self):
        """Gets the aggregation_type of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501

        Тип агрегации ('RU' или 'BIG3')  # noqa: E501

        :return: The aggregation_type of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :rtype: str
        """
        return self._aggregation_type

    @aggregation_type.setter
    def aggregation_type(self, aggregation_type):
        """Sets the aggregation_type of this EfirDataHubModelsModelsRatingScaleValueFields.

        Тип агрегации ('RU' или 'BIG3')  # noqa: E501

        :param aggregation_type: The aggregation_type of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :type: str
        """

        self._aggregation_type = aggregation_type

    @property
    def aggregation_level(self):
        """Gets the aggregation_level of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501

        Уровень значения рейтинга по агрегированной шкале  # noqa: E501

        :return: The aggregation_level of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :rtype: int
        """
        return self._aggregation_level

    @aggregation_level.setter
    def aggregation_level(self, aggregation_level):
        """Sets the aggregation_level of this EfirDataHubModelsModelsRatingScaleValueFields.

        Уровень значения рейтинга по агрегированной шкале  # noqa: E501

        :param aggregation_level: The aggregation_level of this EfirDataHubModelsModelsRatingScaleValueFields.  # noqa: E501
        :type: int
        """

        self._aggregation_level = aggregation_level

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsRatingScaleValueFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsRatingScaleValueFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
