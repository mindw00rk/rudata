# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsArchiveMoexTradeHistoryFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id_iss': 'int',
        'fintoolid': 'int',
        'secid': 'str',
        'boardid': 'str',
        'time': 'datetime',
        'price': 'float',
        'volume': 'int',
        'tradeno': 'str',
        'tradeintime': 'str',
        'value': 'float',
        '_yield': 'float',
        'settlecode': 'str',
        'accruedint': 'float',
        'duration': 'int',
        'zero_coupon_yield': 'float',
        'g_spread': 'float'
    }

    attribute_map = {
        'id_iss': 'id_iss',
        'fintoolid': 'fintoolid',
        'secid': 'secid',
        'boardid': 'boardid',
        'time': 'time',
        'price': 'price',
        'volume': 'volume',
        'tradeno': 'tradeno',
        'tradeintime': 'tradeintime',
        'value': 'value',
        '_yield': 'yield',
        'settlecode': 'settlecode',
        'accruedint': 'accruedint',
        'duration': 'duration',
        'zero_coupon_yield': 'zero_coupon_yield',
        'g_spread': 'g_spread'
    }

    def __init__(self, id_iss=None, fintoolid=None, secid=None, boardid=None, time=None, price=None, volume=None, tradeno=None, tradeintime=None, value=None, _yield=None, settlecode=None, accruedint=None, duration=None, zero_coupon_yield=None, g_spread=None):  # noqa: E501
        """EfirDataHubModelsModelsArchiveMoexTradeHistoryFields - a model defined in Swagger"""  # noqa: E501
        self._id_iss = None
        self._fintoolid = None
        self._secid = None
        self._boardid = None
        self._time = None
        self._price = None
        self._volume = None
        self._tradeno = None
        self._tradeintime = None
        self._value = None
        self.__yield = None
        self._settlecode = None
        self._accruedint = None
        self._duration = None
        self._zero_coupon_yield = None
        self._g_spread = None
        self.discriminator = None
        if id_iss is not None:
            self.id_iss = id_iss
        if fintoolid is not None:
            self.fintoolid = fintoolid
        if secid is not None:
            self.secid = secid
        if boardid is not None:
            self.boardid = boardid
        if time is not None:
            self.time = time
        if price is not None:
            self.price = price
        if volume is not None:
            self.volume = volume
        if tradeno is not None:
            self.tradeno = tradeno
        if tradeintime is not None:
            self.tradeintime = tradeintime
        if value is not None:
            self.value = value
        if _yield is not None:
            self._yield = _yield
        if settlecode is not None:
            self.settlecode = settlecode
        if accruedint is not None:
            self.accruedint = accruedint
        if duration is not None:
            self.duration = duration
        if zero_coupon_yield is not None:
            self.zero_coupon_yield = zero_coupon_yield
        if g_spread is not None:
            self.g_spread = g_spread

    @property
    def id_iss(self):
        """Gets the id_iss of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Числовой идентификатор торгового инструмента в БД Интерфакс  # noqa: E501

        :return: The id_iss of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: int
        """
        return self._id_iss

    @id_iss.setter
    def id_iss(self, id_iss):
        """Sets the id_iss of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Числовой идентификатор торгового инструмента в БД Интерфакс  # noqa: E501

        :param id_iss: The id_iss of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: int
        """

        self._id_iss = id_iss

    @property
    def fintoolid(self):
        """Gets the fintoolid of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Числовой идентификатор инструмента в базе Интерфакс  # noqa: E501

        :return: The fintoolid of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: int
        """
        return self._fintoolid

    @fintoolid.setter
    def fintoolid(self, fintoolid):
        """Sets the fintoolid of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Числовой идентификатор инструмента в базе Интерфакс  # noqa: E501

        :param fintoolid: The fintoolid of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: int
        """

        self._fintoolid = fintoolid

    @property
    def secid(self):
        """Gets the secid of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Идентификатор инструмента на Московской бирже  # noqa: E501

        :return: The secid of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._secid

    @secid.setter
    def secid(self, secid):
        """Sets the secid of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Идентификатор инструмента на Московской бирже  # noqa: E501

        :param secid: The secid of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: str
        """

        self._secid = secid

    @property
    def boardid(self):
        """Gets the boardid of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Код режима торгов  # noqa: E501

        :return: The boardid of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._boardid

    @boardid.setter
    def boardid(self, boardid):
        """Sets the boardid of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Код режима торгов  # noqa: E501

        :param boardid: The boardid of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: str
        """

        self._boardid = boardid

    @property
    def time(self):
        """Gets the time of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Дата-время сделки  # noqa: E501

        :return: The time of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Дата-время сделки  # noqa: E501

        :param time: The time of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: datetime
        """

        self._time = time

    @property
    def price(self):
        """Gets the price of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Цена сделки  # noqa: E501

        :return: The price of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Цена сделки  # noqa: E501

        :param price: The price of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: float
        """

        self._price = price

    @property
    def volume(self):
        """Gets the volume of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Объём сделки, штук  # noqa: E501

        :return: The volume of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: int
        """
        return self._volume

    @volume.setter
    def volume(self, volume):
        """Sets the volume of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Объём сделки, штук  # noqa: E501

        :param volume: The volume of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: int
        """

        self._volume = volume

    @property
    def tradeno(self):
        """Gets the tradeno of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Номер сделки  # noqa: E501

        :return: The tradeno of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._tradeno

    @tradeno.setter
    def tradeno(self, tradeno):
        """Sets the tradeno of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Номер сделки  # noqa: E501

        :param tradeno: The tradeno of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: str
        """

        self._tradeno = tradeno

    @property
    def tradeintime(self):
        """Gets the tradeintime of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Идентификатор периода торгов  # noqa: E501

        :return: The tradeintime of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._tradeintime

    @tradeintime.setter
    def tradeintime(self, tradeintime):
        """Sets the tradeintime of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Идентификатор периода торгов  # noqa: E501

        :param tradeintime: The tradeintime of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: str
        """

        self._tradeintime = tradeintime

    @property
    def value(self):
        """Gets the value of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Объем сделки в валюте торгов  # noqa: E501

        :return: The value of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Объем сделки в валюте торгов  # noqa: E501

        :param value: The value of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: float
        """

        self._value = value

    @property
    def _yield(self):
        """Gets the _yield of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Доходность по цене сделки  # noqa: E501

        :return: The _yield of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self.__yield

    @_yield.setter
    def _yield(self, _yield):
        """Sets the _yield of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Доходность по цене сделки  # noqa: E501

        :param _yield: The _yield of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: float
        """

        self.__yield = _yield

    @property
    def settlecode(self):
        """Gets the settlecode of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Код расчетов  # noqa: E501

        :return: The settlecode of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: str
        """
        return self._settlecode

    @settlecode.setter
    def settlecode(self, settlecode):
        """Sets the settlecode of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Код расчетов  # noqa: E501

        :param settlecode: The settlecode of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: str
        """

        self._settlecode = settlecode

    @property
    def accruedint(self):
        """Gets the accruedint of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Накопленный купонный доход  # noqa: E501

        :return: The accruedint of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._accruedint

    @accruedint.setter
    def accruedint(self, accruedint):
        """Sets the accruedint of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Накопленный купонный доход  # noqa: E501

        :param accruedint: The accruedint of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: float
        """

        self._accruedint = accruedint

    @property
    def duration(self):
        """Gets the duration of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Дюрация по Маколею, дней  # noqa: E501

        :return: The duration of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Дюрация по Маколею, дней  # noqa: E501

        :param duration: The duration of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: int
        """

        self._duration = duration

    @property
    def zero_coupon_yield(self):
        """Gets the zero_coupon_yield of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        Бескупонная доходность  # noqa: E501

        :return: The zero_coupon_yield of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._zero_coupon_yield

    @zero_coupon_yield.setter
    def zero_coupon_yield(self, zero_coupon_yield):
        """Sets the zero_coupon_yield of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        Бескупонная доходность  # noqa: E501

        :param zero_coupon_yield: The zero_coupon_yield of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: float
        """

        self._zero_coupon_yield = zero_coupon_yield

    @property
    def g_spread(self):
        """Gets the g_spread of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501

        G-спред  # noqa: E501

        :return: The g_spread of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :rtype: float
        """
        return self._g_spread

    @g_spread.setter
    def g_spread(self, g_spread):
        """Sets the g_spread of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.

        G-спред  # noqa: E501

        :param g_spread: The g_spread of this EfirDataHubModelsModelsArchiveMoexTradeHistoryFields.  # noqa: E501
        :type: float
        """

        self._g_spread = g_spread

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsArchiveMoexTradeHistoryFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsArchiveMoexTradeHistoryFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
