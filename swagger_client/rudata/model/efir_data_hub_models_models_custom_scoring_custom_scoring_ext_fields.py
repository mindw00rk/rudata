# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsCustomScoringCustomScoringExtFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'calculation_id': 'str',
        'fininstid': 'int',
        'inn': 'str',
        'ogrn': 'str',
        'sector': 'str',
        'source': 'str',
        'last_reported_date': 'datetime',
        'update_date': 'datetime',
        'pd': 'float',
        'pd_pit': 'float',
        'rating': 'str',
        'rating_ru': 'str',
        'counterpartyid': 'int',
        'transformed': 'list[EfirDataHubModelsModelsEmitentScoringExtTransformed]',
        'forecasts': 'list[EfirDataHubModelsModelsEmitentScoringExtForecast]'
    }

    attribute_map = {
        'calculation_id': 'calculation_id',
        'fininstid': 'fininstid',
        'inn': 'inn',
        'ogrn': 'ogrn',
        'sector': 'sector',
        'source': 'source',
        'last_reported_date': 'last_reported_date',
        'update_date': 'update_date',
        'pd': 'pd',
        'pd_pit': 'pd_pit',
        'rating': 'rating',
        'rating_ru': 'rating_ru',
        'counterpartyid': 'counterpartyid',
        'transformed': 'transformed',
        'forecasts': 'forecasts'
    }

    def __init__(self, calculation_id=None, fininstid=None, inn=None, ogrn=None, sector=None, source=None, last_reported_date=None, update_date=None, pd=None, pd_pit=None, rating=None, rating_ru=None, counterpartyid=None, transformed=None, forecasts=None):  # noqa: E501
        """EfirDataHubModelsModelsCustomScoringCustomScoringExtFields - a model defined in Swagger"""  # noqa: E501
        self._calculation_id = None
        self._fininstid = None
        self._inn = None
        self._ogrn = None
        self._sector = None
        self._source = None
        self._last_reported_date = None
        self._update_date = None
        self._pd = None
        self._pd_pit = None
        self._rating = None
        self._rating_ru = None
        self._counterpartyid = None
        self._transformed = None
        self._forecasts = None
        self.discriminator = None
        if calculation_id is not None:
            self.calculation_id = calculation_id
        if fininstid is not None:
            self.fininstid = fininstid
        if inn is not None:
            self.inn = inn
        if ogrn is not None:
            self.ogrn = ogrn
        if sector is not None:
            self.sector = sector
        if source is not None:
            self.source = source
        if last_reported_date is not None:
            self.last_reported_date = last_reported_date
        if update_date is not None:
            self.update_date = update_date
        if pd is not None:
            self.pd = pd
        if pd_pit is not None:
            self.pd_pit = pd_pit
        if rating is not None:
            self.rating = rating
        if rating_ru is not None:
            self.rating_ru = rating_ru
        if counterpartyid is not None:
            self.counterpartyid = counterpartyid
        if transformed is not None:
            self.transformed = transformed
        if forecasts is not None:
            self.forecasts = forecasts

    @property
    def calculation_id(self):
        """Gets the calculation_id of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        Идентификатор запроса на расчет скоринга  # noqa: E501

        :return: The calculation_id of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: str
        """
        return self._calculation_id

    @calculation_id.setter
    def calculation_id(self, calculation_id):
        """Sets the calculation_id of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        Идентификатор запроса на расчет скоринга  # noqa: E501

        :param calculation_id: The calculation_id of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: str
        """

        self._calculation_id = calculation_id

    @property
    def fininstid(self):
        """Gets the fininstid of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        Идентификатор эмитента в БД Интерфакс  # noqa: E501

        :return: The fininstid of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: int
        """
        return self._fininstid

    @fininstid.setter
    def fininstid(self, fininstid):
        """Sets the fininstid of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        Идентификатор эмитента в БД Интерфакс  # noqa: E501

        :param fininstid: The fininstid of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: int
        """

        self._fininstid = fininstid

    @property
    def inn(self):
        """Gets the inn of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        ИНН эмитента  # noqa: E501

        :return: The inn of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: str
        """
        return self._inn

    @inn.setter
    def inn(self, inn):
        """Sets the inn of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        ИНН эмитента  # noqa: E501

        :param inn: The inn of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: str
        """

        self._inn = inn

    @property
    def ogrn(self):
        """Gets the ogrn of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        ОГРН эмитента  # noqa: E501

        :return: The ogrn of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: str
        """
        return self._ogrn

    @ogrn.setter
    def ogrn(self, ogrn):
        """Sets the ogrn of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        ОГРН эмитента  # noqa: E501

        :param ogrn: The ogrn of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: str
        """

        self._ogrn = ogrn

    @property
    def sector(self):
        """Gets the sector of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        Отрасль эмитента  # noqa: E501

        :return: The sector of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: str
        """
        return self._sector

    @sector.setter
    def sector(self, sector):
        """Sets the sector of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        Отрасль эмитента  # noqa: E501

        :param sector: The sector of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: str
        """

        self._sector = sector

    @property
    def source(self):
        """Gets the source of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        Тип отчетности, по которой сформированы значения  # noqa: E501

        :return: The source of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        Тип отчетности, по которой сформированы значения  # noqa: E501

        :param source: The source of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def last_reported_date(self):
        """Gets the last_reported_date of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        дата окончания отчетности, по которой был рассчитан расширенный скоринг  # noqa: E501

        :return: The last_reported_date of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: datetime
        """
        return self._last_reported_date

    @last_reported_date.setter
    def last_reported_date(self, last_reported_date):
        """Sets the last_reported_date of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        дата окончания отчетности, по которой был рассчитан расширенный скоринг  # noqa: E501

        :param last_reported_date: The last_reported_date of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: datetime
        """

        self._last_reported_date = last_reported_date

    @property
    def update_date(self):
        """Gets the update_date of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        дата расчета расширенного скоринга  # noqa: E501

        :return: The update_date of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: datetime
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        дата расчета расширенного скоринга  # noqa: E501

        :param update_date: The update_date of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: datetime
        """

        self._update_date = update_date

    @property
    def pd(self):
        """Gets the pd of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        Вероятность дефолта в процентах  # noqa: E501

        :return: The pd of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: float
        """
        return self._pd

    @pd.setter
    def pd(self, pd):
        """Sets the pd of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        Вероятность дефолта в процентах  # noqa: E501

        :param pd: The pd of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: float
        """

        self._pd = pd

    @property
    def pd_pit(self):
        """Gets the pd_pit of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        Вероятность дефолта в процентах, откорректированная на дату вызова  # noqa: E501

        :return: The pd_pit of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: float
        """
        return self._pd_pit

    @pd_pit.setter
    def pd_pit(self, pd_pit):
        """Sets the pd_pit of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        Вероятность дефолта в процентах, откорректированная на дату вызова  # noqa: E501

        :param pd_pit: The pd_pit of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: float
        """

        self._pd_pit = pd_pit

    @property
    def rating(self):
        """Gets the rating of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        Рейтинг  # noqa: E501

        :return: The rating of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: str
        """
        return self._rating

    @rating.setter
    def rating(self, rating):
        """Sets the rating of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        Рейтинг  # noqa: E501

        :param rating: The rating of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: str
        """

        self._rating = rating

    @property
    def rating_ru(self):
        """Gets the rating_ru of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        Рейтинг по национальной шкале  # noqa: E501

        :return: The rating_ru of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: str
        """
        return self._rating_ru

    @rating_ru.setter
    def rating_ru(self, rating_ru):
        """Sets the rating_ru of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        Рейтинг по национальной шкале  # noqa: E501

        :param rating_ru: The rating_ru of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: str
        """

        self._rating_ru = rating_ru

    @property
    def counterpartyid(self):
        """Gets the counterpartyid of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        Идентификатор контрагента  # noqa: E501

        :return: The counterpartyid of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: int
        """
        return self._counterpartyid

    @counterpartyid.setter
    def counterpartyid(self, counterpartyid):
        """Sets the counterpartyid of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        Идентификатор контрагента  # noqa: E501

        :param counterpartyid: The counterpartyid of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: int
        """

        self._counterpartyid = counterpartyid

    @property
    def transformed(self):
        """Gets the transformed of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        Трансформированные коэффициенты (вероятности в %)  # noqa: E501

        :return: The transformed of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: list[EfirDataHubModelsModelsEmitentScoringExtTransformed]
        """
        return self._transformed

    @transformed.setter
    def transformed(self, transformed):
        """Sets the transformed of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        Трансформированные коэффициенты (вероятности в %)  # noqa: E501

        :param transformed: The transformed of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: list[EfirDataHubModelsModelsEmitentScoringExtTransformed]
        """

        self._transformed = transformed

    @property
    def forecasts(self):
        """Gets the forecasts of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501

        Прогнозы  # noqa: E501

        :return: The forecasts of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :rtype: list[EfirDataHubModelsModelsEmitentScoringExtForecast]
        """
        return self._forecasts

    @forecasts.setter
    def forecasts(self, forecasts):
        """Sets the forecasts of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.

        Прогнозы  # noqa: E501

        :param forecasts: The forecasts of this EfirDataHubModelsModelsCustomScoringCustomScoringExtFields.  # noqa: E501
        :type: list[EfirDataHubModelsModelsEmitentScoringExtForecast]
        """

        self._forecasts = forecasts

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsCustomScoringCustomScoringExtFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsCustomScoringCustomScoringExtFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
