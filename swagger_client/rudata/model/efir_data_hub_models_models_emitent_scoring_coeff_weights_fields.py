# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'coef_name_eng': 'str',
        'coef_weight': 'float',
        'model': 'str',
        'source': 'str'
    }

    attribute_map = {
        'coef_name_eng': 'coef_name_eng',
        'coef_weight': 'coef_weight',
        'model': 'model',
        'source': 'source'
    }

    def __init__(self, coef_name_eng=None, coef_weight=None, model=None, source=None):  # noqa: E501
        """EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields - a model defined in Swagger"""  # noqa: E501
        self._coef_name_eng = None
        self._coef_weight = None
        self._model = None
        self._source = None
        self.discriminator = None
        if coef_name_eng is not None:
            self.coef_name_eng = coef_name_eng
        if coef_weight is not None:
            self.coef_weight = coef_weight
        if model is not None:
            self.model = model
        if source is not None:
            self.source = source

    @property
    def coef_name_eng(self):
        """Gets the coef_name_eng of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.  # noqa: E501

        Англоязычное наименование коэффицента скоринговой модели  # noqa: E501

        :return: The coef_name_eng of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.  # noqa: E501
        :rtype: str
        """
        return self._coef_name_eng

    @coef_name_eng.setter
    def coef_name_eng(self, coef_name_eng):
        """Sets the coef_name_eng of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.

        Англоязычное наименование коэффицента скоринговой модели  # noqa: E501

        :param coef_name_eng: The coef_name_eng of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.  # noqa: E501
        :type: str
        """

        self._coef_name_eng = coef_name_eng

    @property
    def coef_weight(self):
        """Gets the coef_weight of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.  # noqa: E501

        Вес коэффициента  # noqa: E501

        :return: The coef_weight of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.  # noqa: E501
        :rtype: float
        """
        return self._coef_weight

    @coef_weight.setter
    def coef_weight(self, coef_weight):
        """Sets the coef_weight of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.

        Вес коэффициента  # noqa: E501

        :param coef_weight: The coef_weight of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.  # noqa: E501
        :type: float
        """

        self._coef_weight = coef_weight

    @property
    def model(self):
        """Gets the model of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.  # noqa: E501

        Модель расчета  # noqa: E501

        :return: The model of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.  # noqa: E501
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.

        Модель расчета  # noqa: E501

        :param model: The model of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.  # noqa: E501
        :type: str
        """

        self._model = model

    @property
    def source(self):
        """Gets the source of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.  # noqa: E501

        Тип отчетности  # noqa: E501

        :return: The source of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.

        Тип отчетности  # noqa: E501

        :param source: The source of this EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields.  # noqa: E501
        :type: str
        """

        self._source = source

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsEmitentScoringCoeffWeightsFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
