# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsMoexFuturesColumnsFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'code': 'str',
        'short_name_rus': 'str',
        'short_name_eng': 'str',
        'full_name_rus': 'str',
        'full_name_eng': 'str',
        'sort_order': 'int',
        'is_default': 'int'
    }

    attribute_map = {
        'id': 'id',
        'code': 'code',
        'short_name_rus': 'short_name_rus',
        'short_name_eng': 'short_name_eng',
        'full_name_rus': 'full_name_rus',
        'full_name_eng': 'full_name_eng',
        'sort_order': 'sort_order',
        'is_default': 'is_default'
    }

    def __init__(self, id=None, code=None, short_name_rus=None, short_name_eng=None, full_name_rus=None, full_name_eng=None, sort_order=None, is_default=None):  # noqa: E501
        """EfirDataHubModelsModelsMoexFuturesColumnsFields - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._code = None
        self._short_name_rus = None
        self._short_name_eng = None
        self._full_name_rus = None
        self._full_name_eng = None
        self._sort_order = None
        self._is_default = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if code is not None:
            self.code = code
        if short_name_rus is not None:
            self.short_name_rus = short_name_rus
        if short_name_eng is not None:
            self.short_name_eng = short_name_eng
        if full_name_rus is not None:
            self.full_name_rus = full_name_rus
        if full_name_eng is not None:
            self.full_name_eng = full_name_eng
        if sort_order is not None:
            self.sort_order = sort_order
        if is_default is not None:
            self.is_default = is_default

    @property
    def id(self):
        """Gets the id of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501

        Идентификатор поля  # noqa: E501

        :return: The id of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EfirDataHubModelsModelsMoexFuturesColumnsFields.

        Идентификатор поля  # noqa: E501

        :param id: The id of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def code(self):
        """Gets the code of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501

        Кодовое наименование поля  # noqa: E501

        :return: The code of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this EfirDataHubModelsModelsMoexFuturesColumnsFields.

        Кодовое наименование поля  # noqa: E501

        :param code: The code of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :type: str
        """

        self._code = code

    @property
    def short_name_rus(self):
        """Gets the short_name_rus of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501

        Краткое наименование поля (рус.)  # noqa: E501

        :return: The short_name_rus of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :rtype: str
        """
        return self._short_name_rus

    @short_name_rus.setter
    def short_name_rus(self, short_name_rus):
        """Sets the short_name_rus of this EfirDataHubModelsModelsMoexFuturesColumnsFields.

        Краткое наименование поля (рус.)  # noqa: E501

        :param short_name_rus: The short_name_rus of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :type: str
        """

        self._short_name_rus = short_name_rus

    @property
    def short_name_eng(self):
        """Gets the short_name_eng of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501

        Краткое наименование поля (англ.)  # noqa: E501

        :return: The short_name_eng of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :rtype: str
        """
        return self._short_name_eng

    @short_name_eng.setter
    def short_name_eng(self, short_name_eng):
        """Sets the short_name_eng of this EfirDataHubModelsModelsMoexFuturesColumnsFields.

        Краткое наименование поля (англ.)  # noqa: E501

        :param short_name_eng: The short_name_eng of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :type: str
        """

        self._short_name_eng = short_name_eng

    @property
    def full_name_rus(self):
        """Gets the full_name_rus of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501

        Полное описание поля (рус.)  # noqa: E501

        :return: The full_name_rus of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :rtype: str
        """
        return self._full_name_rus

    @full_name_rus.setter
    def full_name_rus(self, full_name_rus):
        """Sets the full_name_rus of this EfirDataHubModelsModelsMoexFuturesColumnsFields.

        Полное описание поля (рус.)  # noqa: E501

        :param full_name_rus: The full_name_rus of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :type: str
        """

        self._full_name_rus = full_name_rus

    @property
    def full_name_eng(self):
        """Gets the full_name_eng of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501

        Полное описание поля (англ.)  # noqa: E501

        :return: The full_name_eng of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :rtype: str
        """
        return self._full_name_eng

    @full_name_eng.setter
    def full_name_eng(self, full_name_eng):
        """Sets the full_name_eng of this EfirDataHubModelsModelsMoexFuturesColumnsFields.

        Полное описание поля (англ.)  # noqa: E501

        :param full_name_eng: The full_name_eng of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :type: str
        """

        self._full_name_eng = full_name_eng

    @property
    def sort_order(self):
        """Gets the sort_order of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501

        Порядковый номер в иерархии  # noqa: E501

        :return: The sort_order of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this EfirDataHubModelsModelsMoexFuturesColumnsFields.

        Порядковый номер в иерархии  # noqa: E501

        :param sort_order: The sort_order of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :type: int
        """

        self._sort_order = sort_order

    @property
    def is_default(self):
        """Gets the is_default of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501

        Поле присутствует в выборках по-умолчанию  # noqa: E501

        :return: The is_default of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this EfirDataHubModelsModelsMoexFuturesColumnsFields.

        Поле присутствует в выборках по-умолчанию  # noqa: E501

        :param is_default: The is_default of this EfirDataHubModelsModelsMoexFuturesColumnsFields.  # noqa: E501
        :type: int
        """

        self._is_default = is_default

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsMoexFuturesColumnsFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsMoexFuturesColumnsFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
