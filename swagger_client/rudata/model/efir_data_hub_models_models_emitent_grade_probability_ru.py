# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsEmitentGradeProbabilityRU(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'gp01_ru': 'float',
        'gp02_ru': 'float',
        'gp03_ru': 'float',
        'gp04_ru': 'float',
        'gp05_ru': 'float',
        'gp06_ru': 'float',
        'gp07_ru': 'float',
        'gp08_ru': 'float',
        'gp09_ru': 'float',
        'gp10_ru': 'float',
        'gp11_ru': 'float',
        'gp12_ru': 'float',
        'gp13_ru': 'float',
        'gp14_ru': 'float',
        'gp15_ru': 'float',
        'gp16_ru': 'float',
        'gp17_ru': 'float',
        'gp18_ru': 'float',
        'gp19_ru': 'float',
        'gp20_ru': 'float',
        'gp21_ru': 'float'
    }

    attribute_map = {
        'gp01_ru': 'gp01_ru',
        'gp02_ru': 'gp02_ru',
        'gp03_ru': 'gp03_ru',
        'gp04_ru': 'gp04_ru',
        'gp05_ru': 'gp05_ru',
        'gp06_ru': 'gp06_ru',
        'gp07_ru': 'gp07_ru',
        'gp08_ru': 'gp08_ru',
        'gp09_ru': 'gp09_ru',
        'gp10_ru': 'gp10_ru',
        'gp11_ru': 'gp11_ru',
        'gp12_ru': 'gp12_ru',
        'gp13_ru': 'gp13_ru',
        'gp14_ru': 'gp14_ru',
        'gp15_ru': 'gp15_ru',
        'gp16_ru': 'gp16_ru',
        'gp17_ru': 'gp17_ru',
        'gp18_ru': 'gp18_ru',
        'gp19_ru': 'gp19_ru',
        'gp20_ru': 'gp20_ru',
        'gp21_ru': 'gp21_ru'
    }

    def __init__(self, gp01_ru=None, gp02_ru=None, gp03_ru=None, gp04_ru=None, gp05_ru=None, gp06_ru=None, gp07_ru=None, gp08_ru=None, gp09_ru=None, gp10_ru=None, gp11_ru=None, gp12_ru=None, gp13_ru=None, gp14_ru=None, gp15_ru=None, gp16_ru=None, gp17_ru=None, gp18_ru=None, gp19_ru=None, gp20_ru=None, gp21_ru=None):  # noqa: E501
        """EfirDataHubModelsModelsEmitentGradeProbabilityRU - a model defined in Swagger"""  # noqa: E501
        self._gp01_ru = None
        self._gp02_ru = None
        self._gp03_ru = None
        self._gp04_ru = None
        self._gp05_ru = None
        self._gp06_ru = None
        self._gp07_ru = None
        self._gp08_ru = None
        self._gp09_ru = None
        self._gp10_ru = None
        self._gp11_ru = None
        self._gp12_ru = None
        self._gp13_ru = None
        self._gp14_ru = None
        self._gp15_ru = None
        self._gp16_ru = None
        self._gp17_ru = None
        self._gp18_ru = None
        self._gp19_ru = None
        self._gp20_ru = None
        self._gp21_ru = None
        self.discriminator = None
        if gp01_ru is not None:
            self.gp01_ru = gp01_ru
        if gp02_ru is not None:
            self.gp02_ru = gp02_ru
        if gp03_ru is not None:
            self.gp03_ru = gp03_ru
        if gp04_ru is not None:
            self.gp04_ru = gp04_ru
        if gp05_ru is not None:
            self.gp05_ru = gp05_ru
        if gp06_ru is not None:
            self.gp06_ru = gp06_ru
        if gp07_ru is not None:
            self.gp07_ru = gp07_ru
        if gp08_ru is not None:
            self.gp08_ru = gp08_ru
        if gp09_ru is not None:
            self.gp09_ru = gp09_ru
        if gp10_ru is not None:
            self.gp10_ru = gp10_ru
        if gp11_ru is not None:
            self.gp11_ru = gp11_ru
        if gp12_ru is not None:
            self.gp12_ru = gp12_ru
        if gp13_ru is not None:
            self.gp13_ru = gp13_ru
        if gp14_ru is not None:
            self.gp14_ru = gp14_ru
        if gp15_ru is not None:
            self.gp15_ru = gp15_ru
        if gp16_ru is not None:
            self.gp16_ru = gp16_ru
        if gp17_ru is not None:
            self.gp17_ru = gp17_ru
        if gp18_ru is not None:
            self.gp18_ru = gp18_ru
        if gp19_ru is not None:
            self.gp19_ru = gp19_ru
        if gp20_ru is not None:
            self.gp20_ru = gp20_ru
        if gp21_ru is not None:
            self.gp21_ru = gp21_ru

    @property
    def gp01_ru(self):
        """Gets the gp01_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp01_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp01_ru

    @gp01_ru.setter
    def gp01_ru(self, gp01_ru):
        """Sets the gp01_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp01_ru: The gp01_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp01_ru = gp01_ru

    @property
    def gp02_ru(self):
        """Gets the gp02_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp02_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp02_ru

    @gp02_ru.setter
    def gp02_ru(self, gp02_ru):
        """Sets the gp02_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp02_ru: The gp02_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp02_ru = gp02_ru

    @property
    def gp03_ru(self):
        """Gets the gp03_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp03_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp03_ru

    @gp03_ru.setter
    def gp03_ru(self, gp03_ru):
        """Sets the gp03_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp03_ru: The gp03_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp03_ru = gp03_ru

    @property
    def gp04_ru(self):
        """Gets the gp04_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp04_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp04_ru

    @gp04_ru.setter
    def gp04_ru(self, gp04_ru):
        """Sets the gp04_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp04_ru: The gp04_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp04_ru = gp04_ru

    @property
    def gp05_ru(self):
        """Gets the gp05_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp05_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp05_ru

    @gp05_ru.setter
    def gp05_ru(self, gp05_ru):
        """Sets the gp05_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp05_ru: The gp05_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp05_ru = gp05_ru

    @property
    def gp06_ru(self):
        """Gets the gp06_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp06_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp06_ru

    @gp06_ru.setter
    def gp06_ru(self, gp06_ru):
        """Sets the gp06_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp06_ru: The gp06_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp06_ru = gp06_ru

    @property
    def gp07_ru(self):
        """Gets the gp07_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp07_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp07_ru

    @gp07_ru.setter
    def gp07_ru(self, gp07_ru):
        """Sets the gp07_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp07_ru: The gp07_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp07_ru = gp07_ru

    @property
    def gp08_ru(self):
        """Gets the gp08_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp08_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp08_ru

    @gp08_ru.setter
    def gp08_ru(self, gp08_ru):
        """Sets the gp08_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp08_ru: The gp08_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp08_ru = gp08_ru

    @property
    def gp09_ru(self):
        """Gets the gp09_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp09_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp09_ru

    @gp09_ru.setter
    def gp09_ru(self, gp09_ru):
        """Sets the gp09_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp09_ru: The gp09_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp09_ru = gp09_ru

    @property
    def gp10_ru(self):
        """Gets the gp10_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp10_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp10_ru

    @gp10_ru.setter
    def gp10_ru(self, gp10_ru):
        """Sets the gp10_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp10_ru: The gp10_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp10_ru = gp10_ru

    @property
    def gp11_ru(self):
        """Gets the gp11_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp11_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp11_ru

    @gp11_ru.setter
    def gp11_ru(self, gp11_ru):
        """Sets the gp11_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp11_ru: The gp11_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp11_ru = gp11_ru

    @property
    def gp12_ru(self):
        """Gets the gp12_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp12_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp12_ru

    @gp12_ru.setter
    def gp12_ru(self, gp12_ru):
        """Sets the gp12_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp12_ru: The gp12_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp12_ru = gp12_ru

    @property
    def gp13_ru(self):
        """Gets the gp13_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp13_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp13_ru

    @gp13_ru.setter
    def gp13_ru(self, gp13_ru):
        """Sets the gp13_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp13_ru: The gp13_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp13_ru = gp13_ru

    @property
    def gp14_ru(self):
        """Gets the gp14_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp14_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp14_ru

    @gp14_ru.setter
    def gp14_ru(self, gp14_ru):
        """Sets the gp14_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp14_ru: The gp14_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp14_ru = gp14_ru

    @property
    def gp15_ru(self):
        """Gets the gp15_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp15_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp15_ru

    @gp15_ru.setter
    def gp15_ru(self, gp15_ru):
        """Sets the gp15_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp15_ru: The gp15_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp15_ru = gp15_ru

    @property
    def gp16_ru(self):
        """Gets the gp16_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp16_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp16_ru

    @gp16_ru.setter
    def gp16_ru(self, gp16_ru):
        """Sets the gp16_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp16_ru: The gp16_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp16_ru = gp16_ru

    @property
    def gp17_ru(self):
        """Gets the gp17_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp17_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp17_ru

    @gp17_ru.setter
    def gp17_ru(self, gp17_ru):
        """Sets the gp17_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp17_ru: The gp17_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp17_ru = gp17_ru

    @property
    def gp18_ru(self):
        """Gets the gp18_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp18_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp18_ru

    @gp18_ru.setter
    def gp18_ru(self, gp18_ru):
        """Sets the gp18_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp18_ru: The gp18_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp18_ru = gp18_ru

    @property
    def gp19_ru(self):
        """Gets the gp19_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp19_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp19_ru

    @gp19_ru.setter
    def gp19_ru(self, gp19_ru):
        """Sets the gp19_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp19_ru: The gp19_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp19_ru = gp19_ru

    @property
    def gp20_ru(self):
        """Gets the gp20_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp20_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp20_ru

    @gp20_ru.setter
    def gp20_ru(self, gp20_ru):
        """Sets the gp20_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp20_ru: The gp20_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp20_ru = gp20_ru

    @property
    def gp21_ru(self):
        """Gets the gp21_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501

        Вероятности попадания в грейд  # noqa: E501

        :return: The gp21_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :rtype: float
        """
        return self._gp21_ru

    @gp21_ru.setter
    def gp21_ru(self, gp21_ru):
        """Sets the gp21_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.

        Вероятности попадания в грейд  # noqa: E501

        :param gp21_ru: The gp21_ru of this EfirDataHubModelsModelsEmitentGradeProbabilityRU.  # noqa: E501
        :type: float
        """

        self._gp21_ru = gp21_ru

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsEmitentGradeProbabilityRU, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsEmitentGradeProbabilityRU):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
