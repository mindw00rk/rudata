# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsRiskRuleHlaFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fintool_id': 'int',
        'isin': 'str',
        'dt': 'datetime',
        'drawdown': 'float',
        'source_name': 'str',
        'counter': 'int',
        'rn': 'int'
    }

    attribute_map = {
        'fintool_id': 'fintoolId',
        'isin': 'isin',
        'dt': 'dt',
        'drawdown': 'drawdown',
        'source_name': 'source_name',
        'counter': 'counter',
        'rn': 'rn'
    }

    def __init__(self, fintool_id=None, isin=None, dt=None, drawdown=None, source_name=None, counter=None, rn=None):  # noqa: E501
        """EfirDataHubModelsModelsRiskRuleHlaFields - a model defined in Swagger"""  # noqa: E501
        self._fintool_id = None
        self._isin = None
        self._dt = None
        self._drawdown = None
        self._source_name = None
        self._counter = None
        self._rn = None
        self.discriminator = None
        if fintool_id is not None:
            self.fintool_id = fintool_id
        if isin is not None:
            self.isin = isin
        if dt is not None:
            self.dt = dt
        if drawdown is not None:
            self.drawdown = drawdown
        if source_name is not None:
            self.source_name = source_name
        if counter is not None:
            self.counter = counter
        if rn is not None:
            self.rn = rn

    @property
    def fintool_id(self):
        """Gets the fintool_id of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501

        ID инструмента в БД Интерфакс  # noqa: E501

        :return: The fintool_id of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :rtype: int
        """
        return self._fintool_id

    @fintool_id.setter
    def fintool_id(self, fintool_id):
        """Sets the fintool_id of this EfirDataHubModelsModelsRiskRuleHlaFields.

        ID инструмента в БД Интерфакс  # noqa: E501

        :param fintool_id: The fintool_id of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :type: int
        """

        self._fintool_id = fintool_id

    @property
    def isin(self):
        """Gets the isin of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501

        ISIN  # noqa: E501

        :return: The isin of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :rtype: str
        """
        return self._isin

    @isin.setter
    def isin(self, isin):
        """Sets the isin of this EfirDataHubModelsModelsRiskRuleHlaFields.

        ISIN  # noqa: E501

        :param isin: The isin of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :type: str
        """

        self._isin = isin

    @property
    def dt(self):
        """Gets the dt of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501

        Дата, на которую рассчитано обесценение  # noqa: E501

        :return: The dt of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :rtype: datetime
        """
        return self._dt

    @dt.setter
    def dt(self, dt):
        """Sets the dt of this EfirDataHubModelsModelsRiskRuleHlaFields.

        Дата, на которую рассчитано обесценение  # noqa: E501

        :param dt: The dt of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :type: datetime
        """

        self._dt = dt

    @property
    def drawdown(self):
        """Gets the drawdown of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501

        Величина обесценения  # noqa: E501

        :return: The drawdown of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :rtype: float
        """
        return self._drawdown

    @drawdown.setter
    def drawdown(self, drawdown):
        """Sets the drawdown of this EfirDataHubModelsModelsRiskRuleHlaFields.

        Величина обесценения  # noqa: E501

        :param drawdown: The drawdown of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :type: float
        """

        self._drawdown = drawdown

    @property
    def source_name(self):
        """Gets the source_name of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501

        Наименование источника значений обесценения  # noqa: E501

        :return: The source_name of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :rtype: str
        """
        return self._source_name

    @source_name.setter
    def source_name(self, source_name):
        """Sets the source_name of this EfirDataHubModelsModelsRiskRuleHlaFields.

        Наименование источника значений обесценения  # noqa: E501

        :param source_name: The source_name of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :type: str
        """

        self._source_name = source_name

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501

        Общее количество записей в выборке  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsRiskRuleHlaFields.

        Общее количество записей в выборке  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    @property
    def rn(self):
        """Gets the rn of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501

        Номер записи в выборке  # noqa: E501

        :return: The rn of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :rtype: int
        """
        return self._rn

    @rn.setter
    def rn(self, rn):
        """Sets the rn of this EfirDataHubModelsModelsRiskRuleHlaFields.

        Номер записи в выборке  # noqa: E501

        :param rn: The rn of this EfirDataHubModelsModelsRiskRuleHlaFields.  # noqa: E501
        :type: int
        """

        self._rn = rn

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsRiskRuleHlaFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsRiskRuleHlaFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
