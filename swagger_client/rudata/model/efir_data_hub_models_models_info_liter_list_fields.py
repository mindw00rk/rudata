# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsInfoLiterListFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'id_litertype': 'int',
        'litera': 'str',
        'shortname_rus': 'str',
        'fullname_rus': 'str',
        'act_code': 'str',
        'litertype_code': 'str',
        'litertype_name': 'str',
        'counter': 'int'
    }

    attribute_map = {
        'id': 'id',
        'id_litertype': 'id_litertype',
        'litera': 'litera',
        'shortname_rus': 'shortname_rus',
        'fullname_rus': 'fullname_rus',
        'act_code': 'act_code',
        'litertype_code': 'litertype_code',
        'litertype_name': 'litertype_name',
        'counter': 'counter'
    }

    def __init__(self, id=None, id_litertype=None, litera=None, shortname_rus=None, fullname_rus=None, act_code=None, litertype_code=None, litertype_name=None, counter=None):  # noqa: E501
        """EfirDataHubModelsModelsInfoLiterListFields - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._id_litertype = None
        self._litera = None
        self._shortname_rus = None
        self._fullname_rus = None
        self._act_code = None
        self._litertype_code = None
        self._litertype_name = None
        self._counter = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if id_litertype is not None:
            self.id_litertype = id_litertype
        if litera is not None:
            self.litera = litera
        if shortname_rus is not None:
            self.shortname_rus = shortname_rus
        if fullname_rus is not None:
            self.fullname_rus = fullname_rus
        if act_code is not None:
            self.act_code = act_code
        if litertype_code is not None:
            self.litertype_code = litertype_code
        if litertype_name is not None:
            self.litertype_name = litertype_name
        if counter is not None:
            self.counter = counter

    @property
    def id(self):
        """Gets the id of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501

        ID литеры  # noqa: E501

        :return: The id of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EfirDataHubModelsModelsInfoLiterListFields.

        ID литеры  # noqa: E501

        :param id: The id of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def id_litertype(self):
        """Gets the id_litertype of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501

        ID литерного поля  # noqa: E501

        :return: The id_litertype of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :rtype: int
        """
        return self._id_litertype

    @id_litertype.setter
    def id_litertype(self, id_litertype):
        """Sets the id_litertype of this EfirDataHubModelsModelsInfoLiterListFields.

        ID литерного поля  # noqa: E501

        :param id_litertype: The id_litertype of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :type: int
        """

        self._id_litertype = id_litertype

    @property
    def litera(self):
        """Gets the litera of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501

        Литера  # noqa: E501

        :return: The litera of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :rtype: str
        """
        return self._litera

    @litera.setter
    def litera(self, litera):
        """Sets the litera of this EfirDataHubModelsModelsInfoLiterListFields.

        Литера  # noqa: E501

        :param litera: The litera of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :type: str
        """

        self._litera = litera

    @property
    def shortname_rus(self):
        """Gets the shortname_rus of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501

        Краткое русское наименование  # noqa: E501

        :return: The shortname_rus of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :rtype: str
        """
        return self._shortname_rus

    @shortname_rus.setter
    def shortname_rus(self, shortname_rus):
        """Sets the shortname_rus of this EfirDataHubModelsModelsInfoLiterListFields.

        Краткое русское наименование  # noqa: E501

        :param shortname_rus: The shortname_rus of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :type: str
        """

        self._shortname_rus = shortname_rus

    @property
    def fullname_rus(self):
        """Gets the fullname_rus of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501

        Полное русское наименование  # noqa: E501

        :return: The fullname_rus of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :rtype: str
        """
        return self._fullname_rus

    @fullname_rus.setter
    def fullname_rus(self, fullname_rus):
        """Sets the fullname_rus of this EfirDataHubModelsModelsInfoLiterListFields.

        Полное русское наименование  # noqa: E501

        :param fullname_rus: The fullname_rus of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :type: str
        """

        self._fullname_rus = fullname_rus

    @property
    def act_code(self):
        """Gets the act_code of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501

        Код КД  # noqa: E501

        :return: The act_code of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :rtype: str
        """
        return self._act_code

    @act_code.setter
    def act_code(self, act_code):
        """Sets the act_code of this EfirDataHubModelsModelsInfoLiterListFields.

        Код КД  # noqa: E501

        :param act_code: The act_code of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :type: str
        """

        self._act_code = act_code

    @property
    def litertype_code(self):
        """Gets the litertype_code of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501

        Код типа литеры  # noqa: E501

        :return: The litertype_code of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :rtype: str
        """
        return self._litertype_code

    @litertype_code.setter
    def litertype_code(self, litertype_code):
        """Sets the litertype_code of this EfirDataHubModelsModelsInfoLiterListFields.

        Код типа литеры  # noqa: E501

        :param litertype_code: The litertype_code of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :type: str
        """

        self._litertype_code = litertype_code

    @property
    def litertype_name(self):
        """Gets the litertype_name of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501

        Наименование типа литеры  # noqa: E501

        :return: The litertype_name of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :rtype: str
        """
        return self._litertype_name

    @litertype_name.setter
    def litertype_name(self, litertype_name):
        """Sets the litertype_name of this EfirDataHubModelsModelsInfoLiterListFields.

        Наименование типа литеры  # noqa: E501

        :param litertype_name: The litertype_name of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :type: str
        """

        self._litertype_name = litertype_name

    @property
    def counter(self):
        """Gets the counter of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501

        Общее количество записей в выборке, если указан pageNo = 1. Иначе = null  # noqa: E501

        :return: The counter of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :rtype: int
        """
        return self._counter

    @counter.setter
    def counter(self, counter):
        """Sets the counter of this EfirDataHubModelsModelsInfoLiterListFields.

        Общее количество записей в выборке, если указан pageNo = 1. Иначе = null  # noqa: E501

        :param counter: The counter of this EfirDataHubModelsModelsInfoLiterListFields.  # noqa: E501
        :type: int
        """

        self._counter = counter

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsInfoLiterListFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsInfoLiterListFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
