# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'ids': 'list[str]',
        'fields': 'list[str]',
        'date_from': 'datetime',
        'date_to': 'datetime',
        'version': 'AllOfEfirDataHubModelsRequestsV2RUPriceGetHistoryRequestVersion',
        'page_num': 'int',
        'page_size': 'int'
    }

    attribute_map = {
        'ids': 'ids',
        'fields': 'fields',
        'date_from': 'dateFrom',
        'date_to': 'dateTo',
        'version': 'version',
        'page_num': 'pageNum',
        'page_size': 'pageSize'
    }

    def __init__(self, ids=None, fields=None, date_from=None, date_to=None, version=None, page_num=None, page_size=100):  # noqa: E501
        """EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest - a model defined in Swagger"""  # noqa: E501
        self._ids = None
        self._fields = None
        self._date_from = None
        self._date_to = None
        self._version = None
        self._page_num = None
        self._page_size = None
        self.discriminator = None
        if ids is not None:
            self.ids = ids
        if fields is not None:
            self.fields = fields
        if date_from is not None:
            self.date_from = date_from
        if date_to is not None:
            self.date_to = date_to
        if version is not None:
            self.version = version
        if page_num is not None:
            self.page_num = page_num
        if page_size is not None:
            self.page_size = page_size

    @property
    def ids(self):
        """Gets the ids of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501

        (Необязательный) Список идентификаторов инструментов (любой из ISIN, регистрационный номер, код НРД, FintoolID)  Ограничение – если ids не задан, то возвратятся данные максимум за один месяц (от dateFrom до dateFrom + 1 месяц).  # noqa: E501

        :return: The ids of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._ids

    @ids.setter
    def ids(self, ids):
        """Sets the ids of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.

        (Необязательный) Список идентификаторов инструментов (любой из ISIN, регистрационный номер, код НРД, FintoolID)  Ограничение – если ids не задан, то возвратятся данные максимум за один месяц (от dateFrom до dateFrom + 1 месяц).  # noqa: E501

        :param ids: The ids of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :type: list[str]
        """

        self._ids = ids

    @property
    def fields(self):
        """Gets the fields of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501

        (Необязательный) Список кодов необходимых полей (см. метод HistoryColumns, CODENAME). Если не задано, то вернутся все поля.  # noqa: E501

        :return: The fields of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.

        (Необязательный) Список кодов необходимых полей (см. метод HistoryColumns, CODENAME). Если не задано, то вернутся все поля.  # noqa: E501

        :param fields: The fields of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :type: list[str]
        """

        self._fields = fields

    @property
    def date_from(self):
        """Gets the date_from of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501

        Дата начала периода  # noqa: E501

        :return: The date_from of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :rtype: datetime
        """
        return self._date_from

    @date_from.setter
    def date_from(self, date_from):
        """Sets the date_from of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.

        Дата начала периода  # noqa: E501

        :param date_from: The date_from of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :type: datetime
        """

        self._date_from = date_from

    @property
    def date_to(self):
        """Gets the date_to of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501

        Дата окончания периода. Может совпадать с dateFrom, если требуются данные за один день.  # noqa: E501

        :return: The date_to of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :rtype: datetime
        """
        return self._date_to

    @date_to.setter
    def date_to(self, date_to):
        """Sets the date_to of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.

        Дата окончания периода. Может совпадать с dateFrom, если требуются данные за один день.  # noqa: E501

        :param date_to: The date_to of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :type: datetime
        """

        self._date_to = date_to

    @property
    def version(self):
        """Gets the version of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501

        Версия методики: 0 - Обе методики; 1 - Методика НФА (старая); 2, null или не указан - Методика ЦЦ НРД (новая);  0 = All  1 = NFA  2 = NRD  # noqa: E501

        :return: The version of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :rtype: AllOfEfirDataHubModelsRequestsV2RUPriceGetHistoryRequestVersion
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.

        Версия методики: 0 - Обе методики; 1 - Методика НФА (старая); 2, null или не указан - Методика ЦЦ НРД (новая);  0 = All  1 = NFA  2 = NRD  # noqa: E501

        :param version: The version of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :type: AllOfEfirDataHubModelsRequestsV2RUPriceGetHistoryRequestVersion
        """

        self._version = version

    @property
    def page_num(self):
        """Gets the page_num of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501

        Номер страницы для выборки. По умолчанию - 1.  # noqa: E501

        :return: The page_num of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :rtype: int
        """
        return self._page_num

    @page_num.setter
    def page_num(self, page_num):
        """Sets the page_num of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.

        Номер страницы для выборки. По умолчанию - 1.  # noqa: E501

        :param page_num: The page_num of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :type: int
        """

        self._page_num = page_num

    @property
    def page_size(self):
        """Gets the page_size of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501

        Размер страницы выборки. Максимум - 1000  # noqa: E501

        :return: The page_size of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.

        Размер страницы выборки. Максимум - 1000  # noqa: E501

        :param page_size: The page_size of this EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest.  # noqa: E501
        :type: int
        """

        self._page_size = page_size

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsRequestsV2RUPriceGetHistoryRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
