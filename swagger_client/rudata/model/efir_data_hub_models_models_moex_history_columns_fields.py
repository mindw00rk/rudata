# coding: utf-8

"""
    API Reference United Data (RU DATA) v2.0

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: DataHub: v2, Models: 1.23.21.6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EfirDataHubModelsModelsMoexHistoryColumnsFields(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'engine_name': 'str',
        'market_name': 'str',
        'column_id': 'int',
        'market_id': 'int',
        'name': 'str',
        'short_title': 'str',
        'title': 'str',
        'is_ordered': 'int',
        'is_system': 'int',
        'is_hidden': 'int',
        'trend_by': 'int',
        'is_signed': 'int',
        'has_percent': 'int',
        'data_type': 'str',
        'decimals': 'int',
        'is_linked': 'int',
        'sort_order': 'int',
        'is_default': 'int'
    }

    attribute_map = {
        'id': 'id',
        'engine_name': 'engine_name',
        'market_name': 'market_name',
        'column_id': 'column_id',
        'market_id': 'market_id',
        'name': 'name',
        'short_title': 'short_title',
        'title': 'title',
        'is_ordered': 'is_ordered',
        'is_system': 'is_system',
        'is_hidden': 'is_hidden',
        'trend_by': 'trend_by',
        'is_signed': 'is_signed',
        'has_percent': 'has_percent',
        'data_type': 'data_type',
        'decimals': 'decimals',
        'is_linked': 'is_linked',
        'sort_order': 'sort_order',
        'is_default': 'is_default'
    }

    def __init__(self, id=None, engine_name=None, market_name=None, column_id=None, market_id=None, name=None, short_title=None, title=None, is_ordered=None, is_system=None, is_hidden=None, trend_by=None, is_signed=None, has_percent=None, data_type=None, decimals=None, is_linked=None, sort_order=None, is_default=None):  # noqa: E501
        """EfirDataHubModelsModelsMoexHistoryColumnsFields - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._engine_name = None
        self._market_name = None
        self._column_id = None
        self._market_id = None
        self._name = None
        self._short_title = None
        self._title = None
        self._is_ordered = None
        self._is_system = None
        self._is_hidden = None
        self._trend_by = None
        self._is_signed = None
        self._has_percent = None
        self._data_type = None
        self._decimals = None
        self._is_linked = None
        self._sort_order = None
        self._is_default = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if engine_name is not None:
            self.engine_name = engine_name
        if market_name is not None:
            self.market_name = market_name
        if column_id is not None:
            self.column_id = column_id
        if market_id is not None:
            self.market_id = market_id
        if name is not None:
            self.name = name
        if short_title is not None:
            self.short_title = short_title
        if title is not None:
            self.title = title
        if is_ordered is not None:
            self.is_ordered = is_ordered
        if is_system is not None:
            self.is_system = is_system
        if is_hidden is not None:
            self.is_hidden = is_hidden
        if trend_by is not None:
            self.trend_by = trend_by
        if is_signed is not None:
            self.is_signed = is_signed
        if has_percent is not None:
            self.has_percent = has_percent
        if data_type is not None:
            self.data_type = data_type
        if decimals is not None:
            self.decimals = decimals
        if is_linked is not None:
            self.is_linked = is_linked
        if sort_order is not None:
            self.sort_order = sort_order
        if is_default is not None:
            self.is_default = is_default

    @property
    def id(self):
        """Gets the id of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Идентификатор поля (на MOEX используется сквозная нумерация полей по всем рынкам)  # noqa: E501

        :return: The id of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Идентификатор поля (на MOEX используется сквозная нумерация полей по всем рынкам)  # noqa: E501

        :param id: The id of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def engine_name(self):
        """Gets the engine_name of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Подсистема MOEX: stock, state, currency и т.д.  # noqa: E501

        :return: The engine_name of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: str
        """
        return self._engine_name

    @engine_name.setter
    def engine_name(self, engine_name):
        """Sets the engine_name of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Подсистема MOEX: stock, state, currency и т.д.  # noqa: E501

        :param engine_name: The engine_name of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: str
        """

        self._engine_name = engine_name

    @property
    def market_name(self):
        """Gets the market_name of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Рынок MOEX: index, shares, bonds, ndm и т.д.  # noqa: E501

        :return: The market_name of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: str
        """
        return self._market_name

    @market_name.setter
    def market_name(self, market_name):
        """Sets the market_name of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Рынок MOEX: index, shares, bonds, ndm и т.д.  # noqa: E501

        :param market_name: The market_name of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: str
        """

        self._market_name = market_name

    @property
    def column_id(self):
        """Gets the column_id of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Идентификатор колонки на MOEX  # noqa: E501

        :return: The column_id of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._column_id

    @column_id.setter
    def column_id(self, column_id):
        """Sets the column_id of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Идентификатор колонки на MOEX  # noqa: E501

        :param column_id: The column_id of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: int
        """

        self._column_id = column_id

    @property
    def market_id(self):
        """Gets the market_id of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Идентификатор рынка MOEX, для которого применима данная колонка  # noqa: E501

        :return: The market_id of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._market_id

    @market_id.setter
    def market_id(self, market_id):
        """Sets the market_id of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Идентификатор рынка MOEX, для которого применима данная колонка  # noqa: E501

        :param market_id: The market_id of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: int
        """

        self._market_id = market_id

    @property
    def name(self):
        """Gets the name of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Код поля  # noqa: E501

        :return: The name of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Код поля  # noqa: E501

        :param name: The name of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def short_title(self):
        """Gets the short_title of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Короткое название  # noqa: E501

        :return: The short_title of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: str
        """
        return self._short_title

    @short_title.setter
    def short_title(self, short_title):
        """Sets the short_title of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Короткое название  # noqa: E501

        :param short_title: The short_title of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: str
        """

        self._short_title = short_title

    @property
    def title(self):
        """Gets the title of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Полное название  # noqa: E501

        :return: The title of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Полное название  # noqa: E501

        :param title: The title of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def is_ordered(self):
        """Gets the is_ordered of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Флаг «заказной»  # noqa: E501

        :return: The is_ordered of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._is_ordered

    @is_ordered.setter
    def is_ordered(self, is_ordered):
        """Sets the is_ordered of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Флаг «заказной»  # noqa: E501

        :param is_ordered: The is_ordered of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: int
        """

        self._is_ordered = is_ordered

    @property
    def is_system(self):
        """Gets the is_system of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Флаг «системный»  # noqa: E501

        :return: The is_system of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._is_system

    @is_system.setter
    def is_system(self, is_system):
        """Sets the is_system of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Флаг «системный»  # noqa: E501

        :param is_system: The is_system of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: int
        """

        self._is_system = is_system

    @property
    def is_hidden(self):
        """Gets the is_hidden of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Флаг «невидимый»  # noqa: E501

        :return: The is_hidden of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._is_hidden

    @is_hidden.setter
    def is_hidden(self, is_hidden):
        """Sets the is_hidden of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Флаг «невидимый»  # noqa: E501

        :param is_hidden: The is_hidden of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: int
        """

        self._is_hidden = is_hidden

    @property
    def trend_by(self):
        """Gets the trend_by of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Флаг тренда (направление последней сделки)  # noqa: E501

        :return: The trend_by of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._trend_by

    @trend_by.setter
    def trend_by(self, trend_by):
        """Sets the trend_by of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Флаг тренда (направление последней сделки)  # noqa: E501

        :param trend_by: The trend_by of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: int
        """

        self._trend_by = trend_by

    @property
    def is_signed(self):
        """Gets the is_signed of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Флаг наличия знака (отрицательных величин)  # noqa: E501

        :return: The is_signed of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._is_signed

    @is_signed.setter
    def is_signed(self, is_signed):
        """Sets the is_signed of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Флаг наличия знака (отрицательных величин)  # noqa: E501

        :param is_signed: The is_signed of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: int
        """

        self._is_signed = is_signed

    @property
    def has_percent(self):
        """Gets the has_percent of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Флаг наличия знака процента  # noqa: E501

        :return: The has_percent of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._has_percent

    @has_percent.setter
    def has_percent(self, has_percent):
        """Sets the has_percent of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Флаг наличия знака процента  # noqa: E501

        :param has_percent: The has_percent of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: int
        """

        self._has_percent = has_percent

    @property
    def data_type(self):
        """Gets the data_type of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        string, date, number и т.д.  # noqa: E501

        :return: The data_type of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: str
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        string, date, number и т.д.  # noqa: E501

        :param data_type: The data_type of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: str
        """

        self._data_type = data_type

    @property
    def decimals(self):
        """Gets the decimals of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Количество знаков после запятой  # noqa: E501

        :return: The decimals of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._decimals

    @decimals.setter
    def decimals(self, decimals):
        """Sets the decimals of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Количество знаков после запятой  # noqa: E501

        :param decimals: The decimals of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: int
        """

        self._decimals = decimals

    @property
    def is_linked(self):
        """Gets the is_linked of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501


        :return: The is_linked of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._is_linked

    @is_linked.setter
    def is_linked(self, is_linked):
        """Sets the is_linked of this EfirDataHubModelsModelsMoexHistoryColumnsFields.


        :param is_linked: The is_linked of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: int
        """

        self._is_linked = is_linked

    @property
    def sort_order(self):
        """Gets the sort_order of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Порядок сортировки полей в пользовательском интерфейсе.По-умолчанию – NULL (тогда можно сортировать по алфавиту).  # noqa: E501

        :return: The sort_order of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Порядок сортировки полей в пользовательском интерфейсе.По-умолчанию – NULL (тогда можно сортировать по алфавиту).  # noqa: E501

        :param sort_order: The sort_order of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: int
        """

        self._sort_order = sort_order

    @property
    def is_default(self):
        """Gets the is_default of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501

        Флаг поля, которое предлагается для использования в пользовательском интерфейсе по-умолчанию.  # noqa: E501

        :return: The is_default of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :rtype: int
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this EfirDataHubModelsModelsMoexHistoryColumnsFields.

        Флаг поля, которое предлагается для использования в пользовательском интерфейсе по-умолчанию.  # noqa: E501

        :param is_default: The is_default of this EfirDataHubModelsModelsMoexHistoryColumnsFields.  # noqa: E501
        :type: int
        """

        self._is_default = is_default

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EfirDataHubModelsModelsMoexHistoryColumnsFields, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EfirDataHubModelsModelsMoexHistoryColumnsFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
